<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Btrfs on 小类随手记</title><link>https://dev.leiyanhui.com/categories/btrfs/</link><description>Recent content in Btrfs on 小类随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 23 Dec 2022 01:14:20 +0800</lastBuildDate><atom:link href="https://dev.leiyanhui.com/categories/btrfs/index.xml" rel="self" type="application/rss+xml"/><item><title>windows 使用btrfs分区</title><link>https://dev.leiyanhui.com/win/winbtrfs/</link><pubDate>Fri, 23 Dec 2022 01:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/win/winbtrfs/</guid><description>&lt;p&gt;btrfs 大有替代 ext4的趋势，支持压缩 支持快照 简直爽的不要不要的&lt;/p&gt;
&lt;p&gt;win10下启用btrfs 经过长时间使用发现winbtrfs这个项目算是相对不错 且稳定的
&lt;a class="link" href="https://github.com/maharmstone/btrfs" target="_blank" rel="noopener"
&gt;https://github.com/maharmstone/btrfs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装方法&lt;/p&gt;
&lt;p&gt;下载，https://github.com/maharmstone/btrfs/releases/download/v1.8.1/btrfs-1.8.1.zip 解压，注意 是 &lt;code&gt;btrfs-XX.zip&lt;/code&gt; 不是debug和pdb那两个&lt;/p&gt;
&lt;p&gt;右键 btrfs.inf ,安装，不用重启即可使用&lt;/p&gt;
&lt;p&gt;测试 大文件可以全速读写 4k 未测试。&lt;/p&gt;
&lt;h2 id="后记"&gt;后记
&lt;/h2&gt;&lt;h3 id="winpe下"&gt;winpe下
&lt;/h3&gt;&lt;p&gt;测试winpe 为 firpe v1.8.1 ，也支持。 winpe下不需要重启即可使用&lt;/p&gt;
&lt;h3 id="不建议主力"&gt;不建议主力
&lt;/h3&gt;&lt;p&gt;win下使用linux原生分区格式，建议还是应急为主。&lt;br&gt;
如果你的系统以win为主，建议还是exfat 兼容性处理起来更简单 也更稳。&lt;br&gt;
如果是linux为主的话，那么 上btrfs 吧！不会后悔&lt;/p&gt;</description></item><item><title>btrfs 文件系统 简要说明</title><link>https://dev.leiyanhui.com/linux/btrfs/</link><pubDate>Wed, 21 Dec 2022 06:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/linux/btrfs/</guid><description>&lt;h2 id="格式化"&gt;格式化
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkfs.btrfs /dev/nvme0n1p4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkfs.btrfs -f /dev/nvme0n1p4 #强制
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;lsblk
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="压缩"&gt;压缩
&lt;/h2&gt;&lt;h3 id="挂载时候全盘启用压缩"&gt;挂载时候全盘启用压缩
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mount -o compress=lzo /dev/nvme0n1p4 /mnt
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mount -o compress=zstd /dev/sdx /mnt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;自动挂载fstab&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/dev/nvme0n1p4 / btrfs defaults,compress-force=lzo,subvol=snapshot 0 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;lzo&lt;/code&gt;是压缩算法，目前btrfs支持lzo zlib ZSTD三种算法,旧版只支持lzo zlib ，默认压缩方式是 zlib 压缩等级是3&lt;/p&gt;
&lt;h3 id="单文件或者路径压缩"&gt;单文件或者路径压缩
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chattr +c file
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;btrfs property set file compression zstd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="关于写复制"&gt;关于写复制
&lt;/h2&gt;&lt;p&gt;改动频繁的文件，务必 使用chattr命令给文件或目录添加C属性&lt;/p&gt;
&lt;p&gt;windows下可以全速读写btrfs分区：&lt;a class="link" href="https://dev.leiyanhui.com/win/winbtrfs/" target="_blank" rel="noopener"
&gt;https://dev.leiyanhui.com/win/winbtrfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考： &lt;a class="link" href="https://btrfs.readthedocs.io/en/latest/btrfs-man5.html#how-to-enable-compression" target="_blank" rel="noopener"
&gt;https://btrfs.readthedocs.io/en/latest/btrfs-man5.html#how-to-enable-compression&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="后记"&gt;后记
&lt;/h2&gt;&lt;h3 id="winpe-支持"&gt;winpe 支持
&lt;/h3&gt;&lt;p&gt;测试winpe 为 firpe v1.8.1&lt;/p&gt;
&lt;h3 id="其他"&gt;其他
&lt;/h3&gt;&lt;p&gt;真的不建议再用exfat了，
macos的话，也可以用虚拟机映射分区的方法访问，然后sftp或者其他方式再挂载出来。
另外爱折腾我们最爱的ventoy 尚不支持 btrfs&lt;/p&gt;</description></item></channel></rss>