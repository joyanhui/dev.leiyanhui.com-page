<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cluster on 小类随手记</title><link>https://dev.leiyanhui.com/categories/cluster/</link><description>Recent content in Cluster on 小类随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 30 Nov 2023 08:14:20 +0800</lastBuildDate><atom:link href="https://dev.leiyanhui.com/categories/cluster/index.xml" rel="self" type="application/rss+xml"/><item><title>golang 从redis cluster获取所有keys</title><link>https://dev.leiyanhui.com/golang/getkeyswithprefixforcluster/</link><pubDate>Thu, 30 Nov 2023 08:14:20 +0800</pubDate><guid>https://dev.leiyanhui.com/golang/getkeyswithprefixforcluster/</guid><description>&lt;p&gt;使用 ForEachMaster 即可，如果从Slave获取有可能会有重复的需要另外去重。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;GetKeysWithPrefixForCluster&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ClusterClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;prefix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 从所有主节点中依次获取&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rdb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForEachMaster&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;shard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;thisKeys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;shard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;thisKeys&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;GetKeysWithPrefixForCluster err:&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;//keys=unique(keys)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;去重复&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keysMap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;uniqueKeys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keysMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keysMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;uniqueKeys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uniqueKeys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;uniqueKeys&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>docker 创建redis 集群 以及tls等</title><link>https://dev.leiyanhui.com/docker/redis/</link><pubDate>Fri, 08 Sep 2023 21:15:20 +0800</pubDate><guid>https://dev.leiyanhui.com/docker/redis/</guid><description>&lt;p&gt;需要2个文件 一个 shell(redis_docker_start.sh) 一个 redis.conf 模板 (redis_docker_tpl.conf)&lt;br&gt;
如果需要配置tls 需要用redis自带的工具创建一下自签名证书，或者购买证书。&lt;/p&gt;
&lt;p&gt;redis自带的证书创建 ： &lt;a class="link" href="https://github.com/redis/redis/blob/unstable/utils/gen-test-certs.sh" target="_blank" rel="noopener"
&gt;https://github.com/redis/redis/blob/unstable/utils/gen-test-certs.sh&lt;/a&gt; 可以自己修改一下，最后会创建11个文件。&lt;/p&gt;
&lt;p&gt;因为在公网异地集群，我这里只记录tls的集群&lt;/p&gt;
&lt;h2 id="创建一个节点"&gt;创建一个节点
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bash redis_docker_start.sh &lt;span class="m"&gt;6078&lt;/span&gt; &lt;span class="m"&gt;6079&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="连接到节点"&gt;连接到节点
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;redis-cli --tls &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --cacert /home/xxx/tls/ca.crt &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -a XXXXX &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -h 10.1.1.75 -p &lt;span class="m"&gt;6079&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;只需要指定ca.crt即可&lt;/p&gt;
&lt;h2 id="redis_docker_startsh"&gt;redis_docker_start.sh
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt; 10
&lt;/span&gt;&lt;span class="lnt"&gt; 11
&lt;/span&gt;&lt;span class="lnt"&gt; 12
&lt;/span&gt;&lt;span class="lnt"&gt; 13
&lt;/span&gt;&lt;span class="lnt"&gt; 14
&lt;/span&gt;&lt;span class="lnt"&gt; 15
&lt;/span&gt;&lt;span class="lnt"&gt; 16
&lt;/span&gt;&lt;span class="lnt"&gt; 17
&lt;/span&gt;&lt;span class="lnt"&gt; 18
&lt;/span&gt;&lt;span class="lnt"&gt; 19
&lt;/span&gt;&lt;span class="lnt"&gt; 20
&lt;/span&gt;&lt;span class="lnt"&gt; 21
&lt;/span&gt;&lt;span class="lnt"&gt; 22
&lt;/span&gt;&lt;span class="lnt"&gt; 23
&lt;/span&gt;&lt;span class="lnt"&gt; 24
&lt;/span&gt;&lt;span class="lnt"&gt; 25
&lt;/span&gt;&lt;span class="lnt"&gt; 26
&lt;/span&gt;&lt;span class="lnt"&gt; 27
&lt;/span&gt;&lt;span class="lnt"&gt; 28
&lt;/span&gt;&lt;span class="lnt"&gt; 29
&lt;/span&gt;&lt;span class="lnt"&gt; 30
&lt;/span&gt;&lt;span class="lnt"&gt; 31
&lt;/span&gt;&lt;span class="lnt"&gt; 32
&lt;/span&gt;&lt;span class="lnt"&gt; 33
&lt;/span&gt;&lt;span class="lnt"&gt; 34
&lt;/span&gt;&lt;span class="lnt"&gt; 35
&lt;/span&gt;&lt;span class="lnt"&gt; 36
&lt;/span&gt;&lt;span class="lnt"&gt; 37
&lt;/span&gt;&lt;span class="lnt"&gt; 38
&lt;/span&gt;&lt;span class="lnt"&gt; 39
&lt;/span&gt;&lt;span class="lnt"&gt; 40
&lt;/span&gt;&lt;span class="lnt"&gt; 41
&lt;/span&gt;&lt;span class="lnt"&gt; 42
&lt;/span&gt;&lt;span class="lnt"&gt; 43
&lt;/span&gt;&lt;span class="lnt"&gt; 44
&lt;/span&gt;&lt;span class="lnt"&gt; 45
&lt;/span&gt;&lt;span class="lnt"&gt; 46
&lt;/span&gt;&lt;span class="lnt"&gt; 47
&lt;/span&gt;&lt;span class="lnt"&gt; 48
&lt;/span&gt;&lt;span class="lnt"&gt; 49
&lt;/span&gt;&lt;span class="lnt"&gt; 50
&lt;/span&gt;&lt;span class="lnt"&gt; 51
&lt;/span&gt;&lt;span class="lnt"&gt; 52
&lt;/span&gt;&lt;span class="lnt"&gt; 53
&lt;/span&gt;&lt;span class="lnt"&gt; 54
&lt;/span&gt;&lt;span class="lnt"&gt; 55
&lt;/span&gt;&lt;span class="lnt"&gt; 56
&lt;/span&gt;&lt;span class="lnt"&gt; 57
&lt;/span&gt;&lt;span class="lnt"&gt; 58
&lt;/span&gt;&lt;span class="lnt"&gt; 59
&lt;/span&gt;&lt;span class="lnt"&gt; 60
&lt;/span&gt;&lt;span class="lnt"&gt; 61
&lt;/span&gt;&lt;span class="lnt"&gt; 62
&lt;/span&gt;&lt;span class="lnt"&gt; 63
&lt;/span&gt;&lt;span class="lnt"&gt; 64
&lt;/span&gt;&lt;span class="lnt"&gt; 65
&lt;/span&gt;&lt;span class="lnt"&gt; 66
&lt;/span&gt;&lt;span class="lnt"&gt; 67
&lt;/span&gt;&lt;span class="lnt"&gt; 68
&lt;/span&gt;&lt;span class="lnt"&gt; 69
&lt;/span&gt;&lt;span class="lnt"&gt; 70
&lt;/span&gt;&lt;span class="lnt"&gt; 71
&lt;/span&gt;&lt;span class="lnt"&gt; 72
&lt;/span&gt;&lt;span class="lnt"&gt; 73
&lt;/span&gt;&lt;span class="lnt"&gt; 74
&lt;/span&gt;&lt;span class="lnt"&gt; 75
&lt;/span&gt;&lt;span class="lnt"&gt; 76
&lt;/span&gt;&lt;span class="lnt"&gt; 77
&lt;/span&gt;&lt;span class="lnt"&gt; 78
&lt;/span&gt;&lt;span class="lnt"&gt; 79
&lt;/span&gt;&lt;span class="lnt"&gt; 80
&lt;/span&gt;&lt;span class="lnt"&gt; 81
&lt;/span&gt;&lt;span class="lnt"&gt; 82
&lt;/span&gt;&lt;span class="lnt"&gt; 83
&lt;/span&gt;&lt;span class="lnt"&gt; 84
&lt;/span&gt;&lt;span class="lnt"&gt; 85
&lt;/span&gt;&lt;span class="lnt"&gt; 86
&lt;/span&gt;&lt;span class="lnt"&gt; 87
&lt;/span&gt;&lt;span class="lnt"&gt; 88
&lt;/span&gt;&lt;span class="lnt"&gt; 89
&lt;/span&gt;&lt;span class="lnt"&gt; 90
&lt;/span&gt;&lt;span class="lnt"&gt; 91
&lt;/span&gt;&lt;span class="lnt"&gt; 92
&lt;/span&gt;&lt;span class="lnt"&gt; 93
&lt;/span&gt;&lt;span class="lnt"&gt; 94
&lt;/span&gt;&lt;span class="lnt"&gt; 95
&lt;/span&gt;&lt;span class="lnt"&gt; 96
&lt;/span&gt;&lt;span class="lnt"&gt; 97
&lt;/span&gt;&lt;span class="lnt"&gt; 98
&lt;/span&gt;&lt;span class="lnt"&gt; 99
&lt;/span&gt;&lt;span class="lnt"&gt;100
&lt;/span&gt;&lt;span class="lnt"&gt;101
&lt;/span&gt;&lt;span class="lnt"&gt;102
&lt;/span&gt;&lt;span class="lnt"&gt;103
&lt;/span&gt;&lt;span class="lnt"&gt;104
&lt;/span&gt;&lt;span class="lnt"&gt;105
&lt;/span&gt;&lt;span class="lnt"&gt;106
&lt;/span&gt;&lt;span class="lnt"&gt;107
&lt;/span&gt;&lt;span class="lnt"&gt;108
&lt;/span&gt;&lt;span class="lnt"&gt;109
&lt;/span&gt;&lt;span class="lnt"&gt;110
&lt;/span&gt;&lt;span class="lnt"&gt;111
&lt;/span&gt;&lt;span class="lnt"&gt;112
&lt;/span&gt;&lt;span class="lnt"&gt;113
&lt;/span&gt;&lt;span class="lnt"&gt;114
&lt;/span&gt;&lt;span class="lnt"&gt;115
&lt;/span&gt;&lt;span class="lnt"&gt;116
&lt;/span&gt;&lt;span class="lnt"&gt;117
&lt;/span&gt;&lt;span class="lnt"&gt;118
&lt;/span&gt;&lt;span class="lnt"&gt;119
&lt;/span&gt;&lt;span class="lnt"&gt;120
&lt;/span&gt;&lt;span class="lnt"&gt;121
&lt;/span&gt;&lt;span class="lnt"&gt;122
&lt;/span&gt;&lt;span class="lnt"&gt;123
&lt;/span&gt;&lt;span class="lnt"&gt;124
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BASH_VERSION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;请使用 bash 命令执行该脚本&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ 创建证书文件 函数 #################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;function&lt;/span&gt; creatTLS_file &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/ca.crt &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/ca.key &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/ca.txt &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/client.crt &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/client.key &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/openssl.cnf &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/redis.crt &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/redis.dh &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/redis.key &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/server.crt&lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls/server.key&lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;XXXXX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 主程序 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;tcp端口参数 \$1 不存在 无法继续&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;tls端口参数 \$2 不存在 无法继续&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;tcp端口:&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; tls端口:&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 相关文件 配置###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;redisFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/redis_docker
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; “创建目录和日志文件到：&lt;span class="nv"&gt;$redisFile&lt;/span&gt;”
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/data &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;rm -rf &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/log/redis.log &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/log/redis.log &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod -R &lt;span class="m"&gt;777&lt;/span&gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chmod -R &lt;span class="m"&gt;777&lt;/span&gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/data
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 创建 acl 这个不是必须的###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; “创建acl文件 &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/users.acl”
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;user default on #XXXXXX ~* &amp;amp;* +@all&amp;#34;&lt;/span&gt;&amp;gt;&lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/users.acl
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 复制配置文件 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; “创建配置文件 &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/redis.conf”
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;rm -rf &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/redis.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cp redis_docker_tpl.conf &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/redis.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 复制配置文件 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tcp 端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s2"&gt;&amp;#34;s/{port}/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;#34;&lt;/span&gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/redis.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls 端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s2"&gt;&amp;#34;s/{tlsPort}/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;#34;&lt;/span&gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/redis.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 密码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s2"&gt;&amp;#34;s/{password}/XXXXX/g&amp;#34;&lt;/span&gt; &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf/redis.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 创建证书文件 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; “创建证书文件到目录 &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls“
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;creatTLS_file &lt;span class="c1"&gt;# 创建证书文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 启动docker ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;删除旧容器 redis_&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; ....&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker stop redis_&lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;sudo docker rm redis_&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;创建新容器 redis_&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; ....&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker run -itd --name redis_&lt;span class="nv"&gt;$1&lt;/span&gt; --hostname redis_&lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --restart&lt;span class="o"&gt;=&lt;/span&gt;always --net&lt;span class="o"&gt;=&lt;/span&gt;host &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -v &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/cnf:/cnf &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -v &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/data:/var/lib/redis &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -v &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;/log:/var/log/redis &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -v &lt;span class="nv"&gt;$redisFile&lt;/span&gt;/tls:/etc/ssl/certs &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -d redis:7.2.1-alpine3.18 redis-server /cnf/redis.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker logs -f redis_&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls 测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -d redis:7.2.1-alpine3.18 redis-server /volume/cnf/redis.conf &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# docker run --name test redis:7.2.1-alpine3.18&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="redis_docker_tplconf"&gt;redis_docker_tpl.conf
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt; 10
&lt;/span&gt;&lt;span class="lnt"&gt; 11
&lt;/span&gt;&lt;span class="lnt"&gt; 12
&lt;/span&gt;&lt;span class="lnt"&gt; 13
&lt;/span&gt;&lt;span class="lnt"&gt; 14
&lt;/span&gt;&lt;span class="lnt"&gt; 15
&lt;/span&gt;&lt;span class="lnt"&gt; 16
&lt;/span&gt;&lt;span class="lnt"&gt; 17
&lt;/span&gt;&lt;span class="lnt"&gt; 18
&lt;/span&gt;&lt;span class="lnt"&gt; 19
&lt;/span&gt;&lt;span class="lnt"&gt; 20
&lt;/span&gt;&lt;span class="lnt"&gt; 21
&lt;/span&gt;&lt;span class="lnt"&gt; 22
&lt;/span&gt;&lt;span class="lnt"&gt; 23
&lt;/span&gt;&lt;span class="lnt"&gt; 24
&lt;/span&gt;&lt;span class="lnt"&gt; 25
&lt;/span&gt;&lt;span class="lnt"&gt; 26
&lt;/span&gt;&lt;span class="lnt"&gt; 27
&lt;/span&gt;&lt;span class="lnt"&gt; 28
&lt;/span&gt;&lt;span class="lnt"&gt; 29
&lt;/span&gt;&lt;span class="lnt"&gt; 30
&lt;/span&gt;&lt;span class="lnt"&gt; 31
&lt;/span&gt;&lt;span class="lnt"&gt; 32
&lt;/span&gt;&lt;span class="lnt"&gt; 33
&lt;/span&gt;&lt;span class="lnt"&gt; 34
&lt;/span&gt;&lt;span class="lnt"&gt; 35
&lt;/span&gt;&lt;span class="lnt"&gt; 36
&lt;/span&gt;&lt;span class="lnt"&gt; 37
&lt;/span&gt;&lt;span class="lnt"&gt; 38
&lt;/span&gt;&lt;span class="lnt"&gt; 39
&lt;/span&gt;&lt;span class="lnt"&gt; 40
&lt;/span&gt;&lt;span class="lnt"&gt; 41
&lt;/span&gt;&lt;span class="lnt"&gt; 42
&lt;/span&gt;&lt;span class="lnt"&gt; 43
&lt;/span&gt;&lt;span class="lnt"&gt; 44
&lt;/span&gt;&lt;span class="lnt"&gt; 45
&lt;/span&gt;&lt;span class="lnt"&gt; 46
&lt;/span&gt;&lt;span class="lnt"&gt; 47
&lt;/span&gt;&lt;span class="lnt"&gt; 48
&lt;/span&gt;&lt;span class="lnt"&gt; 49
&lt;/span&gt;&lt;span class="lnt"&gt; 50
&lt;/span&gt;&lt;span class="lnt"&gt; 51
&lt;/span&gt;&lt;span class="lnt"&gt; 52
&lt;/span&gt;&lt;span class="lnt"&gt; 53
&lt;/span&gt;&lt;span class="lnt"&gt; 54
&lt;/span&gt;&lt;span class="lnt"&gt; 55
&lt;/span&gt;&lt;span class="lnt"&gt; 56
&lt;/span&gt;&lt;span class="lnt"&gt; 57
&lt;/span&gt;&lt;span class="lnt"&gt; 58
&lt;/span&gt;&lt;span class="lnt"&gt; 59
&lt;/span&gt;&lt;span class="lnt"&gt; 60
&lt;/span&gt;&lt;span class="lnt"&gt; 61
&lt;/span&gt;&lt;span class="lnt"&gt; 62
&lt;/span&gt;&lt;span class="lnt"&gt; 63
&lt;/span&gt;&lt;span class="lnt"&gt; 64
&lt;/span&gt;&lt;span class="lnt"&gt; 65
&lt;/span&gt;&lt;span class="lnt"&gt; 66
&lt;/span&gt;&lt;span class="lnt"&gt; 67
&lt;/span&gt;&lt;span class="lnt"&gt; 68
&lt;/span&gt;&lt;span class="lnt"&gt; 69
&lt;/span&gt;&lt;span class="lnt"&gt; 70
&lt;/span&gt;&lt;span class="lnt"&gt; 71
&lt;/span&gt;&lt;span class="lnt"&gt; 72
&lt;/span&gt;&lt;span class="lnt"&gt; 73
&lt;/span&gt;&lt;span class="lnt"&gt; 74
&lt;/span&gt;&lt;span class="lnt"&gt; 75
&lt;/span&gt;&lt;span class="lnt"&gt; 76
&lt;/span&gt;&lt;span class="lnt"&gt; 77
&lt;/span&gt;&lt;span class="lnt"&gt; 78
&lt;/span&gt;&lt;span class="lnt"&gt; 79
&lt;/span&gt;&lt;span class="lnt"&gt; 80
&lt;/span&gt;&lt;span class="lnt"&gt; 81
&lt;/span&gt;&lt;span class="lnt"&gt; 82
&lt;/span&gt;&lt;span class="lnt"&gt; 83
&lt;/span&gt;&lt;span class="lnt"&gt; 84
&lt;/span&gt;&lt;span class="lnt"&gt; 85
&lt;/span&gt;&lt;span class="lnt"&gt; 86
&lt;/span&gt;&lt;span class="lnt"&gt; 87
&lt;/span&gt;&lt;span class="lnt"&gt; 88
&lt;/span&gt;&lt;span class="lnt"&gt; 89
&lt;/span&gt;&lt;span class="lnt"&gt; 90
&lt;/span&gt;&lt;span class="lnt"&gt; 91
&lt;/span&gt;&lt;span class="lnt"&gt; 92
&lt;/span&gt;&lt;span class="lnt"&gt; 93
&lt;/span&gt;&lt;span class="lnt"&gt; 94
&lt;/span&gt;&lt;span class="lnt"&gt; 95
&lt;/span&gt;&lt;span class="lnt"&gt; 96
&lt;/span&gt;&lt;span class="lnt"&gt; 97
&lt;/span&gt;&lt;span class="lnt"&gt; 98
&lt;/span&gt;&lt;span class="lnt"&gt; 99
&lt;/span&gt;&lt;span class="lnt"&gt; 100
&lt;/span&gt;&lt;span class="lnt"&gt; 101
&lt;/span&gt;&lt;span class="lnt"&gt; 102
&lt;/span&gt;&lt;span class="lnt"&gt; 103
&lt;/span&gt;&lt;span class="lnt"&gt; 104
&lt;/span&gt;&lt;span class="lnt"&gt; 105
&lt;/span&gt;&lt;span class="lnt"&gt; 106
&lt;/span&gt;&lt;span class="lnt"&gt; 107
&lt;/span&gt;&lt;span class="lnt"&gt; 108
&lt;/span&gt;&lt;span class="lnt"&gt; 109
&lt;/span&gt;&lt;span class="lnt"&gt; 110
&lt;/span&gt;&lt;span class="lnt"&gt; 111
&lt;/span&gt;&lt;span class="lnt"&gt; 112
&lt;/span&gt;&lt;span class="lnt"&gt; 113
&lt;/span&gt;&lt;span class="lnt"&gt; 114
&lt;/span&gt;&lt;span class="lnt"&gt; 115
&lt;/span&gt;&lt;span class="lnt"&gt; 116
&lt;/span&gt;&lt;span class="lnt"&gt; 117
&lt;/span&gt;&lt;span class="lnt"&gt; 118
&lt;/span&gt;&lt;span class="lnt"&gt; 119
&lt;/span&gt;&lt;span class="lnt"&gt; 120
&lt;/span&gt;&lt;span class="lnt"&gt; 121
&lt;/span&gt;&lt;span class="lnt"&gt; 122
&lt;/span&gt;&lt;span class="lnt"&gt; 123
&lt;/span&gt;&lt;span class="lnt"&gt; 124
&lt;/span&gt;&lt;span class="lnt"&gt; 125
&lt;/span&gt;&lt;span class="lnt"&gt; 126
&lt;/span&gt;&lt;span class="lnt"&gt; 127
&lt;/span&gt;&lt;span class="lnt"&gt; 128
&lt;/span&gt;&lt;span class="lnt"&gt; 129
&lt;/span&gt;&lt;span class="lnt"&gt; 130
&lt;/span&gt;&lt;span class="lnt"&gt; 131
&lt;/span&gt;&lt;span class="lnt"&gt; 132
&lt;/span&gt;&lt;span class="lnt"&gt; 133
&lt;/span&gt;&lt;span class="lnt"&gt; 134
&lt;/span&gt;&lt;span class="lnt"&gt; 135
&lt;/span&gt;&lt;span class="lnt"&gt; 136
&lt;/span&gt;&lt;span class="lnt"&gt; 137
&lt;/span&gt;&lt;span class="lnt"&gt; 138
&lt;/span&gt;&lt;span class="lnt"&gt; 139
&lt;/span&gt;&lt;span class="lnt"&gt; 140
&lt;/span&gt;&lt;span class="lnt"&gt; 141
&lt;/span&gt;&lt;span class="lnt"&gt; 142
&lt;/span&gt;&lt;span class="lnt"&gt; 143
&lt;/span&gt;&lt;span class="lnt"&gt; 144
&lt;/span&gt;&lt;span class="lnt"&gt; 145
&lt;/span&gt;&lt;span class="lnt"&gt; 146
&lt;/span&gt;&lt;span class="lnt"&gt; 147
&lt;/span&gt;&lt;span class="lnt"&gt; 148
&lt;/span&gt;&lt;span class="lnt"&gt; 149
&lt;/span&gt;&lt;span class="lnt"&gt; 150
&lt;/span&gt;&lt;span class="lnt"&gt; 151
&lt;/span&gt;&lt;span class="lnt"&gt; 152
&lt;/span&gt;&lt;span class="lnt"&gt; 153
&lt;/span&gt;&lt;span class="lnt"&gt; 154
&lt;/span&gt;&lt;span class="lnt"&gt; 155
&lt;/span&gt;&lt;span class="lnt"&gt; 156
&lt;/span&gt;&lt;span class="lnt"&gt; 157
&lt;/span&gt;&lt;span class="lnt"&gt; 158
&lt;/span&gt;&lt;span class="lnt"&gt; 159
&lt;/span&gt;&lt;span class="lnt"&gt; 160
&lt;/span&gt;&lt;span class="lnt"&gt; 161
&lt;/span&gt;&lt;span class="lnt"&gt; 162
&lt;/span&gt;&lt;span class="lnt"&gt; 163
&lt;/span&gt;&lt;span class="lnt"&gt; 164
&lt;/span&gt;&lt;span class="lnt"&gt; 165
&lt;/span&gt;&lt;span class="lnt"&gt; 166
&lt;/span&gt;&lt;span class="lnt"&gt; 167
&lt;/span&gt;&lt;span class="lnt"&gt; 168
&lt;/span&gt;&lt;span class="lnt"&gt; 169
&lt;/span&gt;&lt;span class="lnt"&gt; 170
&lt;/span&gt;&lt;span class="lnt"&gt; 171
&lt;/span&gt;&lt;span class="lnt"&gt; 172
&lt;/span&gt;&lt;span class="lnt"&gt; 173
&lt;/span&gt;&lt;span class="lnt"&gt; 174
&lt;/span&gt;&lt;span class="lnt"&gt; 175
&lt;/span&gt;&lt;span class="lnt"&gt; 176
&lt;/span&gt;&lt;span class="lnt"&gt; 177
&lt;/span&gt;&lt;span class="lnt"&gt; 178
&lt;/span&gt;&lt;span class="lnt"&gt; 179
&lt;/span&gt;&lt;span class="lnt"&gt; 180
&lt;/span&gt;&lt;span class="lnt"&gt; 181
&lt;/span&gt;&lt;span class="lnt"&gt; 182
&lt;/span&gt;&lt;span class="lnt"&gt; 183
&lt;/span&gt;&lt;span class="lnt"&gt; 184
&lt;/span&gt;&lt;span class="lnt"&gt; 185
&lt;/span&gt;&lt;span class="lnt"&gt; 186
&lt;/span&gt;&lt;span class="lnt"&gt; 187
&lt;/span&gt;&lt;span class="lnt"&gt; 188
&lt;/span&gt;&lt;span class="lnt"&gt; 189
&lt;/span&gt;&lt;span class="lnt"&gt; 190
&lt;/span&gt;&lt;span class="lnt"&gt; 191
&lt;/span&gt;&lt;span class="lnt"&gt; 192
&lt;/span&gt;&lt;span class="lnt"&gt; 193
&lt;/span&gt;&lt;span class="lnt"&gt; 194
&lt;/span&gt;&lt;span class="lnt"&gt; 195
&lt;/span&gt;&lt;span class="lnt"&gt; 196
&lt;/span&gt;&lt;span class="lnt"&gt; 197
&lt;/span&gt;&lt;span class="lnt"&gt; 198
&lt;/span&gt;&lt;span class="lnt"&gt; 199
&lt;/span&gt;&lt;span class="lnt"&gt; 200
&lt;/span&gt;&lt;span class="lnt"&gt; 201
&lt;/span&gt;&lt;span class="lnt"&gt; 202
&lt;/span&gt;&lt;span class="lnt"&gt; 203
&lt;/span&gt;&lt;span class="lnt"&gt; 204
&lt;/span&gt;&lt;span class="lnt"&gt; 205
&lt;/span&gt;&lt;span class="lnt"&gt; 206
&lt;/span&gt;&lt;span class="lnt"&gt; 207
&lt;/span&gt;&lt;span class="lnt"&gt; 208
&lt;/span&gt;&lt;span class="lnt"&gt; 209
&lt;/span&gt;&lt;span class="lnt"&gt; 210
&lt;/span&gt;&lt;span class="lnt"&gt; 211
&lt;/span&gt;&lt;span class="lnt"&gt; 212
&lt;/span&gt;&lt;span class="lnt"&gt; 213
&lt;/span&gt;&lt;span class="lnt"&gt; 214
&lt;/span&gt;&lt;span class="lnt"&gt; 215
&lt;/span&gt;&lt;span class="lnt"&gt; 216
&lt;/span&gt;&lt;span class="lnt"&gt; 217
&lt;/span&gt;&lt;span class="lnt"&gt; 218
&lt;/span&gt;&lt;span class="lnt"&gt; 219
&lt;/span&gt;&lt;span class="lnt"&gt; 220
&lt;/span&gt;&lt;span class="lnt"&gt; 221
&lt;/span&gt;&lt;span class="lnt"&gt; 222
&lt;/span&gt;&lt;span class="lnt"&gt; 223
&lt;/span&gt;&lt;span class="lnt"&gt; 224
&lt;/span&gt;&lt;span class="lnt"&gt; 225
&lt;/span&gt;&lt;span class="lnt"&gt; 226
&lt;/span&gt;&lt;span class="lnt"&gt; 227
&lt;/span&gt;&lt;span class="lnt"&gt; 228
&lt;/span&gt;&lt;span class="lnt"&gt; 229
&lt;/span&gt;&lt;span class="lnt"&gt; 230
&lt;/span&gt;&lt;span class="lnt"&gt; 231
&lt;/span&gt;&lt;span class="lnt"&gt; 232
&lt;/span&gt;&lt;span class="lnt"&gt; 233
&lt;/span&gt;&lt;span class="lnt"&gt; 234
&lt;/span&gt;&lt;span class="lnt"&gt; 235
&lt;/span&gt;&lt;span class="lnt"&gt; 236
&lt;/span&gt;&lt;span class="lnt"&gt; 237
&lt;/span&gt;&lt;span class="lnt"&gt; 238
&lt;/span&gt;&lt;span class="lnt"&gt; 239
&lt;/span&gt;&lt;span class="lnt"&gt; 240
&lt;/span&gt;&lt;span class="lnt"&gt; 241
&lt;/span&gt;&lt;span class="lnt"&gt; 242
&lt;/span&gt;&lt;span class="lnt"&gt; 243
&lt;/span&gt;&lt;span class="lnt"&gt; 244
&lt;/span&gt;&lt;span class="lnt"&gt; 245
&lt;/span&gt;&lt;span class="lnt"&gt; 246
&lt;/span&gt;&lt;span class="lnt"&gt; 247
&lt;/span&gt;&lt;span class="lnt"&gt; 248
&lt;/span&gt;&lt;span class="lnt"&gt; 249
&lt;/span&gt;&lt;span class="lnt"&gt; 250
&lt;/span&gt;&lt;span class="lnt"&gt; 251
&lt;/span&gt;&lt;span class="lnt"&gt; 252
&lt;/span&gt;&lt;span class="lnt"&gt; 253
&lt;/span&gt;&lt;span class="lnt"&gt; 254
&lt;/span&gt;&lt;span class="lnt"&gt; 255
&lt;/span&gt;&lt;span class="lnt"&gt; 256
&lt;/span&gt;&lt;span class="lnt"&gt; 257
&lt;/span&gt;&lt;span class="lnt"&gt; 258
&lt;/span&gt;&lt;span class="lnt"&gt; 259
&lt;/span&gt;&lt;span class="lnt"&gt; 260
&lt;/span&gt;&lt;span class="lnt"&gt; 261
&lt;/span&gt;&lt;span class="lnt"&gt; 262
&lt;/span&gt;&lt;span class="lnt"&gt; 263
&lt;/span&gt;&lt;span class="lnt"&gt; 264
&lt;/span&gt;&lt;span class="lnt"&gt; 265
&lt;/span&gt;&lt;span class="lnt"&gt; 266
&lt;/span&gt;&lt;span class="lnt"&gt; 267
&lt;/span&gt;&lt;span class="lnt"&gt; 268
&lt;/span&gt;&lt;span class="lnt"&gt; 269
&lt;/span&gt;&lt;span class="lnt"&gt; 270
&lt;/span&gt;&lt;span class="lnt"&gt; 271
&lt;/span&gt;&lt;span class="lnt"&gt; 272
&lt;/span&gt;&lt;span class="lnt"&gt; 273
&lt;/span&gt;&lt;span class="lnt"&gt; 274
&lt;/span&gt;&lt;span class="lnt"&gt; 275
&lt;/span&gt;&lt;span class="lnt"&gt; 276
&lt;/span&gt;&lt;span class="lnt"&gt; 277
&lt;/span&gt;&lt;span class="lnt"&gt; 278
&lt;/span&gt;&lt;span class="lnt"&gt; 279
&lt;/span&gt;&lt;span class="lnt"&gt; 280
&lt;/span&gt;&lt;span class="lnt"&gt; 281
&lt;/span&gt;&lt;span class="lnt"&gt; 282
&lt;/span&gt;&lt;span class="lnt"&gt; 283
&lt;/span&gt;&lt;span class="lnt"&gt; 284
&lt;/span&gt;&lt;span class="lnt"&gt; 285
&lt;/span&gt;&lt;span class="lnt"&gt; 286
&lt;/span&gt;&lt;span class="lnt"&gt; 287
&lt;/span&gt;&lt;span class="lnt"&gt; 288
&lt;/span&gt;&lt;span class="lnt"&gt; 289
&lt;/span&gt;&lt;span class="lnt"&gt; 290
&lt;/span&gt;&lt;span class="lnt"&gt; 291
&lt;/span&gt;&lt;span class="lnt"&gt; 292
&lt;/span&gt;&lt;span class="lnt"&gt; 293
&lt;/span&gt;&lt;span class="lnt"&gt; 294
&lt;/span&gt;&lt;span class="lnt"&gt; 295
&lt;/span&gt;&lt;span class="lnt"&gt; 296
&lt;/span&gt;&lt;span class="lnt"&gt; 297
&lt;/span&gt;&lt;span class="lnt"&gt; 298
&lt;/span&gt;&lt;span class="lnt"&gt; 299
&lt;/span&gt;&lt;span class="lnt"&gt; 300
&lt;/span&gt;&lt;span class="lnt"&gt; 301
&lt;/span&gt;&lt;span class="lnt"&gt; 302
&lt;/span&gt;&lt;span class="lnt"&gt; 303
&lt;/span&gt;&lt;span class="lnt"&gt; 304
&lt;/span&gt;&lt;span class="lnt"&gt; 305
&lt;/span&gt;&lt;span class="lnt"&gt; 306
&lt;/span&gt;&lt;span class="lnt"&gt; 307
&lt;/span&gt;&lt;span class="lnt"&gt; 308
&lt;/span&gt;&lt;span class="lnt"&gt; 309
&lt;/span&gt;&lt;span class="lnt"&gt; 310
&lt;/span&gt;&lt;span class="lnt"&gt; 311
&lt;/span&gt;&lt;span class="lnt"&gt; 312
&lt;/span&gt;&lt;span class="lnt"&gt; 313
&lt;/span&gt;&lt;span class="lnt"&gt; 314
&lt;/span&gt;&lt;span class="lnt"&gt; 315
&lt;/span&gt;&lt;span class="lnt"&gt; 316
&lt;/span&gt;&lt;span class="lnt"&gt; 317
&lt;/span&gt;&lt;span class="lnt"&gt; 318
&lt;/span&gt;&lt;span class="lnt"&gt; 319
&lt;/span&gt;&lt;span class="lnt"&gt; 320
&lt;/span&gt;&lt;span class="lnt"&gt; 321
&lt;/span&gt;&lt;span class="lnt"&gt; 322
&lt;/span&gt;&lt;span class="lnt"&gt; 323
&lt;/span&gt;&lt;span class="lnt"&gt; 324
&lt;/span&gt;&lt;span class="lnt"&gt; 325
&lt;/span&gt;&lt;span class="lnt"&gt; 326
&lt;/span&gt;&lt;span class="lnt"&gt; 327
&lt;/span&gt;&lt;span class="lnt"&gt; 328
&lt;/span&gt;&lt;span class="lnt"&gt; 329
&lt;/span&gt;&lt;span class="lnt"&gt; 330
&lt;/span&gt;&lt;span class="lnt"&gt; 331
&lt;/span&gt;&lt;span class="lnt"&gt; 332
&lt;/span&gt;&lt;span class="lnt"&gt; 333
&lt;/span&gt;&lt;span class="lnt"&gt; 334
&lt;/span&gt;&lt;span class="lnt"&gt; 335
&lt;/span&gt;&lt;span class="lnt"&gt; 336
&lt;/span&gt;&lt;span class="lnt"&gt; 337
&lt;/span&gt;&lt;span class="lnt"&gt; 338
&lt;/span&gt;&lt;span class="lnt"&gt; 339
&lt;/span&gt;&lt;span class="lnt"&gt; 340
&lt;/span&gt;&lt;span class="lnt"&gt; 341
&lt;/span&gt;&lt;span class="lnt"&gt; 342
&lt;/span&gt;&lt;span class="lnt"&gt; 343
&lt;/span&gt;&lt;span class="lnt"&gt; 344
&lt;/span&gt;&lt;span class="lnt"&gt; 345
&lt;/span&gt;&lt;span class="lnt"&gt; 346
&lt;/span&gt;&lt;span class="lnt"&gt; 347
&lt;/span&gt;&lt;span class="lnt"&gt; 348
&lt;/span&gt;&lt;span class="lnt"&gt; 349
&lt;/span&gt;&lt;span class="lnt"&gt; 350
&lt;/span&gt;&lt;span class="lnt"&gt; 351
&lt;/span&gt;&lt;span class="lnt"&gt; 352
&lt;/span&gt;&lt;span class="lnt"&gt; 353
&lt;/span&gt;&lt;span class="lnt"&gt; 354
&lt;/span&gt;&lt;span class="lnt"&gt; 355
&lt;/span&gt;&lt;span class="lnt"&gt; 356
&lt;/span&gt;&lt;span class="lnt"&gt; 357
&lt;/span&gt;&lt;span class="lnt"&gt; 358
&lt;/span&gt;&lt;span class="lnt"&gt; 359
&lt;/span&gt;&lt;span class="lnt"&gt; 360
&lt;/span&gt;&lt;span class="lnt"&gt; 361
&lt;/span&gt;&lt;span class="lnt"&gt; 362
&lt;/span&gt;&lt;span class="lnt"&gt; 363
&lt;/span&gt;&lt;span class="lnt"&gt; 364
&lt;/span&gt;&lt;span class="lnt"&gt; 365
&lt;/span&gt;&lt;span class="lnt"&gt; 366
&lt;/span&gt;&lt;span class="lnt"&gt; 367
&lt;/span&gt;&lt;span class="lnt"&gt; 368
&lt;/span&gt;&lt;span class="lnt"&gt; 369
&lt;/span&gt;&lt;span class="lnt"&gt; 370
&lt;/span&gt;&lt;span class="lnt"&gt; 371
&lt;/span&gt;&lt;span class="lnt"&gt; 372
&lt;/span&gt;&lt;span class="lnt"&gt; 373
&lt;/span&gt;&lt;span class="lnt"&gt; 374
&lt;/span&gt;&lt;span class="lnt"&gt; 375
&lt;/span&gt;&lt;span class="lnt"&gt; 376
&lt;/span&gt;&lt;span class="lnt"&gt; 377
&lt;/span&gt;&lt;span class="lnt"&gt; 378
&lt;/span&gt;&lt;span class="lnt"&gt; 379
&lt;/span&gt;&lt;span class="lnt"&gt; 380
&lt;/span&gt;&lt;span class="lnt"&gt; 381
&lt;/span&gt;&lt;span class="lnt"&gt; 382
&lt;/span&gt;&lt;span class="lnt"&gt; 383
&lt;/span&gt;&lt;span class="lnt"&gt; 384
&lt;/span&gt;&lt;span class="lnt"&gt; 385
&lt;/span&gt;&lt;span class="lnt"&gt; 386
&lt;/span&gt;&lt;span class="lnt"&gt; 387
&lt;/span&gt;&lt;span class="lnt"&gt; 388
&lt;/span&gt;&lt;span class="lnt"&gt; 389
&lt;/span&gt;&lt;span class="lnt"&gt; 390
&lt;/span&gt;&lt;span class="lnt"&gt; 391
&lt;/span&gt;&lt;span class="lnt"&gt; 392
&lt;/span&gt;&lt;span class="lnt"&gt; 393
&lt;/span&gt;&lt;span class="lnt"&gt; 394
&lt;/span&gt;&lt;span class="lnt"&gt; 395
&lt;/span&gt;&lt;span class="lnt"&gt; 396
&lt;/span&gt;&lt;span class="lnt"&gt; 397
&lt;/span&gt;&lt;span class="lnt"&gt; 398
&lt;/span&gt;&lt;span class="lnt"&gt; 399
&lt;/span&gt;&lt;span class="lnt"&gt; 400
&lt;/span&gt;&lt;span class="lnt"&gt; 401
&lt;/span&gt;&lt;span class="lnt"&gt; 402
&lt;/span&gt;&lt;span class="lnt"&gt; 403
&lt;/span&gt;&lt;span class="lnt"&gt; 404
&lt;/span&gt;&lt;span class="lnt"&gt; 405
&lt;/span&gt;&lt;span class="lnt"&gt; 406
&lt;/span&gt;&lt;span class="lnt"&gt; 407
&lt;/span&gt;&lt;span class="lnt"&gt; 408
&lt;/span&gt;&lt;span class="lnt"&gt; 409
&lt;/span&gt;&lt;span class="lnt"&gt; 410
&lt;/span&gt;&lt;span class="lnt"&gt; 411
&lt;/span&gt;&lt;span class="lnt"&gt; 412
&lt;/span&gt;&lt;span class="lnt"&gt; 413
&lt;/span&gt;&lt;span class="lnt"&gt; 414
&lt;/span&gt;&lt;span class="lnt"&gt; 415
&lt;/span&gt;&lt;span class="lnt"&gt; 416
&lt;/span&gt;&lt;span class="lnt"&gt; 417
&lt;/span&gt;&lt;span class="lnt"&gt; 418
&lt;/span&gt;&lt;span class="lnt"&gt; 419
&lt;/span&gt;&lt;span class="lnt"&gt; 420
&lt;/span&gt;&lt;span class="lnt"&gt; 421
&lt;/span&gt;&lt;span class="lnt"&gt; 422
&lt;/span&gt;&lt;span class="lnt"&gt; 423
&lt;/span&gt;&lt;span class="lnt"&gt; 424
&lt;/span&gt;&lt;span class="lnt"&gt; 425
&lt;/span&gt;&lt;span class="lnt"&gt; 426
&lt;/span&gt;&lt;span class="lnt"&gt; 427
&lt;/span&gt;&lt;span class="lnt"&gt; 428
&lt;/span&gt;&lt;span class="lnt"&gt; 429
&lt;/span&gt;&lt;span class="lnt"&gt; 430
&lt;/span&gt;&lt;span class="lnt"&gt; 431
&lt;/span&gt;&lt;span class="lnt"&gt; 432
&lt;/span&gt;&lt;span class="lnt"&gt; 433
&lt;/span&gt;&lt;span class="lnt"&gt; 434
&lt;/span&gt;&lt;span class="lnt"&gt; 435
&lt;/span&gt;&lt;span class="lnt"&gt; 436
&lt;/span&gt;&lt;span class="lnt"&gt; 437
&lt;/span&gt;&lt;span class="lnt"&gt; 438
&lt;/span&gt;&lt;span class="lnt"&gt; 439
&lt;/span&gt;&lt;span class="lnt"&gt; 440
&lt;/span&gt;&lt;span class="lnt"&gt; 441
&lt;/span&gt;&lt;span class="lnt"&gt; 442
&lt;/span&gt;&lt;span class="lnt"&gt; 443
&lt;/span&gt;&lt;span class="lnt"&gt; 444
&lt;/span&gt;&lt;span class="lnt"&gt; 445
&lt;/span&gt;&lt;span class="lnt"&gt; 446
&lt;/span&gt;&lt;span class="lnt"&gt; 447
&lt;/span&gt;&lt;span class="lnt"&gt; 448
&lt;/span&gt;&lt;span class="lnt"&gt; 449
&lt;/span&gt;&lt;span class="lnt"&gt; 450
&lt;/span&gt;&lt;span class="lnt"&gt; 451
&lt;/span&gt;&lt;span class="lnt"&gt; 452
&lt;/span&gt;&lt;span class="lnt"&gt; 453
&lt;/span&gt;&lt;span class="lnt"&gt; 454
&lt;/span&gt;&lt;span class="lnt"&gt; 455
&lt;/span&gt;&lt;span class="lnt"&gt; 456
&lt;/span&gt;&lt;span class="lnt"&gt; 457
&lt;/span&gt;&lt;span class="lnt"&gt; 458
&lt;/span&gt;&lt;span class="lnt"&gt; 459
&lt;/span&gt;&lt;span class="lnt"&gt; 460
&lt;/span&gt;&lt;span class="lnt"&gt; 461
&lt;/span&gt;&lt;span class="lnt"&gt; 462
&lt;/span&gt;&lt;span class="lnt"&gt; 463
&lt;/span&gt;&lt;span class="lnt"&gt; 464
&lt;/span&gt;&lt;span class="lnt"&gt; 465
&lt;/span&gt;&lt;span class="lnt"&gt; 466
&lt;/span&gt;&lt;span class="lnt"&gt; 467
&lt;/span&gt;&lt;span class="lnt"&gt; 468
&lt;/span&gt;&lt;span class="lnt"&gt; 469
&lt;/span&gt;&lt;span class="lnt"&gt; 470
&lt;/span&gt;&lt;span class="lnt"&gt; 471
&lt;/span&gt;&lt;span class="lnt"&gt; 472
&lt;/span&gt;&lt;span class="lnt"&gt; 473
&lt;/span&gt;&lt;span class="lnt"&gt; 474
&lt;/span&gt;&lt;span class="lnt"&gt; 475
&lt;/span&gt;&lt;span class="lnt"&gt; 476
&lt;/span&gt;&lt;span class="lnt"&gt; 477
&lt;/span&gt;&lt;span class="lnt"&gt; 478
&lt;/span&gt;&lt;span class="lnt"&gt; 479
&lt;/span&gt;&lt;span class="lnt"&gt; 480
&lt;/span&gt;&lt;span class="lnt"&gt; 481
&lt;/span&gt;&lt;span class="lnt"&gt; 482
&lt;/span&gt;&lt;span class="lnt"&gt; 483
&lt;/span&gt;&lt;span class="lnt"&gt; 484
&lt;/span&gt;&lt;span class="lnt"&gt; 485
&lt;/span&gt;&lt;span class="lnt"&gt; 486
&lt;/span&gt;&lt;span class="lnt"&gt; 487
&lt;/span&gt;&lt;span class="lnt"&gt; 488
&lt;/span&gt;&lt;span class="lnt"&gt; 489
&lt;/span&gt;&lt;span class="lnt"&gt; 490
&lt;/span&gt;&lt;span class="lnt"&gt; 491
&lt;/span&gt;&lt;span class="lnt"&gt; 492
&lt;/span&gt;&lt;span class="lnt"&gt; 493
&lt;/span&gt;&lt;span class="lnt"&gt; 494
&lt;/span&gt;&lt;span class="lnt"&gt; 495
&lt;/span&gt;&lt;span class="lnt"&gt; 496
&lt;/span&gt;&lt;span class="lnt"&gt; 497
&lt;/span&gt;&lt;span class="lnt"&gt; 498
&lt;/span&gt;&lt;span class="lnt"&gt; 499
&lt;/span&gt;&lt;span class="lnt"&gt; 500
&lt;/span&gt;&lt;span class="lnt"&gt; 501
&lt;/span&gt;&lt;span class="lnt"&gt; 502
&lt;/span&gt;&lt;span class="lnt"&gt; 503
&lt;/span&gt;&lt;span class="lnt"&gt; 504
&lt;/span&gt;&lt;span class="lnt"&gt; 505
&lt;/span&gt;&lt;span class="lnt"&gt; 506
&lt;/span&gt;&lt;span class="lnt"&gt; 507
&lt;/span&gt;&lt;span class="lnt"&gt; 508
&lt;/span&gt;&lt;span class="lnt"&gt; 509
&lt;/span&gt;&lt;span class="lnt"&gt; 510
&lt;/span&gt;&lt;span class="lnt"&gt; 511
&lt;/span&gt;&lt;span class="lnt"&gt; 512
&lt;/span&gt;&lt;span class="lnt"&gt; 513
&lt;/span&gt;&lt;span class="lnt"&gt; 514
&lt;/span&gt;&lt;span class="lnt"&gt; 515
&lt;/span&gt;&lt;span class="lnt"&gt; 516
&lt;/span&gt;&lt;span class="lnt"&gt; 517
&lt;/span&gt;&lt;span class="lnt"&gt; 518
&lt;/span&gt;&lt;span class="lnt"&gt; 519
&lt;/span&gt;&lt;span class="lnt"&gt; 520
&lt;/span&gt;&lt;span class="lnt"&gt; 521
&lt;/span&gt;&lt;span class="lnt"&gt; 522
&lt;/span&gt;&lt;span class="lnt"&gt; 523
&lt;/span&gt;&lt;span class="lnt"&gt; 524
&lt;/span&gt;&lt;span class="lnt"&gt; 525
&lt;/span&gt;&lt;span class="lnt"&gt; 526
&lt;/span&gt;&lt;span class="lnt"&gt; 527
&lt;/span&gt;&lt;span class="lnt"&gt; 528
&lt;/span&gt;&lt;span class="lnt"&gt; 529
&lt;/span&gt;&lt;span class="lnt"&gt; 530
&lt;/span&gt;&lt;span class="lnt"&gt; 531
&lt;/span&gt;&lt;span class="lnt"&gt; 532
&lt;/span&gt;&lt;span class="lnt"&gt; 533
&lt;/span&gt;&lt;span class="lnt"&gt; 534
&lt;/span&gt;&lt;span class="lnt"&gt; 535
&lt;/span&gt;&lt;span class="lnt"&gt; 536
&lt;/span&gt;&lt;span class="lnt"&gt; 537
&lt;/span&gt;&lt;span class="lnt"&gt; 538
&lt;/span&gt;&lt;span class="lnt"&gt; 539
&lt;/span&gt;&lt;span class="lnt"&gt; 540
&lt;/span&gt;&lt;span class="lnt"&gt; 541
&lt;/span&gt;&lt;span class="lnt"&gt; 542
&lt;/span&gt;&lt;span class="lnt"&gt; 543
&lt;/span&gt;&lt;span class="lnt"&gt; 544
&lt;/span&gt;&lt;span class="lnt"&gt; 545
&lt;/span&gt;&lt;span class="lnt"&gt; 546
&lt;/span&gt;&lt;span class="lnt"&gt; 547
&lt;/span&gt;&lt;span class="lnt"&gt; 548
&lt;/span&gt;&lt;span class="lnt"&gt; 549
&lt;/span&gt;&lt;span class="lnt"&gt; 550
&lt;/span&gt;&lt;span class="lnt"&gt; 551
&lt;/span&gt;&lt;span class="lnt"&gt; 552
&lt;/span&gt;&lt;span class="lnt"&gt; 553
&lt;/span&gt;&lt;span class="lnt"&gt; 554
&lt;/span&gt;&lt;span class="lnt"&gt; 555
&lt;/span&gt;&lt;span class="lnt"&gt; 556
&lt;/span&gt;&lt;span class="lnt"&gt; 557
&lt;/span&gt;&lt;span class="lnt"&gt; 558
&lt;/span&gt;&lt;span class="lnt"&gt; 559
&lt;/span&gt;&lt;span class="lnt"&gt; 560
&lt;/span&gt;&lt;span class="lnt"&gt; 561
&lt;/span&gt;&lt;span class="lnt"&gt; 562
&lt;/span&gt;&lt;span class="lnt"&gt; 563
&lt;/span&gt;&lt;span class="lnt"&gt; 564
&lt;/span&gt;&lt;span class="lnt"&gt; 565
&lt;/span&gt;&lt;span class="lnt"&gt; 566
&lt;/span&gt;&lt;span class="lnt"&gt; 567
&lt;/span&gt;&lt;span class="lnt"&gt; 568
&lt;/span&gt;&lt;span class="lnt"&gt; 569
&lt;/span&gt;&lt;span class="lnt"&gt; 570
&lt;/span&gt;&lt;span class="lnt"&gt; 571
&lt;/span&gt;&lt;span class="lnt"&gt; 572
&lt;/span&gt;&lt;span class="lnt"&gt; 573
&lt;/span&gt;&lt;span class="lnt"&gt; 574
&lt;/span&gt;&lt;span class="lnt"&gt; 575
&lt;/span&gt;&lt;span class="lnt"&gt; 576
&lt;/span&gt;&lt;span class="lnt"&gt; 577
&lt;/span&gt;&lt;span class="lnt"&gt; 578
&lt;/span&gt;&lt;span class="lnt"&gt; 579
&lt;/span&gt;&lt;span class="lnt"&gt; 580
&lt;/span&gt;&lt;span class="lnt"&gt; 581
&lt;/span&gt;&lt;span class="lnt"&gt; 582
&lt;/span&gt;&lt;span class="lnt"&gt; 583
&lt;/span&gt;&lt;span class="lnt"&gt; 584
&lt;/span&gt;&lt;span class="lnt"&gt; 585
&lt;/span&gt;&lt;span class="lnt"&gt; 586
&lt;/span&gt;&lt;span class="lnt"&gt; 587
&lt;/span&gt;&lt;span class="lnt"&gt; 588
&lt;/span&gt;&lt;span class="lnt"&gt; 589
&lt;/span&gt;&lt;span class="lnt"&gt; 590
&lt;/span&gt;&lt;span class="lnt"&gt; 591
&lt;/span&gt;&lt;span class="lnt"&gt; 592
&lt;/span&gt;&lt;span class="lnt"&gt; 593
&lt;/span&gt;&lt;span class="lnt"&gt; 594
&lt;/span&gt;&lt;span class="lnt"&gt; 595
&lt;/span&gt;&lt;span class="lnt"&gt; 596
&lt;/span&gt;&lt;span class="lnt"&gt; 597
&lt;/span&gt;&lt;span class="lnt"&gt; 598
&lt;/span&gt;&lt;span class="lnt"&gt; 599
&lt;/span&gt;&lt;span class="lnt"&gt; 600
&lt;/span&gt;&lt;span class="lnt"&gt; 601
&lt;/span&gt;&lt;span class="lnt"&gt; 602
&lt;/span&gt;&lt;span class="lnt"&gt; 603
&lt;/span&gt;&lt;span class="lnt"&gt; 604
&lt;/span&gt;&lt;span class="lnt"&gt; 605
&lt;/span&gt;&lt;span class="lnt"&gt; 606
&lt;/span&gt;&lt;span class="lnt"&gt; 607
&lt;/span&gt;&lt;span class="lnt"&gt; 608
&lt;/span&gt;&lt;span class="lnt"&gt; 609
&lt;/span&gt;&lt;span class="lnt"&gt; 610
&lt;/span&gt;&lt;span class="lnt"&gt; 611
&lt;/span&gt;&lt;span class="lnt"&gt; 612
&lt;/span&gt;&lt;span class="lnt"&gt; 613
&lt;/span&gt;&lt;span class="lnt"&gt; 614
&lt;/span&gt;&lt;span class="lnt"&gt; 615
&lt;/span&gt;&lt;span class="lnt"&gt; 616
&lt;/span&gt;&lt;span class="lnt"&gt; 617
&lt;/span&gt;&lt;span class="lnt"&gt; 618
&lt;/span&gt;&lt;span class="lnt"&gt; 619
&lt;/span&gt;&lt;span class="lnt"&gt; 620
&lt;/span&gt;&lt;span class="lnt"&gt; 621
&lt;/span&gt;&lt;span class="lnt"&gt; 622
&lt;/span&gt;&lt;span class="lnt"&gt; 623
&lt;/span&gt;&lt;span class="lnt"&gt; 624
&lt;/span&gt;&lt;span class="lnt"&gt; 625
&lt;/span&gt;&lt;span class="lnt"&gt; 626
&lt;/span&gt;&lt;span class="lnt"&gt; 627
&lt;/span&gt;&lt;span class="lnt"&gt; 628
&lt;/span&gt;&lt;span class="lnt"&gt; 629
&lt;/span&gt;&lt;span class="lnt"&gt; 630
&lt;/span&gt;&lt;span class="lnt"&gt; 631
&lt;/span&gt;&lt;span class="lnt"&gt; 632
&lt;/span&gt;&lt;span class="lnt"&gt; 633
&lt;/span&gt;&lt;span class="lnt"&gt; 634
&lt;/span&gt;&lt;span class="lnt"&gt; 635
&lt;/span&gt;&lt;span class="lnt"&gt; 636
&lt;/span&gt;&lt;span class="lnt"&gt; 637
&lt;/span&gt;&lt;span class="lnt"&gt; 638
&lt;/span&gt;&lt;span class="lnt"&gt; 639
&lt;/span&gt;&lt;span class="lnt"&gt; 640
&lt;/span&gt;&lt;span class="lnt"&gt; 641
&lt;/span&gt;&lt;span class="lnt"&gt; 642
&lt;/span&gt;&lt;span class="lnt"&gt; 643
&lt;/span&gt;&lt;span class="lnt"&gt; 644
&lt;/span&gt;&lt;span class="lnt"&gt; 645
&lt;/span&gt;&lt;span class="lnt"&gt; 646
&lt;/span&gt;&lt;span class="lnt"&gt; 647
&lt;/span&gt;&lt;span class="lnt"&gt; 648
&lt;/span&gt;&lt;span class="lnt"&gt; 649
&lt;/span&gt;&lt;span class="lnt"&gt; 650
&lt;/span&gt;&lt;span class="lnt"&gt; 651
&lt;/span&gt;&lt;span class="lnt"&gt; 652
&lt;/span&gt;&lt;span class="lnt"&gt; 653
&lt;/span&gt;&lt;span class="lnt"&gt; 654
&lt;/span&gt;&lt;span class="lnt"&gt; 655
&lt;/span&gt;&lt;span class="lnt"&gt; 656
&lt;/span&gt;&lt;span class="lnt"&gt; 657
&lt;/span&gt;&lt;span class="lnt"&gt; 658
&lt;/span&gt;&lt;span class="lnt"&gt; 659
&lt;/span&gt;&lt;span class="lnt"&gt; 660
&lt;/span&gt;&lt;span class="lnt"&gt; 661
&lt;/span&gt;&lt;span class="lnt"&gt; 662
&lt;/span&gt;&lt;span class="lnt"&gt; 663
&lt;/span&gt;&lt;span class="lnt"&gt; 664
&lt;/span&gt;&lt;span class="lnt"&gt; 665
&lt;/span&gt;&lt;span class="lnt"&gt; 666
&lt;/span&gt;&lt;span class="lnt"&gt; 667
&lt;/span&gt;&lt;span class="lnt"&gt; 668
&lt;/span&gt;&lt;span class="lnt"&gt; 669
&lt;/span&gt;&lt;span class="lnt"&gt; 670
&lt;/span&gt;&lt;span class="lnt"&gt; 671
&lt;/span&gt;&lt;span class="lnt"&gt; 672
&lt;/span&gt;&lt;span class="lnt"&gt; 673
&lt;/span&gt;&lt;span class="lnt"&gt; 674
&lt;/span&gt;&lt;span class="lnt"&gt; 675
&lt;/span&gt;&lt;span class="lnt"&gt; 676
&lt;/span&gt;&lt;span class="lnt"&gt; 677
&lt;/span&gt;&lt;span class="lnt"&gt; 678
&lt;/span&gt;&lt;span class="lnt"&gt; 679
&lt;/span&gt;&lt;span class="lnt"&gt; 680
&lt;/span&gt;&lt;span class="lnt"&gt; 681
&lt;/span&gt;&lt;span class="lnt"&gt; 682
&lt;/span&gt;&lt;span class="lnt"&gt; 683
&lt;/span&gt;&lt;span class="lnt"&gt; 684
&lt;/span&gt;&lt;span class="lnt"&gt; 685
&lt;/span&gt;&lt;span class="lnt"&gt; 686
&lt;/span&gt;&lt;span class="lnt"&gt; 687
&lt;/span&gt;&lt;span class="lnt"&gt; 688
&lt;/span&gt;&lt;span class="lnt"&gt; 689
&lt;/span&gt;&lt;span class="lnt"&gt; 690
&lt;/span&gt;&lt;span class="lnt"&gt; 691
&lt;/span&gt;&lt;span class="lnt"&gt; 692
&lt;/span&gt;&lt;span class="lnt"&gt; 693
&lt;/span&gt;&lt;span class="lnt"&gt; 694
&lt;/span&gt;&lt;span class="lnt"&gt; 695
&lt;/span&gt;&lt;span class="lnt"&gt; 696
&lt;/span&gt;&lt;span class="lnt"&gt; 697
&lt;/span&gt;&lt;span class="lnt"&gt; 698
&lt;/span&gt;&lt;span class="lnt"&gt; 699
&lt;/span&gt;&lt;span class="lnt"&gt; 700
&lt;/span&gt;&lt;span class="lnt"&gt; 701
&lt;/span&gt;&lt;span class="lnt"&gt; 702
&lt;/span&gt;&lt;span class="lnt"&gt; 703
&lt;/span&gt;&lt;span class="lnt"&gt; 704
&lt;/span&gt;&lt;span class="lnt"&gt; 705
&lt;/span&gt;&lt;span class="lnt"&gt; 706
&lt;/span&gt;&lt;span class="lnt"&gt; 707
&lt;/span&gt;&lt;span class="lnt"&gt; 708
&lt;/span&gt;&lt;span class="lnt"&gt; 709
&lt;/span&gt;&lt;span class="lnt"&gt; 710
&lt;/span&gt;&lt;span class="lnt"&gt; 711
&lt;/span&gt;&lt;span class="lnt"&gt; 712
&lt;/span&gt;&lt;span class="lnt"&gt; 713
&lt;/span&gt;&lt;span class="lnt"&gt; 714
&lt;/span&gt;&lt;span class="lnt"&gt; 715
&lt;/span&gt;&lt;span class="lnt"&gt; 716
&lt;/span&gt;&lt;span class="lnt"&gt; 717
&lt;/span&gt;&lt;span class="lnt"&gt; 718
&lt;/span&gt;&lt;span class="lnt"&gt; 719
&lt;/span&gt;&lt;span class="lnt"&gt; 720
&lt;/span&gt;&lt;span class="lnt"&gt; 721
&lt;/span&gt;&lt;span class="lnt"&gt; 722
&lt;/span&gt;&lt;span class="lnt"&gt; 723
&lt;/span&gt;&lt;span class="lnt"&gt; 724
&lt;/span&gt;&lt;span class="lnt"&gt; 725
&lt;/span&gt;&lt;span class="lnt"&gt; 726
&lt;/span&gt;&lt;span class="lnt"&gt; 727
&lt;/span&gt;&lt;span class="lnt"&gt; 728
&lt;/span&gt;&lt;span class="lnt"&gt; 729
&lt;/span&gt;&lt;span class="lnt"&gt; 730
&lt;/span&gt;&lt;span class="lnt"&gt; 731
&lt;/span&gt;&lt;span class="lnt"&gt; 732
&lt;/span&gt;&lt;span class="lnt"&gt; 733
&lt;/span&gt;&lt;span class="lnt"&gt; 734
&lt;/span&gt;&lt;span class="lnt"&gt; 735
&lt;/span&gt;&lt;span class="lnt"&gt; 736
&lt;/span&gt;&lt;span class="lnt"&gt; 737
&lt;/span&gt;&lt;span class="lnt"&gt; 738
&lt;/span&gt;&lt;span class="lnt"&gt; 739
&lt;/span&gt;&lt;span class="lnt"&gt; 740
&lt;/span&gt;&lt;span class="lnt"&gt; 741
&lt;/span&gt;&lt;span class="lnt"&gt; 742
&lt;/span&gt;&lt;span class="lnt"&gt; 743
&lt;/span&gt;&lt;span class="lnt"&gt; 744
&lt;/span&gt;&lt;span class="lnt"&gt; 745
&lt;/span&gt;&lt;span class="lnt"&gt; 746
&lt;/span&gt;&lt;span class="lnt"&gt; 747
&lt;/span&gt;&lt;span class="lnt"&gt; 748
&lt;/span&gt;&lt;span class="lnt"&gt; 749
&lt;/span&gt;&lt;span class="lnt"&gt; 750
&lt;/span&gt;&lt;span class="lnt"&gt; 751
&lt;/span&gt;&lt;span class="lnt"&gt; 752
&lt;/span&gt;&lt;span class="lnt"&gt; 753
&lt;/span&gt;&lt;span class="lnt"&gt; 754
&lt;/span&gt;&lt;span class="lnt"&gt; 755
&lt;/span&gt;&lt;span class="lnt"&gt; 756
&lt;/span&gt;&lt;span class="lnt"&gt; 757
&lt;/span&gt;&lt;span class="lnt"&gt; 758
&lt;/span&gt;&lt;span class="lnt"&gt; 759
&lt;/span&gt;&lt;span class="lnt"&gt; 760
&lt;/span&gt;&lt;span class="lnt"&gt; 761
&lt;/span&gt;&lt;span class="lnt"&gt; 762
&lt;/span&gt;&lt;span class="lnt"&gt; 763
&lt;/span&gt;&lt;span class="lnt"&gt; 764
&lt;/span&gt;&lt;span class="lnt"&gt; 765
&lt;/span&gt;&lt;span class="lnt"&gt; 766
&lt;/span&gt;&lt;span class="lnt"&gt; 767
&lt;/span&gt;&lt;span class="lnt"&gt; 768
&lt;/span&gt;&lt;span class="lnt"&gt; 769
&lt;/span&gt;&lt;span class="lnt"&gt; 770
&lt;/span&gt;&lt;span class="lnt"&gt; 771
&lt;/span&gt;&lt;span class="lnt"&gt; 772
&lt;/span&gt;&lt;span class="lnt"&gt; 773
&lt;/span&gt;&lt;span class="lnt"&gt; 774
&lt;/span&gt;&lt;span class="lnt"&gt; 775
&lt;/span&gt;&lt;span class="lnt"&gt; 776
&lt;/span&gt;&lt;span class="lnt"&gt; 777
&lt;/span&gt;&lt;span class="lnt"&gt; 778
&lt;/span&gt;&lt;span class="lnt"&gt; 779
&lt;/span&gt;&lt;span class="lnt"&gt; 780
&lt;/span&gt;&lt;span class="lnt"&gt; 781
&lt;/span&gt;&lt;span class="lnt"&gt; 782
&lt;/span&gt;&lt;span class="lnt"&gt; 783
&lt;/span&gt;&lt;span class="lnt"&gt; 784
&lt;/span&gt;&lt;span class="lnt"&gt; 785
&lt;/span&gt;&lt;span class="lnt"&gt; 786
&lt;/span&gt;&lt;span class="lnt"&gt; 787
&lt;/span&gt;&lt;span class="lnt"&gt; 788
&lt;/span&gt;&lt;span class="lnt"&gt; 789
&lt;/span&gt;&lt;span class="lnt"&gt; 790
&lt;/span&gt;&lt;span class="lnt"&gt; 791
&lt;/span&gt;&lt;span class="lnt"&gt; 792
&lt;/span&gt;&lt;span class="lnt"&gt; 793
&lt;/span&gt;&lt;span class="lnt"&gt; 794
&lt;/span&gt;&lt;span class="lnt"&gt; 795
&lt;/span&gt;&lt;span class="lnt"&gt; 796
&lt;/span&gt;&lt;span class="lnt"&gt; 797
&lt;/span&gt;&lt;span class="lnt"&gt; 798
&lt;/span&gt;&lt;span class="lnt"&gt; 799
&lt;/span&gt;&lt;span class="lnt"&gt; 800
&lt;/span&gt;&lt;span class="lnt"&gt; 801
&lt;/span&gt;&lt;span class="lnt"&gt; 802
&lt;/span&gt;&lt;span class="lnt"&gt; 803
&lt;/span&gt;&lt;span class="lnt"&gt; 804
&lt;/span&gt;&lt;span class="lnt"&gt; 805
&lt;/span&gt;&lt;span class="lnt"&gt; 806
&lt;/span&gt;&lt;span class="lnt"&gt; 807
&lt;/span&gt;&lt;span class="lnt"&gt; 808
&lt;/span&gt;&lt;span class="lnt"&gt; 809
&lt;/span&gt;&lt;span class="lnt"&gt; 810
&lt;/span&gt;&lt;span class="lnt"&gt; 811
&lt;/span&gt;&lt;span class="lnt"&gt; 812
&lt;/span&gt;&lt;span class="lnt"&gt; 813
&lt;/span&gt;&lt;span class="lnt"&gt; 814
&lt;/span&gt;&lt;span class="lnt"&gt; 815
&lt;/span&gt;&lt;span class="lnt"&gt; 816
&lt;/span&gt;&lt;span class="lnt"&gt; 817
&lt;/span&gt;&lt;span class="lnt"&gt; 818
&lt;/span&gt;&lt;span class="lnt"&gt; 819
&lt;/span&gt;&lt;span class="lnt"&gt; 820
&lt;/span&gt;&lt;span class="lnt"&gt; 821
&lt;/span&gt;&lt;span class="lnt"&gt; 822
&lt;/span&gt;&lt;span class="lnt"&gt; 823
&lt;/span&gt;&lt;span class="lnt"&gt; 824
&lt;/span&gt;&lt;span class="lnt"&gt; 825
&lt;/span&gt;&lt;span class="lnt"&gt; 826
&lt;/span&gt;&lt;span class="lnt"&gt; 827
&lt;/span&gt;&lt;span class="lnt"&gt; 828
&lt;/span&gt;&lt;span class="lnt"&gt; 829
&lt;/span&gt;&lt;span class="lnt"&gt; 830
&lt;/span&gt;&lt;span class="lnt"&gt; 831
&lt;/span&gt;&lt;span class="lnt"&gt; 832
&lt;/span&gt;&lt;span class="lnt"&gt; 833
&lt;/span&gt;&lt;span class="lnt"&gt; 834
&lt;/span&gt;&lt;span class="lnt"&gt; 835
&lt;/span&gt;&lt;span class="lnt"&gt; 836
&lt;/span&gt;&lt;span class="lnt"&gt; 837
&lt;/span&gt;&lt;span class="lnt"&gt; 838
&lt;/span&gt;&lt;span class="lnt"&gt; 839
&lt;/span&gt;&lt;span class="lnt"&gt; 840
&lt;/span&gt;&lt;span class="lnt"&gt; 841
&lt;/span&gt;&lt;span class="lnt"&gt; 842
&lt;/span&gt;&lt;span class="lnt"&gt; 843
&lt;/span&gt;&lt;span class="lnt"&gt; 844
&lt;/span&gt;&lt;span class="lnt"&gt; 845
&lt;/span&gt;&lt;span class="lnt"&gt; 846
&lt;/span&gt;&lt;span class="lnt"&gt; 847
&lt;/span&gt;&lt;span class="lnt"&gt; 848
&lt;/span&gt;&lt;span class="lnt"&gt; 849
&lt;/span&gt;&lt;span class="lnt"&gt; 850
&lt;/span&gt;&lt;span class="lnt"&gt; 851
&lt;/span&gt;&lt;span class="lnt"&gt; 852
&lt;/span&gt;&lt;span class="lnt"&gt; 853
&lt;/span&gt;&lt;span class="lnt"&gt; 854
&lt;/span&gt;&lt;span class="lnt"&gt; 855
&lt;/span&gt;&lt;span class="lnt"&gt; 856
&lt;/span&gt;&lt;span class="lnt"&gt; 857
&lt;/span&gt;&lt;span class="lnt"&gt; 858
&lt;/span&gt;&lt;span class="lnt"&gt; 859
&lt;/span&gt;&lt;span class="lnt"&gt; 860
&lt;/span&gt;&lt;span class="lnt"&gt; 861
&lt;/span&gt;&lt;span class="lnt"&gt; 862
&lt;/span&gt;&lt;span class="lnt"&gt; 863
&lt;/span&gt;&lt;span class="lnt"&gt; 864
&lt;/span&gt;&lt;span class="lnt"&gt; 865
&lt;/span&gt;&lt;span class="lnt"&gt; 866
&lt;/span&gt;&lt;span class="lnt"&gt; 867
&lt;/span&gt;&lt;span class="lnt"&gt; 868
&lt;/span&gt;&lt;span class="lnt"&gt; 869
&lt;/span&gt;&lt;span class="lnt"&gt; 870
&lt;/span&gt;&lt;span class="lnt"&gt; 871
&lt;/span&gt;&lt;span class="lnt"&gt; 872
&lt;/span&gt;&lt;span class="lnt"&gt; 873
&lt;/span&gt;&lt;span class="lnt"&gt; 874
&lt;/span&gt;&lt;span class="lnt"&gt; 875
&lt;/span&gt;&lt;span class="lnt"&gt; 876
&lt;/span&gt;&lt;span class="lnt"&gt; 877
&lt;/span&gt;&lt;span class="lnt"&gt; 878
&lt;/span&gt;&lt;span class="lnt"&gt; 879
&lt;/span&gt;&lt;span class="lnt"&gt; 880
&lt;/span&gt;&lt;span class="lnt"&gt; 881
&lt;/span&gt;&lt;span class="lnt"&gt; 882
&lt;/span&gt;&lt;span class="lnt"&gt; 883
&lt;/span&gt;&lt;span class="lnt"&gt; 884
&lt;/span&gt;&lt;span class="lnt"&gt; 885
&lt;/span&gt;&lt;span class="lnt"&gt; 886
&lt;/span&gt;&lt;span class="lnt"&gt; 887
&lt;/span&gt;&lt;span class="lnt"&gt; 888
&lt;/span&gt;&lt;span class="lnt"&gt; 889
&lt;/span&gt;&lt;span class="lnt"&gt; 890
&lt;/span&gt;&lt;span class="lnt"&gt; 891
&lt;/span&gt;&lt;span class="lnt"&gt; 892
&lt;/span&gt;&lt;span class="lnt"&gt; 893
&lt;/span&gt;&lt;span class="lnt"&gt; 894
&lt;/span&gt;&lt;span class="lnt"&gt; 895
&lt;/span&gt;&lt;span class="lnt"&gt; 896
&lt;/span&gt;&lt;span class="lnt"&gt; 897
&lt;/span&gt;&lt;span class="lnt"&gt; 898
&lt;/span&gt;&lt;span class="lnt"&gt; 899
&lt;/span&gt;&lt;span class="lnt"&gt; 900
&lt;/span&gt;&lt;span class="lnt"&gt; 901
&lt;/span&gt;&lt;span class="lnt"&gt; 902
&lt;/span&gt;&lt;span class="lnt"&gt; 903
&lt;/span&gt;&lt;span class="lnt"&gt; 904
&lt;/span&gt;&lt;span class="lnt"&gt; 905
&lt;/span&gt;&lt;span class="lnt"&gt; 906
&lt;/span&gt;&lt;span class="lnt"&gt; 907
&lt;/span&gt;&lt;span class="lnt"&gt; 908
&lt;/span&gt;&lt;span class="lnt"&gt; 909
&lt;/span&gt;&lt;span class="lnt"&gt; 910
&lt;/span&gt;&lt;span class="lnt"&gt; 911
&lt;/span&gt;&lt;span class="lnt"&gt; 912
&lt;/span&gt;&lt;span class="lnt"&gt; 913
&lt;/span&gt;&lt;span class="lnt"&gt; 914
&lt;/span&gt;&lt;span class="lnt"&gt; 915
&lt;/span&gt;&lt;span class="lnt"&gt; 916
&lt;/span&gt;&lt;span class="lnt"&gt; 917
&lt;/span&gt;&lt;span class="lnt"&gt; 918
&lt;/span&gt;&lt;span class="lnt"&gt; 919
&lt;/span&gt;&lt;span class="lnt"&gt; 920
&lt;/span&gt;&lt;span class="lnt"&gt; 921
&lt;/span&gt;&lt;span class="lnt"&gt; 922
&lt;/span&gt;&lt;span class="lnt"&gt; 923
&lt;/span&gt;&lt;span class="lnt"&gt; 924
&lt;/span&gt;&lt;span class="lnt"&gt; 925
&lt;/span&gt;&lt;span class="lnt"&gt; 926
&lt;/span&gt;&lt;span class="lnt"&gt; 927
&lt;/span&gt;&lt;span class="lnt"&gt; 928
&lt;/span&gt;&lt;span class="lnt"&gt; 929
&lt;/span&gt;&lt;span class="lnt"&gt; 930
&lt;/span&gt;&lt;span class="lnt"&gt; 931
&lt;/span&gt;&lt;span class="lnt"&gt; 932
&lt;/span&gt;&lt;span class="lnt"&gt; 933
&lt;/span&gt;&lt;span class="lnt"&gt; 934
&lt;/span&gt;&lt;span class="lnt"&gt; 935
&lt;/span&gt;&lt;span class="lnt"&gt; 936
&lt;/span&gt;&lt;span class="lnt"&gt; 937
&lt;/span&gt;&lt;span class="lnt"&gt; 938
&lt;/span&gt;&lt;span class="lnt"&gt; 939
&lt;/span&gt;&lt;span class="lnt"&gt; 940
&lt;/span&gt;&lt;span class="lnt"&gt; 941
&lt;/span&gt;&lt;span class="lnt"&gt; 942
&lt;/span&gt;&lt;span class="lnt"&gt; 943
&lt;/span&gt;&lt;span class="lnt"&gt; 944
&lt;/span&gt;&lt;span class="lnt"&gt; 945
&lt;/span&gt;&lt;span class="lnt"&gt; 946
&lt;/span&gt;&lt;span class="lnt"&gt; 947
&lt;/span&gt;&lt;span class="lnt"&gt; 948
&lt;/span&gt;&lt;span class="lnt"&gt; 949
&lt;/span&gt;&lt;span class="lnt"&gt; 950
&lt;/span&gt;&lt;span class="lnt"&gt; 951
&lt;/span&gt;&lt;span class="lnt"&gt; 952
&lt;/span&gt;&lt;span class="lnt"&gt; 953
&lt;/span&gt;&lt;span class="lnt"&gt; 954
&lt;/span&gt;&lt;span class="lnt"&gt; 955
&lt;/span&gt;&lt;span class="lnt"&gt; 956
&lt;/span&gt;&lt;span class="lnt"&gt; 957
&lt;/span&gt;&lt;span class="lnt"&gt; 958
&lt;/span&gt;&lt;span class="lnt"&gt; 959
&lt;/span&gt;&lt;span class="lnt"&gt; 960
&lt;/span&gt;&lt;span class="lnt"&gt; 961
&lt;/span&gt;&lt;span class="lnt"&gt; 962
&lt;/span&gt;&lt;span class="lnt"&gt; 963
&lt;/span&gt;&lt;span class="lnt"&gt; 964
&lt;/span&gt;&lt;span class="lnt"&gt; 965
&lt;/span&gt;&lt;span class="lnt"&gt; 966
&lt;/span&gt;&lt;span class="lnt"&gt; 967
&lt;/span&gt;&lt;span class="lnt"&gt; 968
&lt;/span&gt;&lt;span class="lnt"&gt; 969
&lt;/span&gt;&lt;span class="lnt"&gt; 970
&lt;/span&gt;&lt;span class="lnt"&gt; 971
&lt;/span&gt;&lt;span class="lnt"&gt; 972
&lt;/span&gt;&lt;span class="lnt"&gt; 973
&lt;/span&gt;&lt;span class="lnt"&gt; 974
&lt;/span&gt;&lt;span class="lnt"&gt; 975
&lt;/span&gt;&lt;span class="lnt"&gt; 976
&lt;/span&gt;&lt;span class="lnt"&gt; 977
&lt;/span&gt;&lt;span class="lnt"&gt; 978
&lt;/span&gt;&lt;span class="lnt"&gt; 979
&lt;/span&gt;&lt;span class="lnt"&gt; 980
&lt;/span&gt;&lt;span class="lnt"&gt; 981
&lt;/span&gt;&lt;span class="lnt"&gt; 982
&lt;/span&gt;&lt;span class="lnt"&gt; 983
&lt;/span&gt;&lt;span class="lnt"&gt; 984
&lt;/span&gt;&lt;span class="lnt"&gt; 985
&lt;/span&gt;&lt;span class="lnt"&gt; 986
&lt;/span&gt;&lt;span class="lnt"&gt; 987
&lt;/span&gt;&lt;span class="lnt"&gt; 988
&lt;/span&gt;&lt;span class="lnt"&gt; 989
&lt;/span&gt;&lt;span class="lnt"&gt; 990
&lt;/span&gt;&lt;span class="lnt"&gt; 991
&lt;/span&gt;&lt;span class="lnt"&gt; 992
&lt;/span&gt;&lt;span class="lnt"&gt; 993
&lt;/span&gt;&lt;span class="lnt"&gt; 994
&lt;/span&gt;&lt;span class="lnt"&gt; 995
&lt;/span&gt;&lt;span class="lnt"&gt; 996
&lt;/span&gt;&lt;span class="lnt"&gt; 997
&lt;/span&gt;&lt;span class="lnt"&gt; 998
&lt;/span&gt;&lt;span class="lnt"&gt; 999
&lt;/span&gt;&lt;span class="lnt"&gt;1000
&lt;/span&gt;&lt;span class="lnt"&gt;1001
&lt;/span&gt;&lt;span class="lnt"&gt;1002
&lt;/span&gt;&lt;span class="lnt"&gt;1003
&lt;/span&gt;&lt;span class="lnt"&gt;1004
&lt;/span&gt;&lt;span class="lnt"&gt;1005
&lt;/span&gt;&lt;span class="lnt"&gt;1006
&lt;/span&gt;&lt;span class="lnt"&gt;1007
&lt;/span&gt;&lt;span class="lnt"&gt;1008
&lt;/span&gt;&lt;span class="lnt"&gt;1009
&lt;/span&gt;&lt;span class="lnt"&gt;1010
&lt;/span&gt;&lt;span class="lnt"&gt;1011
&lt;/span&gt;&lt;span class="lnt"&gt;1012
&lt;/span&gt;&lt;span class="lnt"&gt;1013
&lt;/span&gt;&lt;span class="lnt"&gt;1014
&lt;/span&gt;&lt;span class="lnt"&gt;1015
&lt;/span&gt;&lt;span class="lnt"&gt;1016
&lt;/span&gt;&lt;span class="lnt"&gt;1017
&lt;/span&gt;&lt;span class="lnt"&gt;1018
&lt;/span&gt;&lt;span class="lnt"&gt;1019
&lt;/span&gt;&lt;span class="lnt"&gt;1020
&lt;/span&gt;&lt;span class="lnt"&gt;1021
&lt;/span&gt;&lt;span class="lnt"&gt;1022
&lt;/span&gt;&lt;span class="lnt"&gt;1023
&lt;/span&gt;&lt;span class="lnt"&gt;1024
&lt;/span&gt;&lt;span class="lnt"&gt;1025
&lt;/span&gt;&lt;span class="lnt"&gt;1026
&lt;/span&gt;&lt;span class="lnt"&gt;1027
&lt;/span&gt;&lt;span class="lnt"&gt;1028
&lt;/span&gt;&lt;span class="lnt"&gt;1029
&lt;/span&gt;&lt;span class="lnt"&gt;1030
&lt;/span&gt;&lt;span class="lnt"&gt;1031
&lt;/span&gt;&lt;span class="lnt"&gt;1032
&lt;/span&gt;&lt;span class="lnt"&gt;1033
&lt;/span&gt;&lt;span class="lnt"&gt;1034
&lt;/span&gt;&lt;span class="lnt"&gt;1035
&lt;/span&gt;&lt;span class="lnt"&gt;1036
&lt;/span&gt;&lt;span class="lnt"&gt;1037
&lt;/span&gt;&lt;span class="lnt"&gt;1038
&lt;/span&gt;&lt;span class="lnt"&gt;1039
&lt;/span&gt;&lt;span class="lnt"&gt;1040
&lt;/span&gt;&lt;span class="lnt"&gt;1041
&lt;/span&gt;&lt;span class="lnt"&gt;1042
&lt;/span&gt;&lt;span class="lnt"&gt;1043
&lt;/span&gt;&lt;span class="lnt"&gt;1044
&lt;/span&gt;&lt;span class="lnt"&gt;1045
&lt;/span&gt;&lt;span class="lnt"&gt;1046
&lt;/span&gt;&lt;span class="lnt"&gt;1047
&lt;/span&gt;&lt;span class="lnt"&gt;1048
&lt;/span&gt;&lt;span class="lnt"&gt;1049
&lt;/span&gt;&lt;span class="lnt"&gt;1050
&lt;/span&gt;&lt;span class="lnt"&gt;1051
&lt;/span&gt;&lt;span class="lnt"&gt;1052
&lt;/span&gt;&lt;span class="lnt"&gt;1053
&lt;/span&gt;&lt;span class="lnt"&gt;1054
&lt;/span&gt;&lt;span class="lnt"&gt;1055
&lt;/span&gt;&lt;span class="lnt"&gt;1056
&lt;/span&gt;&lt;span class="lnt"&gt;1057
&lt;/span&gt;&lt;span class="lnt"&gt;1058
&lt;/span&gt;&lt;span class="lnt"&gt;1059
&lt;/span&gt;&lt;span class="lnt"&gt;1060
&lt;/span&gt;&lt;span class="lnt"&gt;1061
&lt;/span&gt;&lt;span class="lnt"&gt;1062
&lt;/span&gt;&lt;span class="lnt"&gt;1063
&lt;/span&gt;&lt;span class="lnt"&gt;1064
&lt;/span&gt;&lt;span class="lnt"&gt;1065
&lt;/span&gt;&lt;span class="lnt"&gt;1066
&lt;/span&gt;&lt;span class="lnt"&gt;1067
&lt;/span&gt;&lt;span class="lnt"&gt;1068
&lt;/span&gt;&lt;span class="lnt"&gt;1069
&lt;/span&gt;&lt;span class="lnt"&gt;1070
&lt;/span&gt;&lt;span class="lnt"&gt;1071
&lt;/span&gt;&lt;span class="lnt"&gt;1072
&lt;/span&gt;&lt;span class="lnt"&gt;1073
&lt;/span&gt;&lt;span class="lnt"&gt;1074
&lt;/span&gt;&lt;span class="lnt"&gt;1075
&lt;/span&gt;&lt;span class="lnt"&gt;1076
&lt;/span&gt;&lt;span class="lnt"&gt;1077
&lt;/span&gt;&lt;span class="lnt"&gt;1078
&lt;/span&gt;&lt;span class="lnt"&gt;1079
&lt;/span&gt;&lt;span class="lnt"&gt;1080
&lt;/span&gt;&lt;span class="lnt"&gt;1081
&lt;/span&gt;&lt;span class="lnt"&gt;1082
&lt;/span&gt;&lt;span class="lnt"&gt;1083
&lt;/span&gt;&lt;span class="lnt"&gt;1084
&lt;/span&gt;&lt;span class="lnt"&gt;1085
&lt;/span&gt;&lt;span class="lnt"&gt;1086
&lt;/span&gt;&lt;span class="lnt"&gt;1087
&lt;/span&gt;&lt;span class="lnt"&gt;1088
&lt;/span&gt;&lt;span class="lnt"&gt;1089
&lt;/span&gt;&lt;span class="lnt"&gt;1090
&lt;/span&gt;&lt;span class="lnt"&gt;1091
&lt;/span&gt;&lt;span class="lnt"&gt;1092
&lt;/span&gt;&lt;span class="lnt"&gt;1093
&lt;/span&gt;&lt;span class="lnt"&gt;1094
&lt;/span&gt;&lt;span class="lnt"&gt;1095
&lt;/span&gt;&lt;span class="lnt"&gt;1096
&lt;/span&gt;&lt;span class="lnt"&gt;1097
&lt;/span&gt;&lt;span class="lnt"&gt;1098
&lt;/span&gt;&lt;span class="lnt"&gt;1099
&lt;/span&gt;&lt;span class="lnt"&gt;1100
&lt;/span&gt;&lt;span class="lnt"&gt;1101
&lt;/span&gt;&lt;span class="lnt"&gt;1102
&lt;/span&gt;&lt;span class="lnt"&gt;1103
&lt;/span&gt;&lt;span class="lnt"&gt;1104
&lt;/span&gt;&lt;span class="lnt"&gt;1105
&lt;/span&gt;&lt;span class="lnt"&gt;1106
&lt;/span&gt;&lt;span class="lnt"&gt;1107
&lt;/span&gt;&lt;span class="lnt"&gt;1108
&lt;/span&gt;&lt;span class="lnt"&gt;1109
&lt;/span&gt;&lt;span class="lnt"&gt;1110
&lt;/span&gt;&lt;span class="lnt"&gt;1111
&lt;/span&gt;&lt;span class="lnt"&gt;1112
&lt;/span&gt;&lt;span class="lnt"&gt;1113
&lt;/span&gt;&lt;span class="lnt"&gt;1114
&lt;/span&gt;&lt;span class="lnt"&gt;1115
&lt;/span&gt;&lt;span class="lnt"&gt;1116
&lt;/span&gt;&lt;span class="lnt"&gt;1117
&lt;/span&gt;&lt;span class="lnt"&gt;1118
&lt;/span&gt;&lt;span class="lnt"&gt;1119
&lt;/span&gt;&lt;span class="lnt"&gt;1120
&lt;/span&gt;&lt;span class="lnt"&gt;1121
&lt;/span&gt;&lt;span class="lnt"&gt;1122
&lt;/span&gt;&lt;span class="lnt"&gt;1123
&lt;/span&gt;&lt;span class="lnt"&gt;1124
&lt;/span&gt;&lt;span class="lnt"&gt;1125
&lt;/span&gt;&lt;span class="lnt"&gt;1126
&lt;/span&gt;&lt;span class="lnt"&gt;1127
&lt;/span&gt;&lt;span class="lnt"&gt;1128
&lt;/span&gt;&lt;span class="lnt"&gt;1129
&lt;/span&gt;&lt;span class="lnt"&gt;1130
&lt;/span&gt;&lt;span class="lnt"&gt;1131
&lt;/span&gt;&lt;span class="lnt"&gt;1132
&lt;/span&gt;&lt;span class="lnt"&gt;1133
&lt;/span&gt;&lt;span class="lnt"&gt;1134
&lt;/span&gt;&lt;span class="lnt"&gt;1135
&lt;/span&gt;&lt;span class="lnt"&gt;1136
&lt;/span&gt;&lt;span class="lnt"&gt;1137
&lt;/span&gt;&lt;span class="lnt"&gt;1138
&lt;/span&gt;&lt;span class="lnt"&gt;1139
&lt;/span&gt;&lt;span class="lnt"&gt;1140
&lt;/span&gt;&lt;span class="lnt"&gt;1141
&lt;/span&gt;&lt;span class="lnt"&gt;1142
&lt;/span&gt;&lt;span class="lnt"&gt;1143
&lt;/span&gt;&lt;span class="lnt"&gt;1144
&lt;/span&gt;&lt;span class="lnt"&gt;1145
&lt;/span&gt;&lt;span class="lnt"&gt;1146
&lt;/span&gt;&lt;span class="lnt"&gt;1147
&lt;/span&gt;&lt;span class="lnt"&gt;1148
&lt;/span&gt;&lt;span class="lnt"&gt;1149
&lt;/span&gt;&lt;span class="lnt"&gt;1150
&lt;/span&gt;&lt;span class="lnt"&gt;1151
&lt;/span&gt;&lt;span class="lnt"&gt;1152
&lt;/span&gt;&lt;span class="lnt"&gt;1153
&lt;/span&gt;&lt;span class="lnt"&gt;1154
&lt;/span&gt;&lt;span class="lnt"&gt;1155
&lt;/span&gt;&lt;span class="lnt"&gt;1156
&lt;/span&gt;&lt;span class="lnt"&gt;1157
&lt;/span&gt;&lt;span class="lnt"&gt;1158
&lt;/span&gt;&lt;span class="lnt"&gt;1159
&lt;/span&gt;&lt;span class="lnt"&gt;1160
&lt;/span&gt;&lt;span class="lnt"&gt;1161
&lt;/span&gt;&lt;span class="lnt"&gt;1162
&lt;/span&gt;&lt;span class="lnt"&gt;1163
&lt;/span&gt;&lt;span class="lnt"&gt;1164
&lt;/span&gt;&lt;span class="lnt"&gt;1165
&lt;/span&gt;&lt;span class="lnt"&gt;1166
&lt;/span&gt;&lt;span class="lnt"&gt;1167
&lt;/span&gt;&lt;span class="lnt"&gt;1168
&lt;/span&gt;&lt;span class="lnt"&gt;1169
&lt;/span&gt;&lt;span class="lnt"&gt;1170
&lt;/span&gt;&lt;span class="lnt"&gt;1171
&lt;/span&gt;&lt;span class="lnt"&gt;1172
&lt;/span&gt;&lt;span class="lnt"&gt;1173
&lt;/span&gt;&lt;span class="lnt"&gt;1174
&lt;/span&gt;&lt;span class="lnt"&gt;1175
&lt;/span&gt;&lt;span class="lnt"&gt;1176
&lt;/span&gt;&lt;span class="lnt"&gt;1177
&lt;/span&gt;&lt;span class="lnt"&gt;1178
&lt;/span&gt;&lt;span class="lnt"&gt;1179
&lt;/span&gt;&lt;span class="lnt"&gt;1180
&lt;/span&gt;&lt;span class="lnt"&gt;1181
&lt;/span&gt;&lt;span class="lnt"&gt;1182
&lt;/span&gt;&lt;span class="lnt"&gt;1183
&lt;/span&gt;&lt;span class="lnt"&gt;1184
&lt;/span&gt;&lt;span class="lnt"&gt;1185
&lt;/span&gt;&lt;span class="lnt"&gt;1186
&lt;/span&gt;&lt;span class="lnt"&gt;1187
&lt;/span&gt;&lt;span class="lnt"&gt;1188
&lt;/span&gt;&lt;span class="lnt"&gt;1189
&lt;/span&gt;&lt;span class="lnt"&gt;1190
&lt;/span&gt;&lt;span class="lnt"&gt;1191
&lt;/span&gt;&lt;span class="lnt"&gt;1192
&lt;/span&gt;&lt;span class="lnt"&gt;1193
&lt;/span&gt;&lt;span class="lnt"&gt;1194
&lt;/span&gt;&lt;span class="lnt"&gt;1195
&lt;/span&gt;&lt;span class="lnt"&gt;1196
&lt;/span&gt;&lt;span class="lnt"&gt;1197
&lt;/span&gt;&lt;span class="lnt"&gt;1198
&lt;/span&gt;&lt;span class="lnt"&gt;1199
&lt;/span&gt;&lt;span class="lnt"&gt;1200
&lt;/span&gt;&lt;span class="lnt"&gt;1201
&lt;/span&gt;&lt;span class="lnt"&gt;1202
&lt;/span&gt;&lt;span class="lnt"&gt;1203
&lt;/span&gt;&lt;span class="lnt"&gt;1204
&lt;/span&gt;&lt;span class="lnt"&gt;1205
&lt;/span&gt;&lt;span class="lnt"&gt;1206
&lt;/span&gt;&lt;span class="lnt"&gt;1207
&lt;/span&gt;&lt;span class="lnt"&gt;1208
&lt;/span&gt;&lt;span class="lnt"&gt;1209
&lt;/span&gt;&lt;span class="lnt"&gt;1210
&lt;/span&gt;&lt;span class="lnt"&gt;1211
&lt;/span&gt;&lt;span class="lnt"&gt;1212
&lt;/span&gt;&lt;span class="lnt"&gt;1213
&lt;/span&gt;&lt;span class="lnt"&gt;1214
&lt;/span&gt;&lt;span class="lnt"&gt;1215
&lt;/span&gt;&lt;span class="lnt"&gt;1216
&lt;/span&gt;&lt;span class="lnt"&gt;1217
&lt;/span&gt;&lt;span class="lnt"&gt;1218
&lt;/span&gt;&lt;span class="lnt"&gt;1219
&lt;/span&gt;&lt;span class="lnt"&gt;1220
&lt;/span&gt;&lt;span class="lnt"&gt;1221
&lt;/span&gt;&lt;span class="lnt"&gt;1222
&lt;/span&gt;&lt;span class="lnt"&gt;1223
&lt;/span&gt;&lt;span class="lnt"&gt;1224
&lt;/span&gt;&lt;span class="lnt"&gt;1225
&lt;/span&gt;&lt;span class="lnt"&gt;1226
&lt;/span&gt;&lt;span class="lnt"&gt;1227
&lt;/span&gt;&lt;span class="lnt"&gt;1228
&lt;/span&gt;&lt;span class="lnt"&gt;1229
&lt;/span&gt;&lt;span class="lnt"&gt;1230
&lt;/span&gt;&lt;span class="lnt"&gt;1231
&lt;/span&gt;&lt;span class="lnt"&gt;1232
&lt;/span&gt;&lt;span class="lnt"&gt;1233
&lt;/span&gt;&lt;span class="lnt"&gt;1234
&lt;/span&gt;&lt;span class="lnt"&gt;1235
&lt;/span&gt;&lt;span class="lnt"&gt;1236
&lt;/span&gt;&lt;span class="lnt"&gt;1237
&lt;/span&gt;&lt;span class="lnt"&gt;1238
&lt;/span&gt;&lt;span class="lnt"&gt;1239
&lt;/span&gt;&lt;span class="lnt"&gt;1240
&lt;/span&gt;&lt;span class="lnt"&gt;1241
&lt;/span&gt;&lt;span class="lnt"&gt;1242
&lt;/span&gt;&lt;span class="lnt"&gt;1243
&lt;/span&gt;&lt;span class="lnt"&gt;1244
&lt;/span&gt;&lt;span class="lnt"&gt;1245
&lt;/span&gt;&lt;span class="lnt"&gt;1246
&lt;/span&gt;&lt;span class="lnt"&gt;1247
&lt;/span&gt;&lt;span class="lnt"&gt;1248
&lt;/span&gt;&lt;span class="lnt"&gt;1249
&lt;/span&gt;&lt;span class="lnt"&gt;1250
&lt;/span&gt;&lt;span class="lnt"&gt;1251
&lt;/span&gt;&lt;span class="lnt"&gt;1252
&lt;/span&gt;&lt;span class="lnt"&gt;1253
&lt;/span&gt;&lt;span class="lnt"&gt;1254
&lt;/span&gt;&lt;span class="lnt"&gt;1255
&lt;/span&gt;&lt;span class="lnt"&gt;1256
&lt;/span&gt;&lt;span class="lnt"&gt;1257
&lt;/span&gt;&lt;span class="lnt"&gt;1258
&lt;/span&gt;&lt;span class="lnt"&gt;1259
&lt;/span&gt;&lt;span class="lnt"&gt;1260
&lt;/span&gt;&lt;span class="lnt"&gt;1261
&lt;/span&gt;&lt;span class="lnt"&gt;1262
&lt;/span&gt;&lt;span class="lnt"&gt;1263
&lt;/span&gt;&lt;span class="lnt"&gt;1264
&lt;/span&gt;&lt;span class="lnt"&gt;1265
&lt;/span&gt;&lt;span class="lnt"&gt;1266
&lt;/span&gt;&lt;span class="lnt"&gt;1267
&lt;/span&gt;&lt;span class="lnt"&gt;1268
&lt;/span&gt;&lt;span class="lnt"&gt;1269
&lt;/span&gt;&lt;span class="lnt"&gt;1270
&lt;/span&gt;&lt;span class="lnt"&gt;1271
&lt;/span&gt;&lt;span class="lnt"&gt;1272
&lt;/span&gt;&lt;span class="lnt"&gt;1273
&lt;/span&gt;&lt;span class="lnt"&gt;1274
&lt;/span&gt;&lt;span class="lnt"&gt;1275
&lt;/span&gt;&lt;span class="lnt"&gt;1276
&lt;/span&gt;&lt;span class="lnt"&gt;1277
&lt;/span&gt;&lt;span class="lnt"&gt;1278
&lt;/span&gt;&lt;span class="lnt"&gt;1279
&lt;/span&gt;&lt;span class="lnt"&gt;1280
&lt;/span&gt;&lt;span class="lnt"&gt;1281
&lt;/span&gt;&lt;span class="lnt"&gt;1282
&lt;/span&gt;&lt;span class="lnt"&gt;1283
&lt;/span&gt;&lt;span class="lnt"&gt;1284
&lt;/span&gt;&lt;span class="lnt"&gt;1285
&lt;/span&gt;&lt;span class="lnt"&gt;1286
&lt;/span&gt;&lt;span class="lnt"&gt;1287
&lt;/span&gt;&lt;span class="lnt"&gt;1288
&lt;/span&gt;&lt;span class="lnt"&gt;1289
&lt;/span&gt;&lt;span class="lnt"&gt;1290
&lt;/span&gt;&lt;span class="lnt"&gt;1291
&lt;/span&gt;&lt;span class="lnt"&gt;1292
&lt;/span&gt;&lt;span class="lnt"&gt;1293
&lt;/span&gt;&lt;span class="lnt"&gt;1294
&lt;/span&gt;&lt;span class="lnt"&gt;1295
&lt;/span&gt;&lt;span class="lnt"&gt;1296
&lt;/span&gt;&lt;span class="lnt"&gt;1297
&lt;/span&gt;&lt;span class="lnt"&gt;1298
&lt;/span&gt;&lt;span class="lnt"&gt;1299
&lt;/span&gt;&lt;span class="lnt"&gt;1300
&lt;/span&gt;&lt;span class="lnt"&gt;1301
&lt;/span&gt;&lt;span class="lnt"&gt;1302
&lt;/span&gt;&lt;span class="lnt"&gt;1303
&lt;/span&gt;&lt;span class="lnt"&gt;1304
&lt;/span&gt;&lt;span class="lnt"&gt;1305
&lt;/span&gt;&lt;span class="lnt"&gt;1306
&lt;/span&gt;&lt;span class="lnt"&gt;1307
&lt;/span&gt;&lt;span class="lnt"&gt;1308
&lt;/span&gt;&lt;span class="lnt"&gt;1309
&lt;/span&gt;&lt;span class="lnt"&gt;1310
&lt;/span&gt;&lt;span class="lnt"&gt;1311
&lt;/span&gt;&lt;span class="lnt"&gt;1312
&lt;/span&gt;&lt;span class="lnt"&gt;1313
&lt;/span&gt;&lt;span class="lnt"&gt;1314
&lt;/span&gt;&lt;span class="lnt"&gt;1315
&lt;/span&gt;&lt;span class="lnt"&gt;1316
&lt;/span&gt;&lt;span class="lnt"&gt;1317
&lt;/span&gt;&lt;span class="lnt"&gt;1318
&lt;/span&gt;&lt;span class="lnt"&gt;1319
&lt;/span&gt;&lt;span class="lnt"&gt;1320
&lt;/span&gt;&lt;span class="lnt"&gt;1321
&lt;/span&gt;&lt;span class="lnt"&gt;1322
&lt;/span&gt;&lt;span class="lnt"&gt;1323
&lt;/span&gt;&lt;span class="lnt"&gt;1324
&lt;/span&gt;&lt;span class="lnt"&gt;1325
&lt;/span&gt;&lt;span class="lnt"&gt;1326
&lt;/span&gt;&lt;span class="lnt"&gt;1327
&lt;/span&gt;&lt;span class="lnt"&gt;1328
&lt;/span&gt;&lt;span class="lnt"&gt;1329
&lt;/span&gt;&lt;span class="lnt"&gt;1330
&lt;/span&gt;&lt;span class="lnt"&gt;1331
&lt;/span&gt;&lt;span class="lnt"&gt;1332
&lt;/span&gt;&lt;span class="lnt"&gt;1333
&lt;/span&gt;&lt;span class="lnt"&gt;1334
&lt;/span&gt;&lt;span class="lnt"&gt;1335
&lt;/span&gt;&lt;span class="lnt"&gt;1336
&lt;/span&gt;&lt;span class="lnt"&gt;1337
&lt;/span&gt;&lt;span class="lnt"&gt;1338
&lt;/span&gt;&lt;span class="lnt"&gt;1339
&lt;/span&gt;&lt;span class="lnt"&gt;1340
&lt;/span&gt;&lt;span class="lnt"&gt;1341
&lt;/span&gt;&lt;span class="lnt"&gt;1342
&lt;/span&gt;&lt;span class="lnt"&gt;1343
&lt;/span&gt;&lt;span class="lnt"&gt;1344
&lt;/span&gt;&lt;span class="lnt"&gt;1345
&lt;/span&gt;&lt;span class="lnt"&gt;1346
&lt;/span&gt;&lt;span class="lnt"&gt;1347
&lt;/span&gt;&lt;span class="lnt"&gt;1348
&lt;/span&gt;&lt;span class="lnt"&gt;1349
&lt;/span&gt;&lt;span class="lnt"&gt;1350
&lt;/span&gt;&lt;span class="lnt"&gt;1351
&lt;/span&gt;&lt;span class="lnt"&gt;1352
&lt;/span&gt;&lt;span class="lnt"&gt;1353
&lt;/span&gt;&lt;span class="lnt"&gt;1354
&lt;/span&gt;&lt;span class="lnt"&gt;1355
&lt;/span&gt;&lt;span class="lnt"&gt;1356
&lt;/span&gt;&lt;span class="lnt"&gt;1357
&lt;/span&gt;&lt;span class="lnt"&gt;1358
&lt;/span&gt;&lt;span class="lnt"&gt;1359
&lt;/span&gt;&lt;span class="lnt"&gt;1360
&lt;/span&gt;&lt;span class="lnt"&gt;1361
&lt;/span&gt;&lt;span class="lnt"&gt;1362
&lt;/span&gt;&lt;span class="lnt"&gt;1363
&lt;/span&gt;&lt;span class="lnt"&gt;1364
&lt;/span&gt;&lt;span class="lnt"&gt;1365
&lt;/span&gt;&lt;span class="lnt"&gt;1366
&lt;/span&gt;&lt;span class="lnt"&gt;1367
&lt;/span&gt;&lt;span class="lnt"&gt;1368
&lt;/span&gt;&lt;span class="lnt"&gt;1369
&lt;/span&gt;&lt;span class="lnt"&gt;1370
&lt;/span&gt;&lt;span class="lnt"&gt;1371
&lt;/span&gt;&lt;span class="lnt"&gt;1372
&lt;/span&gt;&lt;span class="lnt"&gt;1373
&lt;/span&gt;&lt;span class="lnt"&gt;1374
&lt;/span&gt;&lt;span class="lnt"&gt;1375
&lt;/span&gt;&lt;span class="lnt"&gt;1376
&lt;/span&gt;&lt;span class="lnt"&gt;1377
&lt;/span&gt;&lt;span class="lnt"&gt;1378
&lt;/span&gt;&lt;span class="lnt"&gt;1379
&lt;/span&gt;&lt;span class="lnt"&gt;1380
&lt;/span&gt;&lt;span class="lnt"&gt;1381
&lt;/span&gt;&lt;span class="lnt"&gt;1382
&lt;/span&gt;&lt;span class="lnt"&gt;1383
&lt;/span&gt;&lt;span class="lnt"&gt;1384
&lt;/span&gt;&lt;span class="lnt"&gt;1385
&lt;/span&gt;&lt;span class="lnt"&gt;1386
&lt;/span&gt;&lt;span class="lnt"&gt;1387
&lt;/span&gt;&lt;span class="lnt"&gt;1388
&lt;/span&gt;&lt;span class="lnt"&gt;1389
&lt;/span&gt;&lt;span class="lnt"&gt;1390
&lt;/span&gt;&lt;span class="lnt"&gt;1391
&lt;/span&gt;&lt;span class="lnt"&gt;1392
&lt;/span&gt;&lt;span class="lnt"&gt;1393
&lt;/span&gt;&lt;span class="lnt"&gt;1394
&lt;/span&gt;&lt;span class="lnt"&gt;1395
&lt;/span&gt;&lt;span class="lnt"&gt;1396
&lt;/span&gt;&lt;span class="lnt"&gt;1397
&lt;/span&gt;&lt;span class="lnt"&gt;1398
&lt;/span&gt;&lt;span class="lnt"&gt;1399
&lt;/span&gt;&lt;span class="lnt"&gt;1400
&lt;/span&gt;&lt;span class="lnt"&gt;1401
&lt;/span&gt;&lt;span class="lnt"&gt;1402
&lt;/span&gt;&lt;span class="lnt"&gt;1403
&lt;/span&gt;&lt;span class="lnt"&gt;1404
&lt;/span&gt;&lt;span class="lnt"&gt;1405
&lt;/span&gt;&lt;span class="lnt"&gt;1406
&lt;/span&gt;&lt;span class="lnt"&gt;1407
&lt;/span&gt;&lt;span class="lnt"&gt;1408
&lt;/span&gt;&lt;span class="lnt"&gt;1409
&lt;/span&gt;&lt;span class="lnt"&gt;1410
&lt;/span&gt;&lt;span class="lnt"&gt;1411
&lt;/span&gt;&lt;span class="lnt"&gt;1412
&lt;/span&gt;&lt;span class="lnt"&gt;1413
&lt;/span&gt;&lt;span class="lnt"&gt;1414
&lt;/span&gt;&lt;span class="lnt"&gt;1415
&lt;/span&gt;&lt;span class="lnt"&gt;1416
&lt;/span&gt;&lt;span class="lnt"&gt;1417
&lt;/span&gt;&lt;span class="lnt"&gt;1418
&lt;/span&gt;&lt;span class="lnt"&gt;1419
&lt;/span&gt;&lt;span class="lnt"&gt;1420
&lt;/span&gt;&lt;span class="lnt"&gt;1421
&lt;/span&gt;&lt;span class="lnt"&gt;1422
&lt;/span&gt;&lt;span class="lnt"&gt;1423
&lt;/span&gt;&lt;span class="lnt"&gt;1424
&lt;/span&gt;&lt;span class="lnt"&gt;1425
&lt;/span&gt;&lt;span class="lnt"&gt;1426
&lt;/span&gt;&lt;span class="lnt"&gt;1427
&lt;/span&gt;&lt;span class="lnt"&gt;1428
&lt;/span&gt;&lt;span class="lnt"&gt;1429
&lt;/span&gt;&lt;span class="lnt"&gt;1430
&lt;/span&gt;&lt;span class="lnt"&gt;1431
&lt;/span&gt;&lt;span class="lnt"&gt;1432
&lt;/span&gt;&lt;span class="lnt"&gt;1433
&lt;/span&gt;&lt;span class="lnt"&gt;1434
&lt;/span&gt;&lt;span class="lnt"&gt;1435
&lt;/span&gt;&lt;span class="lnt"&gt;1436
&lt;/span&gt;&lt;span class="lnt"&gt;1437
&lt;/span&gt;&lt;span class="lnt"&gt;1438
&lt;/span&gt;&lt;span class="lnt"&gt;1439
&lt;/span&gt;&lt;span class="lnt"&gt;1440
&lt;/span&gt;&lt;span class="lnt"&gt;1441
&lt;/span&gt;&lt;span class="lnt"&gt;1442
&lt;/span&gt;&lt;span class="lnt"&gt;1443
&lt;/span&gt;&lt;span class="lnt"&gt;1444
&lt;/span&gt;&lt;span class="lnt"&gt;1445
&lt;/span&gt;&lt;span class="lnt"&gt;1446
&lt;/span&gt;&lt;span class="lnt"&gt;1447
&lt;/span&gt;&lt;span class="lnt"&gt;1448
&lt;/span&gt;&lt;span class="lnt"&gt;1449
&lt;/span&gt;&lt;span class="lnt"&gt;1450
&lt;/span&gt;&lt;span class="lnt"&gt;1451
&lt;/span&gt;&lt;span class="lnt"&gt;1452
&lt;/span&gt;&lt;span class="lnt"&gt;1453
&lt;/span&gt;&lt;span class="lnt"&gt;1454
&lt;/span&gt;&lt;span class="lnt"&gt;1455
&lt;/span&gt;&lt;span class="lnt"&gt;1456
&lt;/span&gt;&lt;span class="lnt"&gt;1457
&lt;/span&gt;&lt;span class="lnt"&gt;1458
&lt;/span&gt;&lt;span class="lnt"&gt;1459
&lt;/span&gt;&lt;span class="lnt"&gt;1460
&lt;/span&gt;&lt;span class="lnt"&gt;1461
&lt;/span&gt;&lt;span class="lnt"&gt;1462
&lt;/span&gt;&lt;span class="lnt"&gt;1463
&lt;/span&gt;&lt;span class="lnt"&gt;1464
&lt;/span&gt;&lt;span class="lnt"&gt;1465
&lt;/span&gt;&lt;span class="lnt"&gt;1466
&lt;/span&gt;&lt;span class="lnt"&gt;1467
&lt;/span&gt;&lt;span class="lnt"&gt;1468
&lt;/span&gt;&lt;span class="lnt"&gt;1469
&lt;/span&gt;&lt;span class="lnt"&gt;1470
&lt;/span&gt;&lt;span class="lnt"&gt;1471
&lt;/span&gt;&lt;span class="lnt"&gt;1472
&lt;/span&gt;&lt;span class="lnt"&gt;1473
&lt;/span&gt;&lt;span class="lnt"&gt;1474
&lt;/span&gt;&lt;span class="lnt"&gt;1475
&lt;/span&gt;&lt;span class="lnt"&gt;1476
&lt;/span&gt;&lt;span class="lnt"&gt;1477
&lt;/span&gt;&lt;span class="lnt"&gt;1478
&lt;/span&gt;&lt;span class="lnt"&gt;1479
&lt;/span&gt;&lt;span class="lnt"&gt;1480
&lt;/span&gt;&lt;span class="lnt"&gt;1481
&lt;/span&gt;&lt;span class="lnt"&gt;1482
&lt;/span&gt;&lt;span class="lnt"&gt;1483
&lt;/span&gt;&lt;span class="lnt"&gt;1484
&lt;/span&gt;&lt;span class="lnt"&gt;1485
&lt;/span&gt;&lt;span class="lnt"&gt;1486
&lt;/span&gt;&lt;span class="lnt"&gt;1487
&lt;/span&gt;&lt;span class="lnt"&gt;1488
&lt;/span&gt;&lt;span class="lnt"&gt;1489
&lt;/span&gt;&lt;span class="lnt"&gt;1490
&lt;/span&gt;&lt;span class="lnt"&gt;1491
&lt;/span&gt;&lt;span class="lnt"&gt;1492
&lt;/span&gt;&lt;span class="lnt"&gt;1493
&lt;/span&gt;&lt;span class="lnt"&gt;1494
&lt;/span&gt;&lt;span class="lnt"&gt;1495
&lt;/span&gt;&lt;span class="lnt"&gt;1496
&lt;/span&gt;&lt;span class="lnt"&gt;1497
&lt;/span&gt;&lt;span class="lnt"&gt;1498
&lt;/span&gt;&lt;span class="lnt"&gt;1499
&lt;/span&gt;&lt;span class="lnt"&gt;1500
&lt;/span&gt;&lt;span class="lnt"&gt;1501
&lt;/span&gt;&lt;span class="lnt"&gt;1502
&lt;/span&gt;&lt;span class="lnt"&gt;1503
&lt;/span&gt;&lt;span class="lnt"&gt;1504
&lt;/span&gt;&lt;span class="lnt"&gt;1505
&lt;/span&gt;&lt;span class="lnt"&gt;1506
&lt;/span&gt;&lt;span class="lnt"&gt;1507
&lt;/span&gt;&lt;span class="lnt"&gt;1508
&lt;/span&gt;&lt;span class="lnt"&gt;1509
&lt;/span&gt;&lt;span class="lnt"&gt;1510
&lt;/span&gt;&lt;span class="lnt"&gt;1511
&lt;/span&gt;&lt;span class="lnt"&gt;1512
&lt;/span&gt;&lt;span class="lnt"&gt;1513
&lt;/span&gt;&lt;span class="lnt"&gt;1514
&lt;/span&gt;&lt;span class="lnt"&gt;1515
&lt;/span&gt;&lt;span class="lnt"&gt;1516
&lt;/span&gt;&lt;span class="lnt"&gt;1517
&lt;/span&gt;&lt;span class="lnt"&gt;1518
&lt;/span&gt;&lt;span class="lnt"&gt;1519
&lt;/span&gt;&lt;span class="lnt"&gt;1520
&lt;/span&gt;&lt;span class="lnt"&gt;1521
&lt;/span&gt;&lt;span class="lnt"&gt;1522
&lt;/span&gt;&lt;span class="lnt"&gt;1523
&lt;/span&gt;&lt;span class="lnt"&gt;1524
&lt;/span&gt;&lt;span class="lnt"&gt;1525
&lt;/span&gt;&lt;span class="lnt"&gt;1526
&lt;/span&gt;&lt;span class="lnt"&gt;1527
&lt;/span&gt;&lt;span class="lnt"&gt;1528
&lt;/span&gt;&lt;span class="lnt"&gt;1529
&lt;/span&gt;&lt;span class="lnt"&gt;1530
&lt;/span&gt;&lt;span class="lnt"&gt;1531
&lt;/span&gt;&lt;span class="lnt"&gt;1532
&lt;/span&gt;&lt;span class="lnt"&gt;1533
&lt;/span&gt;&lt;span class="lnt"&gt;1534
&lt;/span&gt;&lt;span class="lnt"&gt;1535
&lt;/span&gt;&lt;span class="lnt"&gt;1536
&lt;/span&gt;&lt;span class="lnt"&gt;1537
&lt;/span&gt;&lt;span class="lnt"&gt;1538
&lt;/span&gt;&lt;span class="lnt"&gt;1539
&lt;/span&gt;&lt;span class="lnt"&gt;1540
&lt;/span&gt;&lt;span class="lnt"&gt;1541
&lt;/span&gt;&lt;span class="lnt"&gt;1542
&lt;/span&gt;&lt;span class="lnt"&gt;1543
&lt;/span&gt;&lt;span class="lnt"&gt;1544
&lt;/span&gt;&lt;span class="lnt"&gt;1545
&lt;/span&gt;&lt;span class="lnt"&gt;1546
&lt;/span&gt;&lt;span class="lnt"&gt;1547
&lt;/span&gt;&lt;span class="lnt"&gt;1548
&lt;/span&gt;&lt;span class="lnt"&gt;1549
&lt;/span&gt;&lt;span class="lnt"&gt;1550
&lt;/span&gt;&lt;span class="lnt"&gt;1551
&lt;/span&gt;&lt;span class="lnt"&gt;1552
&lt;/span&gt;&lt;span class="lnt"&gt;1553
&lt;/span&gt;&lt;span class="lnt"&gt;1554
&lt;/span&gt;&lt;span class="lnt"&gt;1555
&lt;/span&gt;&lt;span class="lnt"&gt;1556
&lt;/span&gt;&lt;span class="lnt"&gt;1557
&lt;/span&gt;&lt;span class="lnt"&gt;1558
&lt;/span&gt;&lt;span class="lnt"&gt;1559
&lt;/span&gt;&lt;span class="lnt"&gt;1560
&lt;/span&gt;&lt;span class="lnt"&gt;1561
&lt;/span&gt;&lt;span class="lnt"&gt;1562
&lt;/span&gt;&lt;span class="lnt"&gt;1563
&lt;/span&gt;&lt;span class="lnt"&gt;1564
&lt;/span&gt;&lt;span class="lnt"&gt;1565
&lt;/span&gt;&lt;span class="lnt"&gt;1566
&lt;/span&gt;&lt;span class="lnt"&gt;1567
&lt;/span&gt;&lt;span class="lnt"&gt;1568
&lt;/span&gt;&lt;span class="lnt"&gt;1569
&lt;/span&gt;&lt;span class="lnt"&gt;1570
&lt;/span&gt;&lt;span class="lnt"&gt;1571
&lt;/span&gt;&lt;span class="lnt"&gt;1572
&lt;/span&gt;&lt;span class="lnt"&gt;1573
&lt;/span&gt;&lt;span class="lnt"&gt;1574
&lt;/span&gt;&lt;span class="lnt"&gt;1575
&lt;/span&gt;&lt;span class="lnt"&gt;1576
&lt;/span&gt;&lt;span class="lnt"&gt;1577
&lt;/span&gt;&lt;span class="lnt"&gt;1578
&lt;/span&gt;&lt;span class="lnt"&gt;1579
&lt;/span&gt;&lt;span class="lnt"&gt;1580
&lt;/span&gt;&lt;span class="lnt"&gt;1581
&lt;/span&gt;&lt;span class="lnt"&gt;1582
&lt;/span&gt;&lt;span class="lnt"&gt;1583
&lt;/span&gt;&lt;span class="lnt"&gt;1584
&lt;/span&gt;&lt;span class="lnt"&gt;1585
&lt;/span&gt;&lt;span class="lnt"&gt;1586
&lt;/span&gt;&lt;span class="lnt"&gt;1587
&lt;/span&gt;&lt;span class="lnt"&gt;1588
&lt;/span&gt;&lt;span class="lnt"&gt;1589
&lt;/span&gt;&lt;span class="lnt"&gt;1590
&lt;/span&gt;&lt;span class="lnt"&gt;1591
&lt;/span&gt;&lt;span class="lnt"&gt;1592
&lt;/span&gt;&lt;span class="lnt"&gt;1593
&lt;/span&gt;&lt;span class="lnt"&gt;1594
&lt;/span&gt;&lt;span class="lnt"&gt;1595
&lt;/span&gt;&lt;span class="lnt"&gt;1596
&lt;/span&gt;&lt;span class="lnt"&gt;1597
&lt;/span&gt;&lt;span class="lnt"&gt;1598
&lt;/span&gt;&lt;span class="lnt"&gt;1599
&lt;/span&gt;&lt;span class="lnt"&gt;1600
&lt;/span&gt;&lt;span class="lnt"&gt;1601
&lt;/span&gt;&lt;span class="lnt"&gt;1602
&lt;/span&gt;&lt;span class="lnt"&gt;1603
&lt;/span&gt;&lt;span class="lnt"&gt;1604
&lt;/span&gt;&lt;span class="lnt"&gt;1605
&lt;/span&gt;&lt;span class="lnt"&gt;1606
&lt;/span&gt;&lt;span class="lnt"&gt;1607
&lt;/span&gt;&lt;span class="lnt"&gt;1608
&lt;/span&gt;&lt;span class="lnt"&gt;1609
&lt;/span&gt;&lt;span class="lnt"&gt;1610
&lt;/span&gt;&lt;span class="lnt"&gt;1611
&lt;/span&gt;&lt;span class="lnt"&gt;1612
&lt;/span&gt;&lt;span class="lnt"&gt;1613
&lt;/span&gt;&lt;span class="lnt"&gt;1614
&lt;/span&gt;&lt;span class="lnt"&gt;1615
&lt;/span&gt;&lt;span class="lnt"&gt;1616
&lt;/span&gt;&lt;span class="lnt"&gt;1617
&lt;/span&gt;&lt;span class="lnt"&gt;1618
&lt;/span&gt;&lt;span class="lnt"&gt;1619
&lt;/span&gt;&lt;span class="lnt"&gt;1620
&lt;/span&gt;&lt;span class="lnt"&gt;1621
&lt;/span&gt;&lt;span class="lnt"&gt;1622
&lt;/span&gt;&lt;span class="lnt"&gt;1623
&lt;/span&gt;&lt;span class="lnt"&gt;1624
&lt;/span&gt;&lt;span class="lnt"&gt;1625
&lt;/span&gt;&lt;span class="lnt"&gt;1626
&lt;/span&gt;&lt;span class="lnt"&gt;1627
&lt;/span&gt;&lt;span class="lnt"&gt;1628
&lt;/span&gt;&lt;span class="lnt"&gt;1629
&lt;/span&gt;&lt;span class="lnt"&gt;1630
&lt;/span&gt;&lt;span class="lnt"&gt;1631
&lt;/span&gt;&lt;span class="lnt"&gt;1632
&lt;/span&gt;&lt;span class="lnt"&gt;1633
&lt;/span&gt;&lt;span class="lnt"&gt;1634
&lt;/span&gt;&lt;span class="lnt"&gt;1635
&lt;/span&gt;&lt;span class="lnt"&gt;1636
&lt;/span&gt;&lt;span class="lnt"&gt;1637
&lt;/span&gt;&lt;span class="lnt"&gt;1638
&lt;/span&gt;&lt;span class="lnt"&gt;1639
&lt;/span&gt;&lt;span class="lnt"&gt;1640
&lt;/span&gt;&lt;span class="lnt"&gt;1641
&lt;/span&gt;&lt;span class="lnt"&gt;1642
&lt;/span&gt;&lt;span class="lnt"&gt;1643
&lt;/span&gt;&lt;span class="lnt"&gt;1644
&lt;/span&gt;&lt;span class="lnt"&gt;1645
&lt;/span&gt;&lt;span class="lnt"&gt;1646
&lt;/span&gt;&lt;span class="lnt"&gt;1647
&lt;/span&gt;&lt;span class="lnt"&gt;1648
&lt;/span&gt;&lt;span class="lnt"&gt;1649
&lt;/span&gt;&lt;span class="lnt"&gt;1650
&lt;/span&gt;&lt;span class="lnt"&gt;1651
&lt;/span&gt;&lt;span class="lnt"&gt;1652
&lt;/span&gt;&lt;span class="lnt"&gt;1653
&lt;/span&gt;&lt;span class="lnt"&gt;1654
&lt;/span&gt;&lt;span class="lnt"&gt;1655
&lt;/span&gt;&lt;span class="lnt"&gt;1656
&lt;/span&gt;&lt;span class="lnt"&gt;1657
&lt;/span&gt;&lt;span class="lnt"&gt;1658
&lt;/span&gt;&lt;span class="lnt"&gt;1659
&lt;/span&gt;&lt;span class="lnt"&gt;1660
&lt;/span&gt;&lt;span class="lnt"&gt;1661
&lt;/span&gt;&lt;span class="lnt"&gt;1662
&lt;/span&gt;&lt;span class="lnt"&gt;1663
&lt;/span&gt;&lt;span class="lnt"&gt;1664
&lt;/span&gt;&lt;span class="lnt"&gt;1665
&lt;/span&gt;&lt;span class="lnt"&gt;1666
&lt;/span&gt;&lt;span class="lnt"&gt;1667
&lt;/span&gt;&lt;span class="lnt"&gt;1668
&lt;/span&gt;&lt;span class="lnt"&gt;1669
&lt;/span&gt;&lt;span class="lnt"&gt;1670
&lt;/span&gt;&lt;span class="lnt"&gt;1671
&lt;/span&gt;&lt;span class="lnt"&gt;1672
&lt;/span&gt;&lt;span class="lnt"&gt;1673
&lt;/span&gt;&lt;span class="lnt"&gt;1674
&lt;/span&gt;&lt;span class="lnt"&gt;1675
&lt;/span&gt;&lt;span class="lnt"&gt;1676
&lt;/span&gt;&lt;span class="lnt"&gt;1677
&lt;/span&gt;&lt;span class="lnt"&gt;1678
&lt;/span&gt;&lt;span class="lnt"&gt;1679
&lt;/span&gt;&lt;span class="lnt"&gt;1680
&lt;/span&gt;&lt;span class="lnt"&gt;1681
&lt;/span&gt;&lt;span class="lnt"&gt;1682
&lt;/span&gt;&lt;span class="lnt"&gt;1683
&lt;/span&gt;&lt;span class="lnt"&gt;1684
&lt;/span&gt;&lt;span class="lnt"&gt;1685
&lt;/span&gt;&lt;span class="lnt"&gt;1686
&lt;/span&gt;&lt;span class="lnt"&gt;1687
&lt;/span&gt;&lt;span class="lnt"&gt;1688
&lt;/span&gt;&lt;span class="lnt"&gt;1689
&lt;/span&gt;&lt;span class="lnt"&gt;1690
&lt;/span&gt;&lt;span class="lnt"&gt;1691
&lt;/span&gt;&lt;span class="lnt"&gt;1692
&lt;/span&gt;&lt;span class="lnt"&gt;1693
&lt;/span&gt;&lt;span class="lnt"&gt;1694
&lt;/span&gt;&lt;span class="lnt"&gt;1695
&lt;/span&gt;&lt;span class="lnt"&gt;1696
&lt;/span&gt;&lt;span class="lnt"&gt;1697
&lt;/span&gt;&lt;span class="lnt"&gt;1698
&lt;/span&gt;&lt;span class="lnt"&gt;1699
&lt;/span&gt;&lt;span class="lnt"&gt;1700
&lt;/span&gt;&lt;span class="lnt"&gt;1701
&lt;/span&gt;&lt;span class="lnt"&gt;1702
&lt;/span&gt;&lt;span class="lnt"&gt;1703
&lt;/span&gt;&lt;span class="lnt"&gt;1704
&lt;/span&gt;&lt;span class="lnt"&gt;1705
&lt;/span&gt;&lt;span class="lnt"&gt;1706
&lt;/span&gt;&lt;span class="lnt"&gt;1707
&lt;/span&gt;&lt;span class="lnt"&gt;1708
&lt;/span&gt;&lt;span class="lnt"&gt;1709
&lt;/span&gt;&lt;span class="lnt"&gt;1710
&lt;/span&gt;&lt;span class="lnt"&gt;1711
&lt;/span&gt;&lt;span class="lnt"&gt;1712
&lt;/span&gt;&lt;span class="lnt"&gt;1713
&lt;/span&gt;&lt;span class="lnt"&gt;1714
&lt;/span&gt;&lt;span class="lnt"&gt;1715
&lt;/span&gt;&lt;span class="lnt"&gt;1716
&lt;/span&gt;&lt;span class="lnt"&gt;1717
&lt;/span&gt;&lt;span class="lnt"&gt;1718
&lt;/span&gt;&lt;span class="lnt"&gt;1719
&lt;/span&gt;&lt;span class="lnt"&gt;1720
&lt;/span&gt;&lt;span class="lnt"&gt;1721
&lt;/span&gt;&lt;span class="lnt"&gt;1722
&lt;/span&gt;&lt;span class="lnt"&gt;1723
&lt;/span&gt;&lt;span class="lnt"&gt;1724
&lt;/span&gt;&lt;span class="lnt"&gt;1725
&lt;/span&gt;&lt;span class="lnt"&gt;1726
&lt;/span&gt;&lt;span class="lnt"&gt;1727
&lt;/span&gt;&lt;span class="lnt"&gt;1728
&lt;/span&gt;&lt;span class="lnt"&gt;1729
&lt;/span&gt;&lt;span class="lnt"&gt;1730
&lt;/span&gt;&lt;span class="lnt"&gt;1731
&lt;/span&gt;&lt;span class="lnt"&gt;1732
&lt;/span&gt;&lt;span class="lnt"&gt;1733
&lt;/span&gt;&lt;span class="lnt"&gt;1734
&lt;/span&gt;&lt;span class="lnt"&gt;1735
&lt;/span&gt;&lt;span class="lnt"&gt;1736
&lt;/span&gt;&lt;span class="lnt"&gt;1737
&lt;/span&gt;&lt;span class="lnt"&gt;1738
&lt;/span&gt;&lt;span class="lnt"&gt;1739
&lt;/span&gt;&lt;span class="lnt"&gt;1740
&lt;/span&gt;&lt;span class="lnt"&gt;1741
&lt;/span&gt;&lt;span class="lnt"&gt;1742
&lt;/span&gt;&lt;span class="lnt"&gt;1743
&lt;/span&gt;&lt;span class="lnt"&gt;1744
&lt;/span&gt;&lt;span class="lnt"&gt;1745
&lt;/span&gt;&lt;span class="lnt"&gt;1746
&lt;/span&gt;&lt;span class="lnt"&gt;1747
&lt;/span&gt;&lt;span class="lnt"&gt;1748
&lt;/span&gt;&lt;span class="lnt"&gt;1749
&lt;/span&gt;&lt;span class="lnt"&gt;1750
&lt;/span&gt;&lt;span class="lnt"&gt;1751
&lt;/span&gt;&lt;span class="lnt"&gt;1752
&lt;/span&gt;&lt;span class="lnt"&gt;1753
&lt;/span&gt;&lt;span class="lnt"&gt;1754
&lt;/span&gt;&lt;span class="lnt"&gt;1755
&lt;/span&gt;&lt;span class="lnt"&gt;1756
&lt;/span&gt;&lt;span class="lnt"&gt;1757
&lt;/span&gt;&lt;span class="lnt"&gt;1758
&lt;/span&gt;&lt;span class="lnt"&gt;1759
&lt;/span&gt;&lt;span class="lnt"&gt;1760
&lt;/span&gt;&lt;span class="lnt"&gt;1761
&lt;/span&gt;&lt;span class="lnt"&gt;1762
&lt;/span&gt;&lt;span class="lnt"&gt;1763
&lt;/span&gt;&lt;span class="lnt"&gt;1764
&lt;/span&gt;&lt;span class="lnt"&gt;1765
&lt;/span&gt;&lt;span class="lnt"&gt;1766
&lt;/span&gt;&lt;span class="lnt"&gt;1767
&lt;/span&gt;&lt;span class="lnt"&gt;1768
&lt;/span&gt;&lt;span class="lnt"&gt;1769
&lt;/span&gt;&lt;span class="lnt"&gt;1770
&lt;/span&gt;&lt;span class="lnt"&gt;1771
&lt;/span&gt;&lt;span class="lnt"&gt;1772
&lt;/span&gt;&lt;span class="lnt"&gt;1773
&lt;/span&gt;&lt;span class="lnt"&gt;1774
&lt;/span&gt;&lt;span class="lnt"&gt;1775
&lt;/span&gt;&lt;span class="lnt"&gt;1776
&lt;/span&gt;&lt;span class="lnt"&gt;1777
&lt;/span&gt;&lt;span class="lnt"&gt;1778
&lt;/span&gt;&lt;span class="lnt"&gt;1779
&lt;/span&gt;&lt;span class="lnt"&gt;1780
&lt;/span&gt;&lt;span class="lnt"&gt;1781
&lt;/span&gt;&lt;span class="lnt"&gt;1782
&lt;/span&gt;&lt;span class="lnt"&gt;1783
&lt;/span&gt;&lt;span class="lnt"&gt;1784
&lt;/span&gt;&lt;span class="lnt"&gt;1785
&lt;/span&gt;&lt;span class="lnt"&gt;1786
&lt;/span&gt;&lt;span class="lnt"&gt;1787
&lt;/span&gt;&lt;span class="lnt"&gt;1788
&lt;/span&gt;&lt;span class="lnt"&gt;1789
&lt;/span&gt;&lt;span class="lnt"&gt;1790
&lt;/span&gt;&lt;span class="lnt"&gt;1791
&lt;/span&gt;&lt;span class="lnt"&gt;1792
&lt;/span&gt;&lt;span class="lnt"&gt;1793
&lt;/span&gt;&lt;span class="lnt"&gt;1794
&lt;/span&gt;&lt;span class="lnt"&gt;1795
&lt;/span&gt;&lt;span class="lnt"&gt;1796
&lt;/span&gt;&lt;span class="lnt"&gt;1797
&lt;/span&gt;&lt;span class="lnt"&gt;1798
&lt;/span&gt;&lt;span class="lnt"&gt;1799
&lt;/span&gt;&lt;span class="lnt"&gt;1800
&lt;/span&gt;&lt;span class="lnt"&gt;1801
&lt;/span&gt;&lt;span class="lnt"&gt;1802
&lt;/span&gt;&lt;span class="lnt"&gt;1803
&lt;/span&gt;&lt;span class="lnt"&gt;1804
&lt;/span&gt;&lt;span class="lnt"&gt;1805
&lt;/span&gt;&lt;span class="lnt"&gt;1806
&lt;/span&gt;&lt;span class="lnt"&gt;1807
&lt;/span&gt;&lt;span class="lnt"&gt;1808
&lt;/span&gt;&lt;span class="lnt"&gt;1809
&lt;/span&gt;&lt;span class="lnt"&gt;1810
&lt;/span&gt;&lt;span class="lnt"&gt;1811
&lt;/span&gt;&lt;span class="lnt"&gt;1812
&lt;/span&gt;&lt;span class="lnt"&gt;1813
&lt;/span&gt;&lt;span class="lnt"&gt;1814
&lt;/span&gt;&lt;span class="lnt"&gt;1815
&lt;/span&gt;&lt;span class="lnt"&gt;1816
&lt;/span&gt;&lt;span class="lnt"&gt;1817
&lt;/span&gt;&lt;span class="lnt"&gt;1818
&lt;/span&gt;&lt;span class="lnt"&gt;1819
&lt;/span&gt;&lt;span class="lnt"&gt;1820
&lt;/span&gt;&lt;span class="lnt"&gt;1821
&lt;/span&gt;&lt;span class="lnt"&gt;1822
&lt;/span&gt;&lt;span class="lnt"&gt;1823
&lt;/span&gt;&lt;span class="lnt"&gt;1824
&lt;/span&gt;&lt;span class="lnt"&gt;1825
&lt;/span&gt;&lt;span class="lnt"&gt;1826
&lt;/span&gt;&lt;span class="lnt"&gt;1827
&lt;/span&gt;&lt;span class="lnt"&gt;1828
&lt;/span&gt;&lt;span class="lnt"&gt;1829
&lt;/span&gt;&lt;span class="lnt"&gt;1830
&lt;/span&gt;&lt;span class="lnt"&gt;1831
&lt;/span&gt;&lt;span class="lnt"&gt;1832
&lt;/span&gt;&lt;span class="lnt"&gt;1833
&lt;/span&gt;&lt;span class="lnt"&gt;1834
&lt;/span&gt;&lt;span class="lnt"&gt;1835
&lt;/span&gt;&lt;span class="lnt"&gt;1836
&lt;/span&gt;&lt;span class="lnt"&gt;1837
&lt;/span&gt;&lt;span class="lnt"&gt;1838
&lt;/span&gt;&lt;span class="lnt"&gt;1839
&lt;/span&gt;&lt;span class="lnt"&gt;1840
&lt;/span&gt;&lt;span class="lnt"&gt;1841
&lt;/span&gt;&lt;span class="lnt"&gt;1842
&lt;/span&gt;&lt;span class="lnt"&gt;1843
&lt;/span&gt;&lt;span class="lnt"&gt;1844
&lt;/span&gt;&lt;span class="lnt"&gt;1845
&lt;/span&gt;&lt;span class="lnt"&gt;1846
&lt;/span&gt;&lt;span class="lnt"&gt;1847
&lt;/span&gt;&lt;span class="lnt"&gt;1848
&lt;/span&gt;&lt;span class="lnt"&gt;1849
&lt;/span&gt;&lt;span class="lnt"&gt;1850
&lt;/span&gt;&lt;span class="lnt"&gt;1851
&lt;/span&gt;&lt;span class="lnt"&gt;1852
&lt;/span&gt;&lt;span class="lnt"&gt;1853
&lt;/span&gt;&lt;span class="lnt"&gt;1854
&lt;/span&gt;&lt;span class="lnt"&gt;1855
&lt;/span&gt;&lt;span class="lnt"&gt;1856
&lt;/span&gt;&lt;span class="lnt"&gt;1857
&lt;/span&gt;&lt;span class="lnt"&gt;1858
&lt;/span&gt;&lt;span class="lnt"&gt;1859
&lt;/span&gt;&lt;span class="lnt"&gt;1860
&lt;/span&gt;&lt;span class="lnt"&gt;1861
&lt;/span&gt;&lt;span class="lnt"&gt;1862
&lt;/span&gt;&lt;span class="lnt"&gt;1863
&lt;/span&gt;&lt;span class="lnt"&gt;1864
&lt;/span&gt;&lt;span class="lnt"&gt;1865
&lt;/span&gt;&lt;span class="lnt"&gt;1866
&lt;/span&gt;&lt;span class="lnt"&gt;1867
&lt;/span&gt;&lt;span class="lnt"&gt;1868
&lt;/span&gt;&lt;span class="lnt"&gt;1869
&lt;/span&gt;&lt;span class="lnt"&gt;1870
&lt;/span&gt;&lt;span class="lnt"&gt;1871
&lt;/span&gt;&lt;span class="lnt"&gt;1872
&lt;/span&gt;&lt;span class="lnt"&gt;1873
&lt;/span&gt;&lt;span class="lnt"&gt;1874
&lt;/span&gt;&lt;span class="lnt"&gt;1875
&lt;/span&gt;&lt;span class="lnt"&gt;1876
&lt;/span&gt;&lt;span class="lnt"&gt;1877
&lt;/span&gt;&lt;span class="lnt"&gt;1878
&lt;/span&gt;&lt;span class="lnt"&gt;1879
&lt;/span&gt;&lt;span class="lnt"&gt;1880
&lt;/span&gt;&lt;span class="lnt"&gt;1881
&lt;/span&gt;&lt;span class="lnt"&gt;1882
&lt;/span&gt;&lt;span class="lnt"&gt;1883
&lt;/span&gt;&lt;span class="lnt"&gt;1884
&lt;/span&gt;&lt;span class="lnt"&gt;1885
&lt;/span&gt;&lt;span class="lnt"&gt;1886
&lt;/span&gt;&lt;span class="lnt"&gt;1887
&lt;/span&gt;&lt;span class="lnt"&gt;1888
&lt;/span&gt;&lt;span class="lnt"&gt;1889
&lt;/span&gt;&lt;span class="lnt"&gt;1890
&lt;/span&gt;&lt;span class="lnt"&gt;1891
&lt;/span&gt;&lt;span class="lnt"&gt;1892
&lt;/span&gt;&lt;span class="lnt"&gt;1893
&lt;/span&gt;&lt;span class="lnt"&gt;1894
&lt;/span&gt;&lt;span class="lnt"&gt;1895
&lt;/span&gt;&lt;span class="lnt"&gt;1896
&lt;/span&gt;&lt;span class="lnt"&gt;1897
&lt;/span&gt;&lt;span class="lnt"&gt;1898
&lt;/span&gt;&lt;span class="lnt"&gt;1899
&lt;/span&gt;&lt;span class="lnt"&gt;1900
&lt;/span&gt;&lt;span class="lnt"&gt;1901
&lt;/span&gt;&lt;span class="lnt"&gt;1902
&lt;/span&gt;&lt;span class="lnt"&gt;1903
&lt;/span&gt;&lt;span class="lnt"&gt;1904
&lt;/span&gt;&lt;span class="lnt"&gt;1905
&lt;/span&gt;&lt;span class="lnt"&gt;1906
&lt;/span&gt;&lt;span class="lnt"&gt;1907
&lt;/span&gt;&lt;span class="lnt"&gt;1908
&lt;/span&gt;&lt;span class="lnt"&gt;1909
&lt;/span&gt;&lt;span class="lnt"&gt;1910
&lt;/span&gt;&lt;span class="lnt"&gt;1911
&lt;/span&gt;&lt;span class="lnt"&gt;1912
&lt;/span&gt;&lt;span class="lnt"&gt;1913
&lt;/span&gt;&lt;span class="lnt"&gt;1914
&lt;/span&gt;&lt;span class="lnt"&gt;1915
&lt;/span&gt;&lt;span class="lnt"&gt;1916
&lt;/span&gt;&lt;span class="lnt"&gt;1917
&lt;/span&gt;&lt;span class="lnt"&gt;1918
&lt;/span&gt;&lt;span class="lnt"&gt;1919
&lt;/span&gt;&lt;span class="lnt"&gt;1920
&lt;/span&gt;&lt;span class="lnt"&gt;1921
&lt;/span&gt;&lt;span class="lnt"&gt;1922
&lt;/span&gt;&lt;span class="lnt"&gt;1923
&lt;/span&gt;&lt;span class="lnt"&gt;1924
&lt;/span&gt;&lt;span class="lnt"&gt;1925
&lt;/span&gt;&lt;span class="lnt"&gt;1926
&lt;/span&gt;&lt;span class="lnt"&gt;1927
&lt;/span&gt;&lt;span class="lnt"&gt;1928
&lt;/span&gt;&lt;span class="lnt"&gt;1929
&lt;/span&gt;&lt;span class="lnt"&gt;1930
&lt;/span&gt;&lt;span class="lnt"&gt;1931
&lt;/span&gt;&lt;span class="lnt"&gt;1932
&lt;/span&gt;&lt;span class="lnt"&gt;1933
&lt;/span&gt;&lt;span class="lnt"&gt;1934
&lt;/span&gt;&lt;span class="lnt"&gt;1935
&lt;/span&gt;&lt;span class="lnt"&gt;1936
&lt;/span&gt;&lt;span class="lnt"&gt;1937
&lt;/span&gt;&lt;span class="lnt"&gt;1938
&lt;/span&gt;&lt;span class="lnt"&gt;1939
&lt;/span&gt;&lt;span class="lnt"&gt;1940
&lt;/span&gt;&lt;span class="lnt"&gt;1941
&lt;/span&gt;&lt;span class="lnt"&gt;1942
&lt;/span&gt;&lt;span class="lnt"&gt;1943
&lt;/span&gt;&lt;span class="lnt"&gt;1944
&lt;/span&gt;&lt;span class="lnt"&gt;1945
&lt;/span&gt;&lt;span class="lnt"&gt;1946
&lt;/span&gt;&lt;span class="lnt"&gt;1947
&lt;/span&gt;&lt;span class="lnt"&gt;1948
&lt;/span&gt;&lt;span class="lnt"&gt;1949
&lt;/span&gt;&lt;span class="lnt"&gt;1950
&lt;/span&gt;&lt;span class="lnt"&gt;1951
&lt;/span&gt;&lt;span class="lnt"&gt;1952
&lt;/span&gt;&lt;span class="lnt"&gt;1953
&lt;/span&gt;&lt;span class="lnt"&gt;1954
&lt;/span&gt;&lt;span class="lnt"&gt;1955
&lt;/span&gt;&lt;span class="lnt"&gt;1956
&lt;/span&gt;&lt;span class="lnt"&gt;1957
&lt;/span&gt;&lt;span class="lnt"&gt;1958
&lt;/span&gt;&lt;span class="lnt"&gt;1959
&lt;/span&gt;&lt;span class="lnt"&gt;1960
&lt;/span&gt;&lt;span class="lnt"&gt;1961
&lt;/span&gt;&lt;span class="lnt"&gt;1962
&lt;/span&gt;&lt;span class="lnt"&gt;1963
&lt;/span&gt;&lt;span class="lnt"&gt;1964
&lt;/span&gt;&lt;span class="lnt"&gt;1965
&lt;/span&gt;&lt;span class="lnt"&gt;1966
&lt;/span&gt;&lt;span class="lnt"&gt;1967
&lt;/span&gt;&lt;span class="lnt"&gt;1968
&lt;/span&gt;&lt;span class="lnt"&gt;1969
&lt;/span&gt;&lt;span class="lnt"&gt;1970
&lt;/span&gt;&lt;span class="lnt"&gt;1971
&lt;/span&gt;&lt;span class="lnt"&gt;1972
&lt;/span&gt;&lt;span class="lnt"&gt;1973
&lt;/span&gt;&lt;span class="lnt"&gt;1974
&lt;/span&gt;&lt;span class="lnt"&gt;1975
&lt;/span&gt;&lt;span class="lnt"&gt;1976
&lt;/span&gt;&lt;span class="lnt"&gt;1977
&lt;/span&gt;&lt;span class="lnt"&gt;1978
&lt;/span&gt;&lt;span class="lnt"&gt;1979
&lt;/span&gt;&lt;span class="lnt"&gt;1980
&lt;/span&gt;&lt;span class="lnt"&gt;1981
&lt;/span&gt;&lt;span class="lnt"&gt;1982
&lt;/span&gt;&lt;span class="lnt"&gt;1983
&lt;/span&gt;&lt;span class="lnt"&gt;1984
&lt;/span&gt;&lt;span class="lnt"&gt;1985
&lt;/span&gt;&lt;span class="lnt"&gt;1986
&lt;/span&gt;&lt;span class="lnt"&gt;1987
&lt;/span&gt;&lt;span class="lnt"&gt;1988
&lt;/span&gt;&lt;span class="lnt"&gt;1989
&lt;/span&gt;&lt;span class="lnt"&gt;1990
&lt;/span&gt;&lt;span class="lnt"&gt;1991
&lt;/span&gt;&lt;span class="lnt"&gt;1992
&lt;/span&gt;&lt;span class="lnt"&gt;1993
&lt;/span&gt;&lt;span class="lnt"&gt;1994
&lt;/span&gt;&lt;span class="lnt"&gt;1995
&lt;/span&gt;&lt;span class="lnt"&gt;1996
&lt;/span&gt;&lt;span class="lnt"&gt;1997
&lt;/span&gt;&lt;span class="lnt"&gt;1998
&lt;/span&gt;&lt;span class="lnt"&gt;1999
&lt;/span&gt;&lt;span class="lnt"&gt;2000
&lt;/span&gt;&lt;span class="lnt"&gt;2001
&lt;/span&gt;&lt;span class="lnt"&gt;2002
&lt;/span&gt;&lt;span class="lnt"&gt;2003
&lt;/span&gt;&lt;span class="lnt"&gt;2004
&lt;/span&gt;&lt;span class="lnt"&gt;2005
&lt;/span&gt;&lt;span class="lnt"&gt;2006
&lt;/span&gt;&lt;span class="lnt"&gt;2007
&lt;/span&gt;&lt;span class="lnt"&gt;2008
&lt;/span&gt;&lt;span class="lnt"&gt;2009
&lt;/span&gt;&lt;span class="lnt"&gt;2010
&lt;/span&gt;&lt;span class="lnt"&gt;2011
&lt;/span&gt;&lt;span class="lnt"&gt;2012
&lt;/span&gt;&lt;span class="lnt"&gt;2013
&lt;/span&gt;&lt;span class="lnt"&gt;2014
&lt;/span&gt;&lt;span class="lnt"&gt;2015
&lt;/span&gt;&lt;span class="lnt"&gt;2016
&lt;/span&gt;&lt;span class="lnt"&gt;2017
&lt;/span&gt;&lt;span class="lnt"&gt;2018
&lt;/span&gt;&lt;span class="lnt"&gt;2019
&lt;/span&gt;&lt;span class="lnt"&gt;2020
&lt;/span&gt;&lt;span class="lnt"&gt;2021
&lt;/span&gt;&lt;span class="lnt"&gt;2022
&lt;/span&gt;&lt;span class="lnt"&gt;2023
&lt;/span&gt;&lt;span class="lnt"&gt;2024
&lt;/span&gt;&lt;span class="lnt"&gt;2025
&lt;/span&gt;&lt;span class="lnt"&gt;2026
&lt;/span&gt;&lt;span class="lnt"&gt;2027
&lt;/span&gt;&lt;span class="lnt"&gt;2028
&lt;/span&gt;&lt;span class="lnt"&gt;2029
&lt;/span&gt;&lt;span class="lnt"&gt;2030
&lt;/span&gt;&lt;span class="lnt"&gt;2031
&lt;/span&gt;&lt;span class="lnt"&gt;2032
&lt;/span&gt;&lt;span class="lnt"&gt;2033
&lt;/span&gt;&lt;span class="lnt"&gt;2034
&lt;/span&gt;&lt;span class="lnt"&gt;2035
&lt;/span&gt;&lt;span class="lnt"&gt;2036
&lt;/span&gt;&lt;span class="lnt"&gt;2037
&lt;/span&gt;&lt;span class="lnt"&gt;2038
&lt;/span&gt;&lt;span class="lnt"&gt;2039
&lt;/span&gt;&lt;span class="lnt"&gt;2040
&lt;/span&gt;&lt;span class="lnt"&gt;2041
&lt;/span&gt;&lt;span class="lnt"&gt;2042
&lt;/span&gt;&lt;span class="lnt"&gt;2043
&lt;/span&gt;&lt;span class="lnt"&gt;2044
&lt;/span&gt;&lt;span class="lnt"&gt;2045
&lt;/span&gt;&lt;span class="lnt"&gt;2046
&lt;/span&gt;&lt;span class="lnt"&gt;2047
&lt;/span&gt;&lt;span class="lnt"&gt;2048
&lt;/span&gt;&lt;span class="lnt"&gt;2049
&lt;/span&gt;&lt;span class="lnt"&gt;2050
&lt;/span&gt;&lt;span class="lnt"&gt;2051
&lt;/span&gt;&lt;span class="lnt"&gt;2052
&lt;/span&gt;&lt;span class="lnt"&gt;2053
&lt;/span&gt;&lt;span class="lnt"&gt;2054
&lt;/span&gt;&lt;span class="lnt"&gt;2055
&lt;/span&gt;&lt;span class="lnt"&gt;2056
&lt;/span&gt;&lt;span class="lnt"&gt;2057
&lt;/span&gt;&lt;span class="lnt"&gt;2058
&lt;/span&gt;&lt;span class="lnt"&gt;2059
&lt;/span&gt;&lt;span class="lnt"&gt;2060
&lt;/span&gt;&lt;span class="lnt"&gt;2061
&lt;/span&gt;&lt;span class="lnt"&gt;2062
&lt;/span&gt;&lt;span class="lnt"&gt;2063
&lt;/span&gt;&lt;span class="lnt"&gt;2064
&lt;/span&gt;&lt;span class="lnt"&gt;2065
&lt;/span&gt;&lt;span class="lnt"&gt;2066
&lt;/span&gt;&lt;span class="lnt"&gt;2067
&lt;/span&gt;&lt;span class="lnt"&gt;2068
&lt;/span&gt;&lt;span class="lnt"&gt;2069
&lt;/span&gt;&lt;span class="lnt"&gt;2070
&lt;/span&gt;&lt;span class="lnt"&gt;2071
&lt;/span&gt;&lt;span class="lnt"&gt;2072
&lt;/span&gt;&lt;span class="lnt"&gt;2073
&lt;/span&gt;&lt;span class="lnt"&gt;2074
&lt;/span&gt;&lt;span class="lnt"&gt;2075
&lt;/span&gt;&lt;span class="lnt"&gt;2076
&lt;/span&gt;&lt;span class="lnt"&gt;2077
&lt;/span&gt;&lt;span class="lnt"&gt;2078
&lt;/span&gt;&lt;span class="lnt"&gt;2079
&lt;/span&gt;&lt;span class="lnt"&gt;2080
&lt;/span&gt;&lt;span class="lnt"&gt;2081
&lt;/span&gt;&lt;span class="lnt"&gt;2082
&lt;/span&gt;&lt;span class="lnt"&gt;2083
&lt;/span&gt;&lt;span class="lnt"&gt;2084
&lt;/span&gt;&lt;span class="lnt"&gt;2085
&lt;/span&gt;&lt;span class="lnt"&gt;2086
&lt;/span&gt;&lt;span class="lnt"&gt;2087
&lt;/span&gt;&lt;span class="lnt"&gt;2088
&lt;/span&gt;&lt;span class="lnt"&gt;2089
&lt;/span&gt;&lt;span class="lnt"&gt;2090
&lt;/span&gt;&lt;span class="lnt"&gt;2091
&lt;/span&gt;&lt;span class="lnt"&gt;2092
&lt;/span&gt;&lt;span class="lnt"&gt;2093
&lt;/span&gt;&lt;span class="lnt"&gt;2094
&lt;/span&gt;&lt;span class="lnt"&gt;2095
&lt;/span&gt;&lt;span class="lnt"&gt;2096
&lt;/span&gt;&lt;span class="lnt"&gt;2097
&lt;/span&gt;&lt;span class="lnt"&gt;2098
&lt;/span&gt;&lt;span class="lnt"&gt;2099
&lt;/span&gt;&lt;span class="lnt"&gt;2100
&lt;/span&gt;&lt;span class="lnt"&gt;2101
&lt;/span&gt;&lt;span class="lnt"&gt;2102
&lt;/span&gt;&lt;span class="lnt"&gt;2103
&lt;/span&gt;&lt;span class="lnt"&gt;2104
&lt;/span&gt;&lt;span class="lnt"&gt;2105
&lt;/span&gt;&lt;span class="lnt"&gt;2106
&lt;/span&gt;&lt;span class="lnt"&gt;2107
&lt;/span&gt;&lt;span class="lnt"&gt;2108
&lt;/span&gt;&lt;span class="lnt"&gt;2109
&lt;/span&gt;&lt;span class="lnt"&gt;2110
&lt;/span&gt;&lt;span class="lnt"&gt;2111
&lt;/span&gt;&lt;span class="lnt"&gt;2112
&lt;/span&gt;&lt;span class="lnt"&gt;2113
&lt;/span&gt;&lt;span class="lnt"&gt;2114
&lt;/span&gt;&lt;span class="lnt"&gt;2115
&lt;/span&gt;&lt;span class="lnt"&gt;2116
&lt;/span&gt;&lt;span class="lnt"&gt;2117
&lt;/span&gt;&lt;span class="lnt"&gt;2118
&lt;/span&gt;&lt;span class="lnt"&gt;2119
&lt;/span&gt;&lt;span class="lnt"&gt;2120
&lt;/span&gt;&lt;span class="lnt"&gt;2121
&lt;/span&gt;&lt;span class="lnt"&gt;2122
&lt;/span&gt;&lt;span class="lnt"&gt;2123
&lt;/span&gt;&lt;span class="lnt"&gt;2124
&lt;/span&gt;&lt;span class="lnt"&gt;2125
&lt;/span&gt;&lt;span class="lnt"&gt;2126
&lt;/span&gt;&lt;span class="lnt"&gt;2127
&lt;/span&gt;&lt;span class="lnt"&gt;2128
&lt;/span&gt;&lt;span class="lnt"&gt;2129
&lt;/span&gt;&lt;span class="lnt"&gt;2130
&lt;/span&gt;&lt;span class="lnt"&gt;2131
&lt;/span&gt;&lt;span class="lnt"&gt;2132
&lt;/span&gt;&lt;span class="lnt"&gt;2133
&lt;/span&gt;&lt;span class="lnt"&gt;2134
&lt;/span&gt;&lt;span class="lnt"&gt;2135
&lt;/span&gt;&lt;span class="lnt"&gt;2136
&lt;/span&gt;&lt;span class="lnt"&gt;2137
&lt;/span&gt;&lt;span class="lnt"&gt;2138
&lt;/span&gt;&lt;span class="lnt"&gt;2139
&lt;/span&gt;&lt;span class="lnt"&gt;2140
&lt;/span&gt;&lt;span class="lnt"&gt;2141
&lt;/span&gt;&lt;span class="lnt"&gt;2142
&lt;/span&gt;&lt;span class="lnt"&gt;2143
&lt;/span&gt;&lt;span class="lnt"&gt;2144
&lt;/span&gt;&lt;span class="lnt"&gt;2145
&lt;/span&gt;&lt;span class="lnt"&gt;2146
&lt;/span&gt;&lt;span class="lnt"&gt;2147
&lt;/span&gt;&lt;span class="lnt"&gt;2148
&lt;/span&gt;&lt;span class="lnt"&gt;2149
&lt;/span&gt;&lt;span class="lnt"&gt;2150
&lt;/span&gt;&lt;span class="lnt"&gt;2151
&lt;/span&gt;&lt;span class="lnt"&gt;2152
&lt;/span&gt;&lt;span class="lnt"&gt;2153
&lt;/span&gt;&lt;span class="lnt"&gt;2154
&lt;/span&gt;&lt;span class="lnt"&gt;2155
&lt;/span&gt;&lt;span class="lnt"&gt;2156
&lt;/span&gt;&lt;span class="lnt"&gt;2157
&lt;/span&gt;&lt;span class="lnt"&gt;2158
&lt;/span&gt;&lt;span class="lnt"&gt;2159
&lt;/span&gt;&lt;span class="lnt"&gt;2160
&lt;/span&gt;&lt;span class="lnt"&gt;2161
&lt;/span&gt;&lt;span class="lnt"&gt;2162
&lt;/span&gt;&lt;span class="lnt"&gt;2163
&lt;/span&gt;&lt;span class="lnt"&gt;2164
&lt;/span&gt;&lt;span class="lnt"&gt;2165
&lt;/span&gt;&lt;span class="lnt"&gt;2166
&lt;/span&gt;&lt;span class="lnt"&gt;2167
&lt;/span&gt;&lt;span class="lnt"&gt;2168
&lt;/span&gt;&lt;span class="lnt"&gt;2169
&lt;/span&gt;&lt;span class="lnt"&gt;2170
&lt;/span&gt;&lt;span class="lnt"&gt;2171
&lt;/span&gt;&lt;span class="lnt"&gt;2172
&lt;/span&gt;&lt;span class="lnt"&gt;2173
&lt;/span&gt;&lt;span class="lnt"&gt;2174
&lt;/span&gt;&lt;span class="lnt"&gt;2175
&lt;/span&gt;&lt;span class="lnt"&gt;2176
&lt;/span&gt;&lt;span class="lnt"&gt;2177
&lt;/span&gt;&lt;span class="lnt"&gt;2178
&lt;/span&gt;&lt;span class="lnt"&gt;2179
&lt;/span&gt;&lt;span class="lnt"&gt;2180
&lt;/span&gt;&lt;span class="lnt"&gt;2181
&lt;/span&gt;&lt;span class="lnt"&gt;2182
&lt;/span&gt;&lt;span class="lnt"&gt;2183
&lt;/span&gt;&lt;span class="lnt"&gt;2184
&lt;/span&gt;&lt;span class="lnt"&gt;2185
&lt;/span&gt;&lt;span class="lnt"&gt;2186
&lt;/span&gt;&lt;span class="lnt"&gt;2187
&lt;/span&gt;&lt;span class="lnt"&gt;2188
&lt;/span&gt;&lt;span class="lnt"&gt;2189
&lt;/span&gt;&lt;span class="lnt"&gt;2190
&lt;/span&gt;&lt;span class="lnt"&gt;2191
&lt;/span&gt;&lt;span class="lnt"&gt;2192
&lt;/span&gt;&lt;span class="lnt"&gt;2193
&lt;/span&gt;&lt;span class="lnt"&gt;2194
&lt;/span&gt;&lt;span class="lnt"&gt;2195
&lt;/span&gt;&lt;span class="lnt"&gt;2196
&lt;/span&gt;&lt;span class="lnt"&gt;2197
&lt;/span&gt;&lt;span class="lnt"&gt;2198
&lt;/span&gt;&lt;span class="lnt"&gt;2199
&lt;/span&gt;&lt;span class="lnt"&gt;2200
&lt;/span&gt;&lt;span class="lnt"&gt;2201
&lt;/span&gt;&lt;span class="lnt"&gt;2202
&lt;/span&gt;&lt;span class="lnt"&gt;2203
&lt;/span&gt;&lt;span class="lnt"&gt;2204
&lt;/span&gt;&lt;span class="lnt"&gt;2205
&lt;/span&gt;&lt;span class="lnt"&gt;2206
&lt;/span&gt;&lt;span class="lnt"&gt;2207
&lt;/span&gt;&lt;span class="lnt"&gt;2208
&lt;/span&gt;&lt;span class="lnt"&gt;2209
&lt;/span&gt;&lt;span class="lnt"&gt;2210
&lt;/span&gt;&lt;span class="lnt"&gt;2211
&lt;/span&gt;&lt;span class="lnt"&gt;2212
&lt;/span&gt;&lt;span class="lnt"&gt;2213
&lt;/span&gt;&lt;span class="lnt"&gt;2214
&lt;/span&gt;&lt;span class="lnt"&gt;2215
&lt;/span&gt;&lt;span class="lnt"&gt;2216
&lt;/span&gt;&lt;span class="lnt"&gt;2217
&lt;/span&gt;&lt;span class="lnt"&gt;2218
&lt;/span&gt;&lt;span class="lnt"&gt;2219
&lt;/span&gt;&lt;span class="lnt"&gt;2220
&lt;/span&gt;&lt;span class="lnt"&gt;2221
&lt;/span&gt;&lt;span class="lnt"&gt;2222
&lt;/span&gt;&lt;span class="lnt"&gt;2223
&lt;/span&gt;&lt;span class="lnt"&gt;2224
&lt;/span&gt;&lt;span class="lnt"&gt;2225
&lt;/span&gt;&lt;span class="lnt"&gt;2226
&lt;/span&gt;&lt;span class="lnt"&gt;2227
&lt;/span&gt;&lt;span class="lnt"&gt;2228
&lt;/span&gt;&lt;span class="lnt"&gt;2229
&lt;/span&gt;&lt;span class="lnt"&gt;2230
&lt;/span&gt;&lt;span class="lnt"&gt;2231
&lt;/span&gt;&lt;span class="lnt"&gt;2232
&lt;/span&gt;&lt;span class="lnt"&gt;2233
&lt;/span&gt;&lt;span class="lnt"&gt;2234
&lt;/span&gt;&lt;span class="lnt"&gt;2235
&lt;/span&gt;&lt;span class="lnt"&gt;2236
&lt;/span&gt;&lt;span class="lnt"&gt;2237
&lt;/span&gt;&lt;span class="lnt"&gt;2238
&lt;/span&gt;&lt;span class="lnt"&gt;2239
&lt;/span&gt;&lt;span class="lnt"&gt;2240
&lt;/span&gt;&lt;span class="lnt"&gt;2241
&lt;/span&gt;&lt;span class="lnt"&gt;2242
&lt;/span&gt;&lt;span class="lnt"&gt;2243
&lt;/span&gt;&lt;span class="lnt"&gt;2244
&lt;/span&gt;&lt;span class="lnt"&gt;2245
&lt;/span&gt;&lt;span class="lnt"&gt;2246
&lt;/span&gt;&lt;span class="lnt"&gt;2247
&lt;/span&gt;&lt;span class="lnt"&gt;2248
&lt;/span&gt;&lt;span class="lnt"&gt;2249
&lt;/span&gt;&lt;span class="lnt"&gt;2250
&lt;/span&gt;&lt;span class="lnt"&gt;2251
&lt;/span&gt;&lt;span class="lnt"&gt;2252
&lt;/span&gt;&lt;span class="lnt"&gt;2253
&lt;/span&gt;&lt;span class="lnt"&gt;2254
&lt;/span&gt;&lt;span class="lnt"&gt;2255
&lt;/span&gt;&lt;span class="lnt"&gt;2256
&lt;/span&gt;&lt;span class="lnt"&gt;2257
&lt;/span&gt;&lt;span class="lnt"&gt;2258
&lt;/span&gt;&lt;span class="lnt"&gt;2259
&lt;/span&gt;&lt;span class="lnt"&gt;2260
&lt;/span&gt;&lt;span class="lnt"&gt;2261
&lt;/span&gt;&lt;span class="lnt"&gt;2262
&lt;/span&gt;&lt;span class="lnt"&gt;2263
&lt;/span&gt;&lt;span class="lnt"&gt;2264
&lt;/span&gt;&lt;span class="lnt"&gt;2265
&lt;/span&gt;&lt;span class="lnt"&gt;2266
&lt;/span&gt;&lt;span class="lnt"&gt;2267
&lt;/span&gt;&lt;span class="lnt"&gt;2268
&lt;/span&gt;&lt;span class="lnt"&gt;2269
&lt;/span&gt;&lt;span class="lnt"&gt;2270
&lt;/span&gt;&lt;span class="lnt"&gt;2271
&lt;/span&gt;&lt;span class="lnt"&gt;2272
&lt;/span&gt;&lt;span class="lnt"&gt;2273
&lt;/span&gt;&lt;span class="lnt"&gt;2274
&lt;/span&gt;&lt;span class="lnt"&gt;2275
&lt;/span&gt;&lt;span class="lnt"&gt;2276
&lt;/span&gt;&lt;span class="lnt"&gt;2277
&lt;/span&gt;&lt;span class="lnt"&gt;2278
&lt;/span&gt;&lt;span class="lnt"&gt;2279
&lt;/span&gt;&lt;span class="lnt"&gt;2280
&lt;/span&gt;&lt;span class="lnt"&gt;2281
&lt;/span&gt;&lt;span class="lnt"&gt;2282
&lt;/span&gt;&lt;span class="lnt"&gt;2283
&lt;/span&gt;&lt;span class="lnt"&gt;2284
&lt;/span&gt;&lt;span class="lnt"&gt;2285
&lt;/span&gt;&lt;span class="lnt"&gt;2286
&lt;/span&gt;&lt;span class="lnt"&gt;2287
&lt;/span&gt;&lt;span class="lnt"&gt;2288
&lt;/span&gt;&lt;span class="lnt"&gt;2289
&lt;/span&gt;&lt;span class="lnt"&gt;2290
&lt;/span&gt;&lt;span class="lnt"&gt;2291
&lt;/span&gt;&lt;span class="lnt"&gt;2292
&lt;/span&gt;&lt;span class="lnt"&gt;2293
&lt;/span&gt;&lt;span class="lnt"&gt;2294
&lt;/span&gt;&lt;span class="lnt"&gt;2295
&lt;/span&gt;&lt;span class="lnt"&gt;2296
&lt;/span&gt;&lt;span class="lnt"&gt;2297
&lt;/span&gt;&lt;span class="lnt"&gt;2298
&lt;/span&gt;&lt;span class="lnt"&gt;2299
&lt;/span&gt;&lt;span class="lnt"&gt;2300
&lt;/span&gt;&lt;span class="lnt"&gt;2301
&lt;/span&gt;&lt;span class="lnt"&gt;2302
&lt;/span&gt;&lt;span class="lnt"&gt;2303
&lt;/span&gt;&lt;span class="lnt"&gt;2304
&lt;/span&gt;&lt;span class="lnt"&gt;2305
&lt;/span&gt;&lt;span class="lnt"&gt;2306
&lt;/span&gt;&lt;span class="lnt"&gt;2307
&lt;/span&gt;&lt;span class="lnt"&gt;2308
&lt;/span&gt;&lt;span class="lnt"&gt;2309
&lt;/span&gt;&lt;span class="lnt"&gt;2310
&lt;/span&gt;&lt;span class="lnt"&gt;2311
&lt;/span&gt;&lt;span class="lnt"&gt;2312
&lt;/span&gt;&lt;span class="lnt"&gt;2313
&lt;/span&gt;&lt;span class="lnt"&gt;2314
&lt;/span&gt;&lt;span class="lnt"&gt;2315
&lt;/span&gt;&lt;span class="lnt"&gt;2316
&lt;/span&gt;&lt;span class="lnt"&gt;2317
&lt;/span&gt;&lt;span class="lnt"&gt;2318
&lt;/span&gt;&lt;span class="lnt"&gt;2319
&lt;/span&gt;&lt;span class="lnt"&gt;2320
&lt;/span&gt;&lt;span class="lnt"&gt;2321
&lt;/span&gt;&lt;span class="lnt"&gt;2322
&lt;/span&gt;&lt;span class="lnt"&gt;2323
&lt;/span&gt;&lt;span class="lnt"&gt;2324
&lt;/span&gt;&lt;span class="lnt"&gt;2325
&lt;/span&gt;&lt;span class="lnt"&gt;2326
&lt;/span&gt;&lt;span class="lnt"&gt;2327
&lt;/span&gt;&lt;span class="lnt"&gt;2328
&lt;/span&gt;&lt;span class="lnt"&gt;2329
&lt;/span&gt;&lt;span class="lnt"&gt;2330
&lt;/span&gt;&lt;span class="lnt"&gt;2331
&lt;/span&gt;&lt;span class="lnt"&gt;2332
&lt;/span&gt;&lt;span class="lnt"&gt;2333
&lt;/span&gt;&lt;span class="lnt"&gt;2334
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################# 不允许后台运行 docker 必须打开 #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;daemonize&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################# 基础网络相关 #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################# tls相关 #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 如果不启用注释掉下面即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tlsPort&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;certs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;clients&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;clients&lt;/span&gt; &lt;span class="n"&gt;optional&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;replication&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cluster&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;protocols&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;TLSv1.2 TLSv1.3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ciphers&lt;/span&gt; &lt;span class="n"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;MEDIUM&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ciphersuites&lt;/span&gt; &lt;span class="n"&gt;TLS_CHACHA20_POLY1305_SHA256&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prefer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ciphers&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;caching&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tls&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 安全认证相关 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 允许外网访问 no是允许&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;protected&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;requirepass&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;{password}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 同步密码 和管理员密码配置一样的，不然同步容易出问题&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;masterauth&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;{password}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 多线程 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;threads&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reads&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;threads&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 持久化 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 开启aof 其他不用配置用默认即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;appendonly&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;################################## 集 群 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 开启集群 如果不用 注释掉即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 节点配置 默认会在 data 目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;nodes.conf&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#集群超时&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 可能需要的 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 限制内存 acl控制等&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## 后面是默认配置 ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis configuration file example.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that in order to read the configuration file, Redis must be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# started with the file path as first argument:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./redis-server /path/to/redis.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note on units: when memory size is needed, it is possible to specify&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it in the usual form of 1k 5GB 4M and so forth:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1k =&amp;gt; 1000 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1kb =&amp;gt; 1024 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1m =&amp;gt; 1000000 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1mb =&amp;gt; 1024*1024 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1g =&amp;gt; 1000000000 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1gb =&amp;gt; 1024*1024*1024 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# units are case insensitive so 1GB 1Gb 1gB are all the same.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## INCLUDES ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Include one or more other config files here. This is useful if you&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# have a standard template that goes to all Redis servers but also need&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to customize a few per-server settings. Include files can include&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# other files, so use this wisely.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that option &amp;#34;include&amp;#34; won&amp;#39;t be rewritten by command &amp;#34;CONFIG REWRITE&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# from admin or Redis Sentinel. Since Redis always uses the last processed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# line as value of a configuration directive, you&amp;#39;d better put includes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# at the beginning of this file to avoid overwriting config change at runtime.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If instead you are interested in using includes to override configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# options, it is better to use include as the last line.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Included paths may contain wildcards. All files matching the wildcards will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be included in alphabetical order.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that if an include path contains a wildcards but no files match it when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server is started, the include statement will be ignored and no error will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be emitted. It is safe, therefore, to include wildcard files from empty&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directories.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# include /path/to/local.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# include /path/to/other.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# include /path/to/fragments/*.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## MODULES #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Load modules at startup. If the server is not able to load modules&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it will abort. It is possible to use multiple loadmodule directives.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# loadmodule /path/to/my_module.so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# loadmodule /path/to/other_module.so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## NETWORK #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, if no &amp;#34;bind&amp;#34; configuration directive is specified, Redis listens&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for connections from all available network interfaces on the host machine.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is possible to listen to just one or multiple selected interfaces using&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the &amp;#34;bind&amp;#34; configuration directive, followed by one or more IP addresses.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Each address can be prefixed by &amp;#34;-&amp;#34;, which means that redis will not fail to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# start if the address is not available. Being not available only refers to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# addresses that does not correspond to any network interface. Addresses that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are already in use will always fail, and unsupported protocols will always BE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# silently skipped.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Examples:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bind 192.168.1.100 10.0.0.1 # listens on two specific IPv4 addresses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bind 127.0.0.1 ::1 # listens on loopback IPv4 and IPv6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bind * -::* # like the default, all available interfaces&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# internet, binding to all the interfaces is dangerous and will expose the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# instance to everybody on the internet. So by default we uncomment the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# following bind directive, that will force Redis to listen only on the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# IPv4 and IPv6 (if available) loopback interface addresses (this means Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will only be able to accept client connections from the same host that it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# running on).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# COMMENT OUT THE FOLLOWING LINE.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You will also need to set a password unless you explicitly disable protected&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# mode.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#-bind 127.0.0.1 -::1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, outgoing connections (from replica to master, from Sentinel to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# instances, cluster bus, etc.) are not bound to a specific local address. In&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# most cases, this means the operating system will handle that based on routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and the interface through which the connection goes out.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Using bind-source-addr it is possible to configure a specific address to bind&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to, which may also affect how the connection gets routed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bind-source-addr 10.0.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Protected mode is a layer of security protection, in order to avoid that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis instances left open on the internet are accessed and exploited.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When protected mode is on and the default user has no password, the server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# only accepts local connections from the IPv4 address (127.0.0.1), IPv6 address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (::1) or Unix domain sockets.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default protected mode is enabled. You should disable it only if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# you are sure you want clients from other hosts to connect to Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# even if no authentication is configured.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#-protected-mode yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis uses default hardened security configuration directives to reduce the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# attack surface on innocent users. Therefore, several sensitive configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directives are immutable, and some potentially-dangerous commands are blocked.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Configuration directives that control files that Redis writes to (e.g., &amp;#39;dir&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and &amp;#39;dbfilename&amp;#39;) and that aren&amp;#39;t usually modified during runtime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are protected by making them immutable.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Commands that can increase the attack surface of Redis and that aren&amp;#39;t usually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# called by users are blocked by default.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# These can be exposed to either all connections or just local ones by setting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# each of the configs listed below to either of these values:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# no - Block for any connection (remain immutable)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# yes - Allow for any connection (no protection)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# local - Allow only for local connections. Ones originating from the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# IPv4 address (127.0.0.1), IPv6 address (::1) or Unix domain sockets.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# enable-protected-configs no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# enable-debug-command no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# enable-module-command no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Accept connections on the specified port, default is 6379 (IANA #815344).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If port 0 is specified Redis will not listen on a TCP socket.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#-port 6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# TCP listen() backlog.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In high requests-per-second environments you need a high backlog in order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to avoid slow clients connection issues. Note that the Linux kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will silently truncate it to the value of /proc/sys/net/core/somaxconn so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# make sure to raise both the value of somaxconn and tcp_max_syn_backlog&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to get the desired effect.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;backlog&lt;/span&gt; &lt;span class="mi"&gt;511&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Unix socket.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specify the path for the Unix socket that will be used to listen for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# incoming connections. There is no default, so Redis will not listen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# on a unix socket when not specified.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# unixsocket /run/redis/redis-server.sock&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# unixsocketperm 700&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Close the connection after a client is idle for N seconds (0 to disable)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# TCP keepalive.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of communication. This is useful for two reasons:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) Detect dead peers.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) Force network equipment in the middle to consider the connection to be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# alive.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# On Linux, the specified value (in seconds) is the period used to send ACKs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that to close the connection the double of the time is needed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# On other kernels the period depends on the kernel configuration.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A reasonable value for this option is 300 seconds, which is the new&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis default starting with Redis 3.2.1.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keepalive&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Apply OS-specific mechanism to mark the listening socket with the specified&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ID, to support advanced routing and filtering capabilities.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# On Linux, the ID represents a connection mark.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# On FreeBSD, the ID represents a socket cookie ID.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# On OpenBSD, the ID represents a route table ID.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default value is 0, which implies no marking is required.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# socket-mark-id 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################# TLS/SSL #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, TLS/SSL is disabled. To enable it, the &amp;#34;tls-port&amp;#34; configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directive can be used to define TLS-listening ports. To enable TLS on the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# default port, use:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# port 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-port 6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Configure a X.509 certificate and private key to use for authenticating the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# server to connected clients, masters or cluster peers. These files should be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# PEM formatted.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-cert-file redis.crt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-key-file redis.key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the key file is encrypted using a passphrase, it can be included here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# as well.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-key-file-pass secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Normally Redis uses the same certificate for both server functions (accepting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# connections) and client functions (replicating from a master, establishing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster bus connections, etc.).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Sometimes certificates are issued with attributes that designate them as&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# client-only or server-only certificates. In that case it may be desired to use&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# different certificates for incoming (server) and outgoing (client)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# connections. To do that, use the following directives:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-client-cert-file client.crt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-client-key-file client.key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the key file is encrypted using a passphrase, it can be included here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# as well.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-client-key-file-pass secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# required by older versions of OpenSSL (&amp;lt;3.0). Newer versions do not require&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this configuration and recommend against it.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-dh-params-file redis.dh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Configure a CA certificate(s) bundle or directory to authenticate TLS/SSL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# clients and peers. Redis requires an explicit configuration of at least one&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of these, and will not implicitly use the system wide configuration.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-ca-cert-file ca.crt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-ca-cert-dir /etc/ssl/certs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, clients (including replica servers) on a TLS port are required&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to authenticate using valid client side certificates.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If &amp;#34;no&amp;#34; is specified, client certificates are not required and not accepted.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If &amp;#34;optional&amp;#34; is specified, client certificates are accepted and must be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# valid if provided, but are not required.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-auth-clients no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-auth-clients optional&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, a Redis replica does not attempt to establish a TLS connection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with its master.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Use the following directive to enable TLS on replication links.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-replication yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, the Redis Cluster bus uses a plain TCP connection. To enable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# TLS for the bus protocol, use the following directive:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-cluster yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, only TLSv1.2 and TLSv1.3 are enabled and it is highly recommended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that older formally deprecated versions are kept disabled to reduce the attack surface.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You can explicitly specify TLS versions to support.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Allowed values are case insensitive and include &amp;#34;TLSv1&amp;#34;, &amp;#34;TLSv1.1&amp;#34;, &amp;#34;TLSv1.2&amp;#34;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;TLSv1.3&amp;#34; (OpenSSL &amp;gt;= 1.1.1) or any combination.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# To enable only TLSv1.2 and TLSv1.3, use:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-protocols &amp;#34;TLSv1.2 TLSv1.3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Configure allowed ciphers. See the ciphers(1ssl) manpage for more information&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# about the syntax of this string.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note: this configuration applies only to &amp;lt;= TLSv1.2.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-ciphers DEFAULT:!MEDIUM&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Configure allowed TLSv1.3 ciphersuites. See the ciphers(1ssl) manpage for more&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# information about the syntax of this string, and specifically for TLSv1.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ciphersuites.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When choosing a cipher, use the server&amp;#39;s preference instead of the client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# preference. By default, the server follows the client&amp;#39;s preference.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-prefer-server-ciphers yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, TLS session caching is enabled to allow faster and less expensive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# reconnections by clients that support it. Use the following directive to disable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# caching.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-session-caching no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Change the default number of TLS sessions cached. A zero value sets the cache&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to unlimited size. The default size is 20480.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-session-cache-size 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Change the default timeout of cached TLS sessions. The default timeout is 300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tls-session-cache-timeout 60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################# GENERAL #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default Redis does not run as a daemon. Use &amp;#39;yes&amp;#39; if you need it.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When Redis is supervised by upstart or systemd, this parameter has no impact.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#-daemonize yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If you run Redis from upstart or systemd, Redis can interact with your&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supervision tree. Options:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supervised no - no supervision interaction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supervised upstart - signal upstart by putting Redis into SIGSTOP mode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# requires &amp;#34;expect stop&amp;#34; in your upstart job config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# on startup, and updating Redis status on a regular&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# basis.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supervised auto - detect upstart or systemd method based on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# UPSTART_JOB or NOTIFY_SOCKET environment variables&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note: these supervision methods only signal &amp;#34;process is ready.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# They do not enable continuous pings back to your supervisor.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default is &amp;#34;no&amp;#34;. To run under upstart/systemd, you can simply uncomment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the line below:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supervised auto&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If a pid file is specified, Redis writes it where specified at startup&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and removes it at exit.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When the server runs non daemonized, no pid file is created if none is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# specified in the configuration. When the server is daemonized, the pid file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is used even if not specified, defaulting to &amp;#34;/var/run/redis.pid&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Creating a pid file is best effort: if Redis is not able to create it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# nothing bad happens, the server will start and run normally.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that on modern Linux systems &amp;#34;/run/redis.pid&amp;#34; is more conforming&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and should be used instead.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specify the server verbosity level.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This can be one of:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# debug (a lot of information, useful for development/testing)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# verbose (many rarely useful info, but not a mess like the debug level)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# notice (moderately verbose, what you want in production probably)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# warning (only very important / critical messages are logged)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;loglevel&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specify the log file name. Also the empty string can be used to force&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis to log on the standard output. Note that if you use standard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# output for logging but daemonize, logs will be sent to /dev/null&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;logfile&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# To enable logging to the system logger, just set &amp;#39;syslog-enabled&amp;#39; to yes,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and optionally update the other syslog parameters to suit your needs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# syslog-enabled no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specify the syslog identity.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# syslog-ident redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# syslog-facility local0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# To disable the built in crash log, which will possibly produce cleaner core&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# dumps when they are needed, uncomment the following:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# crash-log-enabled no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# To disable the fast memory check that&amp;#39;s run as part of the crash log, which&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will possibly let redis terminate sooner, uncomment the following:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# crash-memcheck-enabled no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set the number of databases. The default database is DB 0, you can select&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a different one on a per-connection basis using SELECT &amp;lt;dbid&amp;gt; where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# dbid is a number between 0 and &amp;#39;databases&amp;#39;-1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;databases&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default Redis shows an ASCII art logo only when started to log to the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# standard output and if the standard output is a TTY and syslog logging is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disabled. Basically this means that normally a logo is displayed only in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# interactive sessions.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However it is possible to force the pre-4.0 behavior and always show a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ASCII art logo in startup logs by setting the following option to yes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;always&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;logo&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, Redis modifies the process title (as seen in &amp;#39;top&amp;#39; and &amp;#39;ps&amp;#39;) to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# provide some runtime information. It is possible to disable this and leave&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the process name as executed by setting the following to no.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When changing the process title, Redis uses the following template to construct&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the modified title.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Template variables are specified in curly brackets. The following variables are&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supported:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {title} Name of process as executed if parent, or type of child process.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {listen-addr} Bind address or &amp;#39;*&amp;#39; followed by TCP or TLS port listening on, or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Unix socket if only that&amp;#39;s available.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {server-mode} Special mode, i.e. &amp;#34;[sentinel]&amp;#34; or &amp;#34;[cluster]&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {port} TCP port listening on, or 0.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {tls-port} TLS port listening on, or 0.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {unixsocket} Unix domain socket listening on, or &amp;#34;&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# {config-file} Name of configuration file used.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;{title} {listen-addr} {server-mode}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ SNAPSHOTTING ################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Save the DB to disk.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# save &amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt; [&amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt; ...]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis will save the DB if the given number of seconds elapsed and it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# surpassed the given number of write operations against the DB.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Snapshotting can be completely disabled with a single empty string argument&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# as in following example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# save &amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Unless specified otherwise, by default Redis will save the DB:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * After 3600 seconds (an hour) if at least 1 change was performed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * After 300 seconds (5 minutes) if at least 100 changes were performed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * After 60 seconds if at least 10000 changes were performed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You can set these explicitly by uncommenting the following line.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# save 3600 1 300 100 60 10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default Redis will stop accepting writes if RDB snapshots are enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (at least one save point) and the latest background save failed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This will make the user aware (in a hard way) that data is not persisting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# on disk properly, otherwise chances are that no one will notice and some&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disaster will happen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the background saving process will start working again Redis will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# automatically allow writes again.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However if you have setup your proper monitoring of the Redis server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and persistence, you may want to disable this feature so that Redis will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# continue to work as usual even if there are problems with disk,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# permissions, and so forth.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;writes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bgsave&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Compress string objects using LZF when dump .rdb databases?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default compression is enabled as it&amp;#39;s almost always a win.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If you want to save some CPU in the saving child set it to &amp;#39;no&amp;#39; but&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the dataset will likely be bigger if you have compressible values or keys.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;rdbcompression&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This makes the format more resistant to corruption but there is a performance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# hit to pay (around 10%) when saving and loading RDB files, so you can disable it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for maximum performances.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# RDB files created with checksum disabled have a checksum of zero that will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tell the loading code to skip the check.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;rdbchecksum&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Enables or disables full sanitization checks for ziplist and listpack etc when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# loading an RDB or RESTORE payload. This reduces the chances of a assertion or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# crash later on while processing commands.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Options:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# no - Never perform full sanitization&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# yes - Always perform full sanitization&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# clients - Perform full sanitization only for user connections.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Excludes: RDB files, RESTORE commands received from the master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# connection, and client connections which have the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# skip-sanitize-payload ACL flag.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default should be &amp;#39;clients&amp;#39; but since it currently affects cluster&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resharding via MIGRATE, it is temporarily set to &amp;#39;no&amp;#39; by default.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sanitize-dump-payload no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The filename where to dump the DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;dbfilename&lt;/span&gt; &lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rdb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Remove RDB files used by replication in instances without persistence&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# enabled. By default this option is disabled, however there are environments&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# where for regulations or other security concerns, RDB files persisted on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disk by masters in order to feed replicas, or stored on disk by replicas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to load them for the initial synchronization, should be deleted&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ASAP. Note that this option ONLY WORKS in instances that have both AOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and RDB persistence disabled, otherwise is completely ignored.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# An alternative (and sometimes better) way to obtain the same effect is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to use diskless replication on both master and replicas instances. However&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in the case of replicas, diskless is not always an option.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;rdb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;del&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The working directory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The DB will be written inside this directory, with the filename specified&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# above using the &amp;#39;dbfilename&amp;#39; configuration directive.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The Append Only File will also be created inside this directory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that you must specify a directory here, not a file name.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################# REPLICATION #################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Master-Replica replication. Use replicaof to make a Redis instance a copy of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# another Redis server. A few things to understand ASAP about Redis replication.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +------------------+ +---------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | Master | ---&amp;gt; | Replica |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | (receive writes) | | (exact copy) |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +------------------+ +---------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) Redis replication is asynchronous, but you can configure a master to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# stop accepting writes if it appears to be not connected with at least&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a given number of replicas.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) Redis replicas are able to perform a partial resynchronization with the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master if the replication link is lost for a relatively small amount of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# time. You may want to configure the replication backlog size (see the next&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sections of this file) with a sensible value depending on your needs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3) Replication is automatic and does not need user intervention. After a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# network partition replicas automatically try to reconnect to masters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and resynchronize with them.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replicaof &amp;lt;masterip&amp;gt; &amp;lt;masterport&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the master is password protected (using the &amp;#34;requirepass&amp;#34; configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directive below) it is possible to tell the replica to authenticate before&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# starting the replication synchronization process, otherwise the master will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# refuse the replica request.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# masterauth &amp;lt;master-password&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However this is not enough if you are using Redis ACLs (for Redis version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 6 or greater), and the default user is not capable of running the PSYNC&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command and/or other commands needed for replication. In this case it&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# better to configure a special user to use with replication, and specify the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# masteruser configuration as such:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# masteruser &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When masteruser is specified, the replica will authenticate against its&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master using the new AUTH form: AUTH &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When a replica loses its connection with the master, or when the replication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is still in progress, the replica can act in two different ways:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) if replica-serve-stale-data is set to &amp;#39;yes&amp;#39; (the default) the replica will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# still reply to client requests, possibly with out of date data, or the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# data set may just be empty if this is the first synchronization.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) If replica-serve-stale-data is set to &amp;#39;no&amp;#39; the replica will reply with error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;MASTERDOWN Link with MASTER is down and replica-serve-stale-data is set to &amp;#39;no&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to all data access commands, excluding commands such as:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# INFO, REPLICAOF, AUTH, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# HOST and LATENCY.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;replica&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;serve&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stale&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You can configure a replica instance to accept writes or not. Writing against&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a replica instance may be useful to store some ephemeral data (because data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# written on a replica will be easily deleted after resync with the master) but&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# may also cause problems if clients are writing to it because of a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# misconfiguration.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Since Redis 2.6 by default replicas are read-only.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note: read only replicas are not designed to be exposed to untrusted clients&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# on the internet. It&amp;#39;s just a protection layer against misuse of the instance.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Still a read only replica exports by default all the administrative commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# security of read only replicas using &amp;#39;rename-command&amp;#39; to shadow all the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# administrative / dangerous commands.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;replica&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Replication SYNC strategy: disk or socket.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# New replicas and reconnecting replicas that are not able to continue the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replication process just receiving differences, need to do what is called a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;full synchronization&amp;#34;. An RDB file is transmitted from the master to the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replicas.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The transmission can happen in two different ways:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) Disk-backed: The Redis master creates a new process that writes the RDB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# file on disk. Later the file is transferred by the parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# process to the replicas incrementally.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) Diskless: The Redis master creates a new process that directly writes the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# RDB file to replica sockets, without touching the disk at all.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# With disk-backed replication, while the RDB file is generated, more replicas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# can be queued and served with the RDB file as soon as the current child&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# producing the RDB file finishes its work. With diskless replication instead&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# once the transfer starts, new replicas arriving will be queued and a new&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# transfer will start when the current one terminates.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When diskless replication is used, the master waits a configurable amount of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# time (in seconds) before starting the transfer in the hope that multiple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replicas will arrive and the transfer can be parallelized.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# With slow disks and fast (large bandwidth) networks, diskless replication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# works better.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;diskless&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When diskless replication is enabled, it is possible to configure the delay&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server waits in order to spawn the child that transfers the RDB via socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to the replicas.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is important since once the transfer starts, it is not possible to serve&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# new replicas arriving, that will be queued for the next RDB transfer, so the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# server waits a delay in order to let more replicas arrive.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The delay is specified in seconds, and by default is 5 seconds. To disable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it entirely just set it to 0 seconds and the transfer will start ASAP.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;diskless&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When diskless replication is enabled with a delay, it is possible to let&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the replication start before the maximum delay is reached if the maximum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# number of replicas expected have connected. Default of 0 means that the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maximum is not defined and Redis will wait the full delay.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;diskless&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;replicas&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# WARNING: RDB diskless load is experimental. Since in this setup the replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# does not immediately store an RDB on disk, it may cause data loss during&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# failovers. RDB diskless load + Redis modules not handling I/O reads may also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cause Redis to abort in case of I/O errors during the initial synchronization&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# stage with the master. Use only if you know what you are doing.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Replica can load the RDB it reads from the replication link directly from the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# socket, or store the RDB to a file and read that file after it was completely&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# received from the master.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In many cases the disk is slower than the network, and storing and loading&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the RDB file may increase replication time (and even increase the master&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Copy on Write memory and replica buffers).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However, parsing the RDB file directly from the socket may mean that we have&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to flush the contents of the current database before the full rdb was&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# received. For this reason we have the following options:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;disabled&amp;#34; - Don&amp;#39;t use diskless load (store the rdb file to the disk first)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;on-empty-db&amp;#34; - Use diskless load only when it is completely safe.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;swapdb&amp;#34; - Keep current db contents in RAM while parsing the data directly&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# from the socket. Replicas in this mode can keep serving current&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# data set while replication is in progress, except for cases where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# they can&amp;#39;t recognize master as having a data set from same&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replication history.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that this requires sufficient memory, if you don&amp;#39;t have it,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# you risk an OOM kill.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;diskless&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Master send PINGs to its replicas in a predefined interval. It&amp;#39;s possible to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# change this interval with the repl_ping_replica_period option. The default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# value is 10 seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# repl-ping-replica-period 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The following option sets the replication timeout for:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) Bulk transfer I/O during SYNC, from the point of view of replica.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) Master timeout from the point of view of replicas (data, pings).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is important to make sure that this value is greater than the value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# specified for repl-ping-replica-period otherwise a timeout will be detected&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# every time there is low traffic between the master and the replica. The default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# value is 60 seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# repl-timeout 60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Disable TCP_NODELAY on the replica socket after SYNC?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If you select &amp;#34;yes&amp;#34; Redis will use a smaller number of TCP packets and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# less bandwidth to send data to replicas. But this can add a delay for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the data to appear on the replica side, up to 40 milliseconds with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Linux kernels using a default configuration.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If you select &amp;#34;no&amp;#34; the delay for data to appear on the replica side will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be reduced but more bandwidth will be used for replication.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default we optimize for low latency, but in very high traffic conditions&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# or when the master and replicas are many hops away, turning this to &amp;#34;yes&amp;#34; may&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be a good idea.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodelay&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set the replication backlog size. The backlog is a buffer that accumulates&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica data when replicas are disconnected for some time, so that when a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica wants to reconnect again, often a full resync is not needed, but a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# partial resync is enough, just passing the portion of data the replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# missed while disconnected.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The bigger the replication backlog, the longer the replica can endure the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disconnect and later be able to perform a partial resynchronization.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The backlog is only allocated if there is at least one replica connected.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# repl-backlog-size 1mb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# After a master has no connected replicas for some time, the backlog will be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# freed. The following option configures the amount of seconds that need to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# elapse, starting from the time the last replica disconnected, for the backlog&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# buffer to be freed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that replicas never free the backlog for timeout, since they may be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# promoted to masters later, and should be able to correctly &amp;#34;partially&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resynchronize&amp;#34; with other replicas: hence they should always accumulate backlog.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A value of 0 means to never release the backlog.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# repl-backlog-ttl 3600&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The replica priority is an integer number published by Redis in the INFO&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# output. It is used by Redis Sentinel in order to select a replica to promote&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# into a master if the master is no longer working correctly.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A replica with a low priority number is considered better for promotion, so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for instance if there are three replicas with priority 10, 100, 25 Sentinel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will pick the one with priority 10, that is the lowest.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However a special priority of 0 marks the replica as not able to perform the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# role of master, so a replica with priority of 0 will never be selected by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis Sentinel for promotion.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default the priority is 100.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;replica&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The propagation error behavior controls how Redis will behave when it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# unable to handle a command being processed in the replication stream from a master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# or processed while reading from an AOF file. Errors that occur during propagation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are unexpected, and can cause data inconsistency. However, there are edge cases&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in earlier versions of Redis where it was possible for the server to replicate or persist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# commands that would fail on future versions. For this reason the default behavior&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is to ignore such errors and continue processing commands.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If an application wants to ensure there is no data divergence, this configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# should be set to &amp;#39;panic&amp;#39; instead. The value can also be set to &amp;#39;panic-on-replicas&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to only panic when a replica encounters an error on the replication stream. One of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# these two panic values will become the default value in the future once there are&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sufficient safety mechanisms in place to prevent false positive crashes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# propagation-error-behavior ignore&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Replica ignore disk write errors controls the behavior of a replica when it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# unable to persist a write command received from its master to disk. By default,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this configuration is set to &amp;#39;no&amp;#39; and will crash the replica in this condition.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is not recommended to change this default, however in order to be compatible&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with older versions of Redis this config can be toggled to &amp;#39;yes&amp;#39; which will just&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# log a warning and execute the write command it got from the master.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica-ignore-disk-write-errors no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, Redis Sentinel includes all replicas in its reports. A replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# can be excluded from Redis Sentinel&amp;#39;s announcements. An unannounced replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will be ignored by the &amp;#39;sentinel replicas &amp;lt;master&amp;gt;&amp;#39; command and won&amp;#39;t be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# exposed to Redis Sentinel&amp;#39;s clients.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This option does not change the behavior of replica-priority. Even with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica-announced set to &amp;#39;no&amp;#39;, the replica can be promoted to master. To&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# prevent this behavior, set replica-priority to 0.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica-announced yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is possible for a master to stop accepting writes if there are less than&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# N replicas connected, having a lag less or equal than M seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The N replicas need to be in &amp;#34;online&amp;#34; state.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The lag in seconds, that must be &amp;lt;= the specified value, is calculated from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the last ping received from the replica, that is usually sent every second.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This option does not GUARANTEE that N replicas will accept the write, but&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will limit the window of exposure for lost writes in case not enough replicas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are available, to the specified number of seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For example to require at least 3 replicas with a lag &amp;lt;= 10 seconds use:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# min-replicas-to-write 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# min-replicas-max-lag 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Setting one or the other to 0 disables the feature.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default min-replicas-to-write is set to 0 (feature disabled) and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# min-replicas-max-lag is set to 10.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A Redis master is able to list the address and port of the attached&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replicas in different ways. For example the &amp;#34;INFO replication&amp;#34; section&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# offers this information, which is used, among other tools, by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis Sentinel in order to discover replica instances.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Another place where this info is available is in the output of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;ROLE&amp;#34; command of a master.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The listed IP address and port normally reported by a replica is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# obtained in the following way:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# IP: The address is auto detected by checking the peer address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of the socket used by the replica to connect with the master.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Port: The port is communicated by the replica during the replication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# handshake, and is normally the port that the replica is using to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# listen for connections.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However when port forwarding or Network Address Translation (NAT) is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# used, the replica may actually be reachable via different IP and port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# pairs. The following two options can be used by a replica in order to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# report to its master a specific set of IP and port, so that both INFO&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and ROLE will report those values.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# There is no need to use both the options if you need to override just&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the port or the IP address.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica-announce-ip 5.5.5.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica-announce-port 1234&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################### KEYS TRACKING #################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis implements server assisted support for client side caching of values.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is implemented using an invalidation table that remembers, using&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a radix key indexed by key name, what clients have which keys. In turn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this is used in order to send invalidation messages to clients. Please&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# check this page to understand more about the feature:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# https://redis.io/topics/client-side-caching&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When tracking is enabled for a client, all the read only queries are assumed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to be cached: this will force Redis to store information in the invalidation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# table. When keys are modified, such information is flushed away, and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# invalidation messages are sent to the clients. However if the workload is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# heavily dominated by reads, Redis could use more and more memory in order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to track the keys fetched by many clients.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For this reason it is possible to configure a maximum fill value for the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# invalidation table. By default it is set to 1M of keys, and once this limit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is reached, Redis will start to evict keys in the invalidation table&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# even if they were not modified, just to reclaim memory: this will in turn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# force the clients to invalidate the cached values. Basically the table&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maximum size is a trade off between the memory you want to spend server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# side to track information about who cached what, and the ability of clients&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to retain cached objects in memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If you set the value to 0, it means there are no limits, and Redis will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# retain as many keys as needed in the invalidation table.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In the &amp;#34;stats&amp;#34; INFO section, you can find information about the number of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# keys in the invalidation table at every given moment.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note: when key tracking is used in broadcasting mode, no memory is used&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in the server side so this setting is useless.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tracking-table-max-keys 1000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## SECURITY ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Warning: since Redis is pretty fast, an outside user can try up to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1 million passwords per second against a modern box. This means that you&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# should use very strong passwords, otherwise they will be very easy to break.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that because the password is really a shared secret between the client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and the server, and should not be memorized by any human, the password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# can be easily a long string from /dev/urandom or whatever, so by using a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# long and unguessable password no brute force attack will be possible.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis ACL users are defined in the following format:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# user &amp;lt;username&amp;gt; ... acl rules ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# user worker +@list +@connection ~jobs:* on &amp;gt;ffa9203c493aa99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The special username &amp;#34;default&amp;#34; is used for new connections. If this user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# has the &amp;#34;nopass&amp;#34; rule, then new connections will be immediately authenticated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# as the &amp;#34;default&amp;#34; user without the need of any password provided via the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# AUTH command. Otherwise if the &amp;#34;default&amp;#34; user is not flagged with &amp;#34;nopass&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the connections will start in not authenticated state, and will require&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# AUTH (or the HELLO command AUTH option) in order to be authenticated and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# start to work.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The ACL rules that describe what a user can do are the following:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# on Enable the user: it is possible to authenticate as this user.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# off Disable the user: it&amp;#39;s no longer possible to authenticate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with this user, however the already authenticated connections&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will still work.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# skip-sanitize-payload RESTORE dump-payload sanitization is skipped.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sanitize-payload RESTORE dump-payload is sanitized (default).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +&amp;lt;command&amp;gt; Allow the execution of that command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# May be used with `|` for allowing subcommands (e.g &amp;#34;+config|get&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -&amp;lt;command&amp;gt; Disallow the execution of that command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# May be used with `|` for blocking subcommands (e.g &amp;#34;-config|set&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +@&amp;lt;category&amp;gt; Allow the execution of all the commands in such category&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with valid categories are like @admin, @set, @sortedset, ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and so forth, see the full list in the server.c file where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the Redis command table is described and defined.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The special category @all means all the commands, but currently&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# present in the server, and that will be loaded in the future&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# via modules.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +&amp;lt;command&amp;gt;|first-arg Allow a specific first argument of an otherwise&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disabled command. It is only supported on commands with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# no sub-commands, and is not allowed as negative form&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# like -SELECT|1, only additive starting with &amp;#34;+&amp;#34;. This&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# feature is deprecated and may be removed in the future.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allcommands Alias for +@all. Note that it implies the ability to execute&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# all the future commands loaded via the modules system.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# nocommands Alias for -@all.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ~&amp;lt;pattern&amp;gt; Add a pattern of keys that can be mentioned as part of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# commands. For instance ~* allows all the keys. The pattern&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is a glob-style pattern like the one of KEYS.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is possible to specify multiple patterns.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# %R~&amp;lt;pattern&amp;gt; Add key read pattern that specifies which keys can be read &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# from.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# %W~&amp;lt;pattern&amp;gt; Add key write pattern that specifies which keys can be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# written to. &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allkeys Alias for ~*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resetkeys Flush the list of allowed keys patterns.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;amp;&amp;lt;pattern&amp;gt; Add a glob-style pattern of Pub/Sub channels that can be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# accessed by the user. It is possible to specify multiple channel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# patterns.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allchannels Alias for &amp;amp;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resetchannels Flush the list of allowed channel patterns.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;gt;&amp;lt;password&amp;gt; Add this password to the list of valid password for the user.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For example &amp;gt;mypass will add &amp;#34;mypass&amp;#34; to the list.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This directive clears the &amp;#34;nopass&amp;#34; flag (see later).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;lt;&amp;lt;password&amp;gt; Remove this password from the list of valid passwords.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# nopass All the set passwords of the user are removed, and the user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is flagged as requiring no password: it means that every&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# password will work against this user. If this directive is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# used for the default user, every new connection will be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# immediately authenticated with the default user without&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# any explicit AUTH command required. Note that the &amp;#34;resetpass&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directive will clear this condition.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resetpass Flush the list of allowed passwords. Moreover removes the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;nopass&amp;#34; status. After &amp;#34;resetpass&amp;#34; the user has no associated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# passwords and there is no way to authenticate without adding&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# some password (or setting it as &amp;#34;nopass&amp;#34; later).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# reset Performs the following actions: resetpass, resetkeys, off,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -@all. The user returns to the same state it has immediately&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# after its creation.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (&amp;lt;options&amp;gt;) Create a new selector with the options specified within the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# parentheses and attach it to the user. Each option should be &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# space separated. The first character must be ( and the last &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# character must be ).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# clearselectors Remove all of the currently attached selectors. &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note this does not change the &amp;#34;root&amp;#34; user permissions,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# which are the permissions directly applied onto the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# user (outside the parentheses).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ACL rules can be specified in any order: for instance you can start with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# passwords, then flags, or key patterns. However note that the additive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and subtractive rules will CHANGE MEANING depending on the ordering.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For instance see the following example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# user alice on +@all -DEBUG ~* &amp;gt;somepassword&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This will allow &amp;#34;alice&amp;#34; to use all the commands with the exception of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# DEBUG command, since +@all added all the commands to the set of the commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# alice can use, and later DEBUG was removed. However if we invert the order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of two ACL rules the result will be different:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# user alice on -DEBUG +@all ~* &amp;gt;somepassword&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Now DEBUG was removed when alice had yet no commands in the set of allowed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# commands, later all the commands are added, so the user will be able to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# execute everything.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Basically ACL rules are processed left-to-right.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The following is a list of command categories and their meanings:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * keyspace - Writing or reading from keys, databases, or their metadata &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in a type agnostic way. Includes DEL, RESTORE, DUMP, RENAME, EXISTS, DBSIZE,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# KEYS, EXPIRE, TTL, FLUSHALL, etc. Commands that may modify the keyspace,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# key or metadata will also have `write` category. Commands that only read&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the keyspace, key or metadata will have the `read` category.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * read - Reading from keys (values or metadata). Note that commands that don&amp;#39;t&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# interact with keys, will not have either `read` or `write`.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * write - Writing to keys (values or metadata)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * admin - Administrative commands. Normal applications will never need to use&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# these. Includes REPLICAOF, CONFIG, DEBUG, SAVE, MONITOR, ACL, SHUTDOWN, etc.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * dangerous - Potentially dangerous (each should be considered with care for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# various reasons). This includes FLUSHALL, MIGRATE, RESTORE, SORT, KEYS,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# CLIENT, DEBUG, INFO, CONFIG, SAVE, REPLICAOF, etc.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * connection - Commands affecting the connection or other connections.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This includes AUTH, SELECT, COMMAND, CLIENT, ECHO, PING, etc.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * blocking - Potentially blocking the connection until released by another&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * fast - Fast O(1) commands. May loop on the number of arguments, but not the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# number of elements in the key.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * slow - All commands that are not Fast.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * pubsub - PUBLISH / SUBSCRIBE related&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * transaction - WATCH / MULTI / EXEC related commands.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * scripting - Scripting related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * set - Data type: sets related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * sortedset - Data type: zsets related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * list - Data type: lists related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * hash - Data type: hashes related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * string - Data type: strings related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * bitmap - Data type: bitmaps related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * hyperloglog - Data type: hyperloglog related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * geo - Data type: geo related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * stream - Data type: streams related.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For more information about ACL configuration please refer to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the Redis web site at https://redis.io/topics/acl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ACL LOG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The ACL Log tracks failed commands and authentication events associated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# by ACLs. The ACL Log is stored in memory. You can reclaim memory with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ACL LOG RESET. Define the maximum entry length of the ACL Log below.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;acllog&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Using an external ACL file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Instead of configuring users here in this file, it is possible to use&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a stand-alone file just listing users. The two methods cannot be mixed:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# if you configure users here and at the same time you activate the external&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ACL file, the server will refuse to start.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The format of the external ACL user file is exactly the same as the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# format that is used inside redis.conf to describe users.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# aclfile /etc/redis/users.acl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# IMPORTANT NOTE: starting with Redis 6 &amp;#34;requirepass&amp;#34; is just a compatibility&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# layer on top of the new ACL system. The option effect will be just setting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the password for the default user. Clients will still authenticate using&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# AUTH &amp;lt;password&amp;gt; as usually, or more explicitly with AUTH default &amp;lt;password&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# if they follow the new protocol: both will work.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The requirepass is not compatible with aclfile option and the ACL LOAD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command, these will cause requirepass to be ignored.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# requirepass foobared&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# New users are initialized with restrictive permissions by default, via the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# equivalent of this ACL rule &amp;#39;off resetkeys -@all&amp;#39;. Starting with Redis 6.2, it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is possible to manage access to Pub/Sub channels with ACL rules as well. The&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# default Pub/Sub channels permission if new users is controlled by the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# acl-pubsub-default configuration directive, which accepts one of these values:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allchannels: grants access to all Pub/Sub channels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resetchannels: revokes access to all Pub/Sub channels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# From Redis 7.0, acl-pubsub-default defaults to &amp;#39;resetchannels&amp;#39; permission.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# acl-pubsub-default resetchannels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Command renaming (DEPRECATED).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# WARNING: avoid using this option if possible. Instead use ACLs to remove&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# commands from the default user, and put them only in some admin user you&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# create for administrative purposes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is possible to change the name of dangerous commands in a shared&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# environment. For instance the CONFIG command may be renamed into something&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# hard to guess so that it will still be available for internal-use tools&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# but not available for general clients.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is also possible to completely kill a command by renaming it into&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# an empty string:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# rename-command CONFIG &amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Please note that changing the name of commands that are logged into the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# AOF file or transmitted to replicas may cause problems.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################### CLIENTS ####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set the max number of connected clients at the same time. By default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this limit is set to 10000 clients, however if the Redis server is not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# able to configure the process file limit to allow for the specified limit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the max number of allowed clients is set to the current file limit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# minus 32 (as Redis reserves a few file descriptors for internal uses).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Once the limit is reached Redis will close all the new connections sending&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# an error &amp;#39;max number of clients reached&amp;#39;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# IMPORTANT: When Redis Cluster is used, the max number of connections is also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# shared with the cluster bus: every node in the cluster will use two&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# connections, one incoming and another outgoing. It is important to size the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# limit accordingly in case of very large clusters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxclients 10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################## MEMORY MANAGEMENT ################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set a memory usage limit to the specified amount of bytes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When the memory limit is reached Redis will try to remove keys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# according to the eviction policy selected (see maxmemory-policy).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If Redis can&amp;#39;t remove keys according to the policy, or if the policy is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# set to &amp;#39;noeviction&amp;#39;, Redis will start to reply with errors to commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that would use more memory, like SET, LPUSH, and so on, and will continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to reply to read-only commands like GET.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This option is usually useful when using Redis as an LRU or LFU cache, or to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# set a hard memory limit for an instance (using the &amp;#39;noeviction&amp;#39; policy).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# WARNING: If you have replicas attached to an instance with maxmemory on,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the size of the output buffers needed to feed the replicas are subtracted&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# from the used memory count, so that network problems / resyncs will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# not trigger a loop where keys are evicted, and in turn the output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# buffer of replicas is full with DELs of keys evicted triggering the deletion&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of more keys, and so forth until the database is completely emptied.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In short... if you have replicas attached it is suggested that you set a lower&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# limit for maxmemory so that there is some free RAM on the system for replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# output buffers (but this is not needed if the policy is &amp;#39;noeviction&amp;#39;).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxmemory &amp;lt;bytes&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is reached. You can select one from the following behaviors:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# volatile-lru -&amp;gt; Evict using approximated LRU, only keys with an expire set.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allkeys-lru -&amp;gt; Evict any key using approximated LRU.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# volatile-lfu -&amp;gt; Evict using approximated LFU, only keys with an expire set.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allkeys-lfu -&amp;gt; Evict any key using approximated LFU.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# volatile-random -&amp;gt; Remove a random key having an expire set.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# allkeys-random -&amp;gt; Remove a random key, any key.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# volatile-ttl -&amp;gt; Remove the key with the nearest expire time (minor TTL)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# noeviction -&amp;gt; Don&amp;#39;t evict anything, just return an error on write operations.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# LRU means Least Recently Used&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# LFU means Least Frequently Used&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Both LRU, LFU and volatile-ttl are implemented using approximated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# randomized algorithms.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note: with any of the above policies, when there are no suitable keys for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# eviction, Redis will return an error on write operations that require&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# more memory. These are usually commands that create new keys, add data or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# SORT (due to the STORE argument), and EXEC (if the transaction includes any&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command that requires memory).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default is:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxmemory-policy noeviction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# algorithms (in order to save memory), so you can tune it for speed or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# accuracy. By default Redis will check five keys and pick the one that was&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# used least recently, you can change the sample size using the following&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# configuration directive.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default of 5 produces good enough results. 10 Approximates very closely&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# true LRU but costs more CPU. 3 is faster but not very accurate.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxmemory-samples 5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Eviction processing is designed to function well with the default setting.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If there is an unusually large amount of write traffic, this value may need to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be increased. Decreasing this value may reduce latency at the risk of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# eviction processing effectiveness&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 0 = minimum latency, 10 = default, 100 = process without regard to latency&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxmemory-eviction-tenacity 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Starting from Redis 5, by default a replica will ignore its maxmemory setting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (unless it is promoted to master after a failover or manually). It means&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that the eviction of keys will be just handled by the master, sending the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# DEL commands to the replica as keys evict in the master side.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This behavior ensures that masters and replicas stay consistent, and is usually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# what you want, however if your replica is writable, or you want the replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to have a different memory setting, and you are sure all the writes performed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to the replica are idempotent, then you may change this default (but be sure&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to understand what you are doing).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that since the replica by default does not evict, it may end using more&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# memory than the one set via maxmemory (there are certain buffers that may&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be larger on the replica, or data structures may sometimes take more memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and so forth). So make sure you monitor your replicas and make sure they&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# have enough memory to never hit a real out-of-memory condition before the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master hits the configured maxmemory setting.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica-ignore-maxmemory yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis reclaims expired keys in two ways: upon access when those keys are&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# found to be expired, and also in background, in what is called the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;active expire key&amp;#34;. The key space is slowly and interactively scanned&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# looking for expired keys to reclaim, so that it is possible to free memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of keys that are expired and will never be accessed again in a short time.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default effort of the expire cycle will try to avoid having more than&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ten percent of expired keys still in memory, and will try to avoid consuming&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# more than 25% of total memory and to add latency to the system. However&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it is possible to increase the expire &amp;#34;effort&amp;#34; that is normally set to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;1&amp;#34;, to a greater value, up to the value &amp;#34;10&amp;#34;. At its maximum value the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# system will use more CPU, longer cycles (and technically may introduce&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# more latency), and will tolerate less already expired keys still present&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in the system. It&amp;#39;s a tradeoff between memory, CPU and latency.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-expire-effort 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################# LAZY FREEING ####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis has two primitives to delete keys. One is called DEL and is a blocking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# deletion of the object. It means that the server stops processing new commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to reclaim all the memory associated with an object in a synchronous&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# way. If the key deleted is associated with a small object, the time needed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to execute the DEL command is very small and comparable to most other&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# O(1) or O(log_N) commands in Redis. However if the key is associated with an&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# aggregated value containing millions of elements, the server can block for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a long time (even seconds) in order to complete the operation.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For the above reasons Redis also offers non blocking deletion primitives&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# FLUSHDB commands, in order to reclaim memory in background. Those commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are executed in constant time. Another thread will incrementally free the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# object in the background as fast as possible.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It&amp;#39;s up to the design of the application to understand when it is a good&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# idea to use one or the other. However the Redis server sometimes has to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# delete keys or flush the whole database as a side effect of other operations.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specifically Redis deletes objects independently of a user call in the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# following scenarios:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) On eviction, because of the maxmemory and maxmemory policy configurations,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to make room for new data, without going over the specified&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# memory limit.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) Because of expire: when a key with an associated time to live (see the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# EXPIRE command) must be deleted from memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3) Because of a side effect of a command that stores data on a key that may&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# already exist. For example the RENAME command may delete the old key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# content when it is replaced with another one. Similarly SUNIONSTORE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# or SORT with STORE option may delete existing keys. The SET command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# itself removes any old content of the specified key in order to replace&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it with the specified string.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 4) During replication, when a replica performs a full resynchronization with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# its master, the content of the whole database is removed in order to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# load the RDB file just transferred.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In all the above cases the default is to delete objects in a blocking way,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# like if DEL was called. However you can configure each case specifically&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to instead release memory in a non-blocking way like if UNLINK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# was called, using the following configuration directives.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;lazyfree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;eviction&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;lazyfree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;lazyfree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;del&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;replica&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is also possible, for the case when to replace the user code DEL calls&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with UNLINK calls is not easy, to modify the default behavior of the DEL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command to act exactly like UNLINK, using the following configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directive:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;lazyfree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;del&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# FLUSHDB, FLUSHALL, SCRIPT FLUSH and FUNCTION FLUSH support both asynchronous and synchronous&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# deletion, which can be controlled by passing the [SYNC|ASYNC] flags into the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# commands. When neither flag is passed, this directive will be used to determine&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# if the data should be deleted asynchronously.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;lazyfree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ THREADED I/O #################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis is mostly single threaded, however there are certain threaded&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# operations such as UNLINK, slow I/O accesses and other things that are&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# performed on side threads.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Now it is also possible to handle Redis clients socket reads and writes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in different I/O threads. Since especially writing is so slow, normally&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis users use pipelining in order to speed up the Redis performances per&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# core, and spawn multiple instances in order to scale more. Using I/O&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# threads it is possible to easily speedup two times Redis without resorting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to pipelining nor sharding of the instance.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default threading is disabled, we suggest enabling it only in machines&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that have at least 4 or more cores, leaving at least one spare core.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Using more than 8 threads is unlikely to help much. We also recommend using&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# threaded I/O only if you actually have performance problems, with Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# instances being able to use a quite big percentage of CPU time, otherwise&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# there is no point in using this feature.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# So for instance if you have a four cores boxes, try to use 2 or 3 I/O&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# threads, if you have a 8 cores, try to use 6 threads. In order to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# enable I/O threads use the following configuration directive:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# io-threads 4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Setting io-threads to 1 will just use the main thread as usual.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When I/O threads are enabled, we only use threads for writes, that is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to thread the write(2) syscall and transfer the client buffers to the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# socket. However it is also possible to enable threading of reads and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# protocol parsing using the following configuration directive, by setting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it to yes:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# io-threads-do-reads no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Usually threading reads doesn&amp;#39;t help much.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# NOTE 1: This configuration directive cannot be changed at runtime via&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# CONFIG SET. Also, this feature currently does not work when SSL is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# enabled.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sure you also run the benchmark itself in threaded mode, using the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --threads option to match the number of Redis threads, otherwise you&amp;#39;ll not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# be able to notice the improvements.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################ KERNEL OOM CONTROL ##############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# On Linux, it is possible to hint the kernel OOM killer on what processes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# should be killed first when out of memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Enabling this feature makes Redis actively control the oom_score_adj value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for all its processes, depending on their role. The default scores will&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# attempt to have background child processes killed before all others, and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replicas killed before masters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis supports these options:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# no: Don&amp;#39;t make changes to oom-score-adj (default).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# yes: Alias to &amp;#34;relative&amp;#34; see below.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# absolute: Values in oom-score-adj-values are written as is to the kernel.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# relative: Values are used relative to the initial value of oom_score_adj when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server starts and are then clamped to a range of -1000 to 1000.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Because typically the initial value is 0, they will often match the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# absolute values.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;oom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;adj&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When oom-score-adj is used, this directive controls the specific values used&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for master, replica and background child processes. Values range -2000 to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2000 (higher means more likely to be killed).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Unprivileged processes (not root, and without CAP_SYS_RESOURCE capabilities)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# can freely increase their value, but not decrease it below its initial&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# settings. This means that setting oom-score-adj to &amp;#34;relative&amp;#34; and setting the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# oom-score-adj-values to positive values will always succeed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;oom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;adj&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#################### KERNEL transparent hugepage CONTROL ######################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Usually the kernel Transparent Huge Pages control is set to &amp;#34;madvise&amp;#34; or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# or &amp;#34;never&amp;#34; by default (/sys/kernel/mm/transparent_hugepage/enabled), in which&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# case this config has no effect. On systems in which it is set to &amp;#34;always&amp;#34;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# redis will attempt to disable it specifically for the redis process in order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to avoid latency problems specifically with fork(2) and CoW.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If for some reason you prefer to keep it enabled, you can set this config to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;no&amp;#34; and the kernel global to &amp;#34;always&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;thp&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################## APPEND ONLY MODE ###############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default Redis asynchronously dumps the dataset on disk. This mode is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# good enough in many applications, but an issue with the Redis process or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a power outage may result into a few minutes of writes lost (depending on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the configured save points).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The Append Only File is an alternative persistence mode that provides&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# much better durability. For instance using the default data fsync policy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (see later in the config file) Redis can lose just one second of writes in a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# dramatic event like a server power outage, or a single write if something&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# wrong with the Redis process itself happens, but the operating system is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# still running correctly.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# AOF and RDB persistence can be enabled at the same time without problems.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the AOF is enabled on startup Redis will load the AOF, that is the file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with the better durability guarantees.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Please check https://redis.io/topics/persistence for more information.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#-appendonly no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The base name of the append only file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis 7 and newer use a set of append-only files to persist the dataset&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and changes applied to it. There are two basic types of files in use:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - Base files, which are a snapshot representing the complete state of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# dataset at the time the file was created. Base files can be either in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the form of RDB (binary serialized) or AOF (textual commands).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - Incremental files, which contain additional commands that were applied&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to the dataset following the previous file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In addition, manifest files are used to track the files and the order in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# which they were created and should be applied.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Append-only file names are created by Redis following a specific pattern.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The file name&amp;#39;s prefix is based on the &amp;#39;appendfilename&amp;#39; configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# parameter, followed by additional information about the sequence and type.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For example, if appendfilename is set to appendonly.aof, the following file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# names could be derived:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - appendonly.aof.1.base.rdb as a base file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - appendonly.aof.1.incr.aof, appendonly.aof.2.incr.aof as incremental files.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - appendonly.aof.manifest as a manifest file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;appendfilename&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;appendonly.aof&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For convenience, Redis stores all persistent append-only files in a dedicated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# directory. The name of the directory is determined by the appenddirname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# configuration parameter.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;appenddirname&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;appendonlydir&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The fsync() call tells the Operating System to actually write data on disk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# instead of waiting for more data in the output buffer. Some OS will really flush&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# data on disk, some other OS will just try to do it ASAP.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis supports three different modes:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# no: don&amp;#39;t fsync, just let the OS flush the data when it wants. Faster.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# always: fsync after every write to the append only log. Slow, Safest.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# everysec: fsync only one time every second. Compromise.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default is &amp;#34;everysec&amp;#34;, as that&amp;#39;s usually the right compromise between&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# speed and data safety. It&amp;#39;s up to you to understand if you can relax this to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;no&amp;#34; that will let the operating system flush the output buffer when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it wants, for better performances (but if you can live with the idea of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# some data loss consider the default persistence mode that&amp;#39;s snapshotting),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# or on the contrary, use &amp;#34;always&amp;#34; that&amp;#39;s very slow but a bit safer than&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# everysec.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# More details please check the following article:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# http://antirez.com/post/redis-persistence-demystified.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If unsure, use &amp;#34;everysec&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# appendfsync always&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;appendfsync&lt;/span&gt; &lt;span class="n"&gt;everysec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# appendfsync no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When the AOF fsync policy is set to always or everysec, and a background&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# saving process (a background save or AOF log background rewriting) is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# performing a lot of I/O against the disk, in some Linux configurations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis may block too long on the fsync() call. Note that there is no fix for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this currently, as even performing fsync in a different thread will block&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# our synchronous write(2) call.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In order to mitigate this problem it&amp;#39;s possible to use the following option&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that will prevent fsync() from being called in the main process while a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# BGSAVE or BGREWRITEAOF is in progress.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This means that while another child is saving, the durability of Redis is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the same as &amp;#34;appendfsync no&amp;#34;. In practical terms, this means that it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# possible to lose up to 30 seconds of log in the worst scenario (with the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# default Linux settings).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If you have latency problems turn this to &amp;#34;yes&amp;#34;. Otherwise leave it as&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;no&amp;#34; that is the safest pick from the point of view of durability.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;appendfsync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Automatic rewrite of the append only file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis is able to automatically rewrite the log file implicitly calling&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# BGREWRITEAOF when the AOF log size grows by the specified percentage.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is how it works: Redis remembers the size of the AOF file after the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# latest rewrite (if no rewrite has happened since the restart, the size of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the AOF at startup is used).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This base size is compared to the current size. If the current size is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bigger than the specified percentage, the rewrite is triggered. Also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# you need to specify a minimal size for the AOF file to be rewritten, this&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is useful to avoid rewriting the AOF file even if the percentage increase&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is reached but it is still pretty small.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Specify a percentage of zero in order to disable the automatic AOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# rewrite feature.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rewrite&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;percentage&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rewrite&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;mb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# An AOF file may be found to be truncated at the end during the Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# startup process, when the AOF data gets loaded back into memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This may happen when the system where Redis is running&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# crashes, especially when an ext4 filesystem is mounted without the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# data=ordered option (however this can&amp;#39;t happen when Redis itself&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# crashes or aborts but the operating system still works correctly).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis can either exit with an error when this happens, or load as much&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# data as possible (the default now) and start if the AOF file is found&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to be truncated at the end. The following option controls this behavior.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If aof-load-truncated is set to yes, a truncated AOF file is loaded and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the Redis server starts emitting a log to inform the user of the event.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Otherwise if the option is set to no, the server aborts with an error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and refuses to start. When the option is set to no, the user requires&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to fix the AOF file using the &amp;#34;redis-check-aof&amp;#34; utility before to restart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that if the AOF file will be found to be corrupted in the middle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server will still exit with an error. This option only applies when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis will try to read more data from the AOF file but not enough bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will be found.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;aof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;load&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;truncated&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis can create append-only base files in either RDB or AOF formats. Using&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the RDB format is always faster and more efficient, and disabling it is only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# supported for backward compatibility purposes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;aof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rdb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;preamble&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis supports recording timestamp annotations in the AOF to support restoring&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the data from a specific point-in-time. However, using this capability changes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the AOF format in a way that may not be compatible with existing AOF parsers.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;aof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ SHUTDOWN #####################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Maximum time to wait for replicas when shutting down, in seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# During shut down, a grace period allows any lagging replicas to catch up with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the latest replication offset before the master exists. This period can&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# prevent data loss, especially for deployments without configured disk backups.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The &amp;#39;shutdown-timeout&amp;#39; value is the grace period&amp;#39;s duration in seconds. It is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# only applicable when the instance has replicas. To disable the feature, set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the value to 0.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# shutdown-timeout 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When Redis receives a SIGINT or SIGTERM, shutdown is initiated and by default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# an RDB snapshot is written to disk in a blocking operation if save points are configured.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The options used on signaled shutdown can include the following values:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# default: Saves RDB snapshot only if save points are configured.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Waits for lagging replicas to catch up.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# save: Forces a DB saving operation even if no save points are configured.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# nosave: Prevents DB saving operation even if one or more save points are configured.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# now: Skips waiting for lagging replicas.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# force: Ignores any errors that would normally prevent the server from exiting.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Any combination of values is allowed as long as &amp;#34;save&amp;#34; and &amp;#34;nosave&amp;#34; are not set simultaneously.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Example: &amp;#34;nosave force now&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# shutdown-on-sigint default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# shutdown-on-sigterm default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################ NON-DETERMINISTIC LONG BLOCKING COMMANDS #####################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Maximum time in milliseconds for EVAL scripts, functions and in some cases&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# modules&amp;#39; commands before Redis can start processing or rejecting other clients.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the maximum execution time is reached Redis will start to reply to most&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# commands with a BUSY error.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In this state Redis will only allow a handful of commands to be executed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For instance, SCRIPT KILL, FUNCTION KILL, SHUTDOWN NOSAVE and possibly some&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# module specific &amp;#39;allow-busy&amp;#39; commands.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# SCRIPT KILL and FUNCTION KILL will only be able to stop a script that did not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# yet call any write commands, so SHUTDOWN NOSAVE may be the only way to stop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server in the case a write command was already issued by the script when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the user doesn&amp;#39;t want to wait for the natural termination of the script.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default is 5 seconds. It is possible to set it to 0 or a negative value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to disable this mechanism (uninterrupted execution). Note that in the past&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this config had a different name, which is now an alias, so both of these do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the same:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# lua-time-limit 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# busy-reply-threshold 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ REDIS CLUSTER ###############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Normal Redis instances can&amp;#39;t be part of a Redis Cluster; only nodes that are&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# started as cluster nodes can. In order to start a Redis instance as a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster node enable the cluster support uncommenting the following:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-enabled yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Every cluster node has a cluster configuration file. This file is not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# intended to be edited by hand. It is created and updated by Redis nodes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Every Redis Cluster node requires a different cluster configuration file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Make sure that instances running in the same system do not have&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# overlapping cluster configuration file names.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-config-file nodes-6379.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Cluster node timeout is the amount of milliseconds a node must be unreachable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for it to be considered in failure state.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Most other internal time limits are a multiple of the node timeout.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-node-timeout 15000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The cluster port is the port that the cluster bus will listen for inbound connections on. When set &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to the default value, 0, it will be bound to the command port + 10000. Setting this value requires &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# you to specify the cluster bus port when executing cluster meet.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-port 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A replica of a failing master will avoid to start a failover if its data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# looks too old.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# There is no simple way for a replica to actually have an exact measure of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# its &amp;#34;data age&amp;#34;, so the following two checks are performed:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1) If there are multiple replicas able to failover, they exchange messages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to try to give an advantage to the replica with the best&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replication offset (more data from the master processed).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Replicas will try to get their rank by offset, and apply to the start&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of the failover a delay proportional to their rank.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2) Every single replica computes the time of the last interaction with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# its master. This can be the last ping or command received (if the master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is still in the &amp;#34;connected&amp;#34; state), or the time that elapsed since the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disconnection with the master (if the replication link is currently down).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the last interaction is too old, the replica will not try to failover&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# at all.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The point &amp;#34;2&amp;#34; can be tuned by user. Specifically a replica will not perform&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the failover if, since the last interaction with the master, the time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# elapsed is greater than:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (node-timeout * cluster-replica-validity-factor) + repl-ping-replica-period&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# So for example if node-timeout is 30 seconds, and the cluster-replica-validity-factor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica will not try to failover if it was not able to talk with the master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for longer than 310 seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A large cluster-replica-validity-factor may allow replicas with too old data to failover&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a master, while a too small value may prevent the cluster from being able to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# elect a replica at all.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For maximum availability, it is possible to set the cluster-replica-validity-factor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to a value of 0, which means, that replicas will always try to failover the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master regardless of the last time they interacted with the master.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (However they&amp;#39;ll always try to apply a delay proportional to their&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# offset rank).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Zero is the only value able to guarantee that when all the partitions heal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the cluster will always be able to continue.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-replica-validity-factor 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Cluster replicas are able to migrate to orphaned masters, that are masters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that are left without working replicas. This improves the cluster ability&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to resist to failures as otherwise an orphaned master can&amp;#39;t be failed over&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in case of failure if it has no working replicas.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Replicas migrate to orphaned masters only if there are still at least a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# given number of other working replicas for their old master. This number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is the &amp;#34;migration barrier&amp;#34;. A migration barrier of 1 means that a replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will migrate only if there is at least 1 other working replica for its master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and so forth. It usually reflects the number of replicas you want for every&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master in your cluster.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Default is 1 (replicas migrate only if their masters remain with at least&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# one replica). To disable migration just set it to a very large value or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# set cluster-allow-replica-migration to &amp;#39;no&amp;#39;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A value of 0 can be set but is useful only for debugging and dangerous&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in production.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-migration-barrier 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Turning off this option allows to use less automatic cluster configuration.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It both disables migration to orphaned masters and migration from masters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that became empty.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Default is &amp;#39;yes&amp;#39; (allow automatic migrations).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-allow-replica-migration yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default Redis Cluster nodes stop accepting queries if they detect there&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is at least a hash slot uncovered (no available node is serving it).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This way if the cluster is partially down (for example a range of hash slots&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are no longer covered) all the cluster becomes, eventually, unavailable.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It automatically returns available as soon as all the slots are covered again.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# However sometimes you want the subset of the cluster which is working,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to continue to accept queries for the part of the key space that is still&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# covered. In order to do so, just set the cluster-require-full-coverage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# option to no.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-require-full-coverage yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This option, when set to yes, prevents replicas from trying to failover its&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master during master failures. However the replica can still perform a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# manual failover, if forced to do so.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is useful in different scenarios, especially in the case of multiple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# data center operations, where we want one side to never be promoted if not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in the case of a total DC failure.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-replica-no-failover no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This option, when set to yes, allows nodes to serve read traffic while the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster is in a down state, as long as it believes it owns the slots.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is useful for two cases. The first case is for when an application&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# doesn&amp;#39;t require consistency of data during node failures or network partitions.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# One example of this is a cache, where as long as the node has the data it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# should be able to serve it.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The second use case is for configurations that don&amp;#39;t meet the recommended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# three shards but want to enable cluster mode and scale later. A&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# master outage in a 1 or 2 shard configuration causes a read/write outage to the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# entire cluster without this option set, with it set there is only a write outage.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Without a quorum of masters, slot ownership will not change automatically.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-allow-reads-when-down no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This option, when set to yes, allows nodes to serve pubsub shard traffic while&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the cluster is in a down state, as long as it believes it owns the slots.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is useful if the application would like to use the pubsub feature even when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the cluster global stable state is not OK. If the application wants to make sure only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# one shard is serving a given channel, this feature should be kept as yes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-allow-pubsubshard-when-down yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Cluster link send buffer limit is the limit on the memory usage of an individual&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster bus link&amp;#39;s send buffer in bytes. Cluster links would be freed if they exceed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this limit. This is to primarily prevent send buffers from growing unbounded on links&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# toward slow peers (E.g. PubSub messages being piled up).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This limit is disabled by default. Enable this limit when &amp;#39;mem_cluster_links&amp;#39; INFO field&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and/or &amp;#39;send-buffer-allocated&amp;#39; entries in the &amp;#39;CLUSTER LINKS` command output continuously increase.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Minimum limit of 1gb is recommended so that cluster link buffer can fit in at least a single&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# PubSub message by default. (client-query-buffer-limit default value is 1gb)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-link-sendbuf-limit 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Clusters can configure their announced hostname using this config. This is a common use case for &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# applications that need to use TLS Server Name Indication (SNI) or dealing with DNS based&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# routing. By default this value is only shown as additional metadata in the CLUSTER SLOTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command, but can be changed using &amp;#39;cluster-preferred-endpoint-type&amp;#39; config. This value is &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# communicated along the clusterbus to all nodes, setting it to an empty string will remove &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the hostname and also propagate the removal.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-announce-hostname &amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Clusters can advertise how clients should connect to them using either their IP address,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a user defined hostname, or by declaring they have no endpoint. Which endpoint is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# shown as the preferred endpoint is set by using the cluster-preferred-endpoint-type&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config with values &amp;#39;ip&amp;#39;, &amp;#39;hostname&amp;#39;, or &amp;#39;unknown-endpoint&amp;#39;. This value controls how&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the endpoint returned for MOVED/ASKING requests as well as the first field of CLUSTER SLOTS. &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the preferred endpoint type is set to hostname, but no announced hostname is set, a &amp;#39;?&amp;#39; &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will be returned instead.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When a cluster advertises itself as having an unknown endpoint, it&amp;#39;s indicating that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the server doesn&amp;#39;t know how clients can reach the cluster. This can happen in certain &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# networking situations where there are multiple possible routes to the node, and the &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# server doesn&amp;#39;t know which one the client took. In this case, the server is expecting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the client to reach out on the same endpoint it used for making the last request, but use&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the port provided in the response.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-preferred-endpoint-type ip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In order to setup your cluster make sure to read the documentation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# available at https://redis.io web site.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;########################## CLUSTER DOCKER/NAT support ########################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In certain deployments, Redis Cluster nodes address discovery fails, because&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# addresses are NAT-ted or because ports are forwarded (the typical case is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Docker and other containers).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In order to make Redis Cluster working in such environments, a static&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# configuration where each node knows its public address is needed. The&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# following four options are used for this scope, and are:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * cluster-announce-ip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * cluster-announce-port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * cluster-announce-tls-port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# * cluster-announce-bus-port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Each instructs the node about its address, client ports (for connections&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# without and with TLS) and cluster message bus port. The information is then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# published in the header of the bus packets so that other nodes will be able to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# correctly map the address of the node publishing the information.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to zero, then cluster-announce-port refers to the TLS port. Note also that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-announce-tls-port has no effect if cluster-tls is set to no.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If the above options are not used, the normal Redis Cluster auto-detection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will be used instead.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that when remapped, the bus port may not be at the fixed offset of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# clients port + 10000, so you can specify any port and bus-port depending&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# on how they get remapped. If the bus-port is not set, a fixed offset of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 10000 will be used as usual.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-announce-ip 10.1.1.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-announce-tls-port 6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-announce-port 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cluster-announce-bus-port 6380&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################## SLOW LOG ###################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The Redis Slow Log is a system to log queries that exceeded a specified&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# execution time. The execution time does not include the I/O operations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# like talking with the client, sending the reply and so forth,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# but just the time needed to actually execute the command (this is the only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# stage of command execution where the thread is blocked and can not serve&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# other requests in the meantime).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You can configure the slow log with two parameters: one tells Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# what is the execution time, in microseconds, to exceed in order for the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# command to get logged, and the other parameter is the length of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# slow log. When a new command is logged the oldest one is removed from the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# queue of logged commands.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The following time is expressed in microseconds, so 1000000 is equivalent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to one second. Note that a negative number disables the slow log, while&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a value of zero forces the logging of every command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;slowlog&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;slower&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# There is no limit to this length. Just be aware that it will consume memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You can reclaim memory used by the slow log with SLOWLOG RESET.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;slowlog&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ LATENCY MONITOR ##############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The Redis latency monitoring subsystem samples different operations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# at runtime in order to collect data related to possible sources of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# latency of a Redis instance.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Via the LATENCY command this information is available to the user that can&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# print graphs and obtain reports.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The system only logs operations that were performed in a time equal or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# greater than the amount of milliseconds specified via the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# latency-monitor-threshold configuration directive. When its value is set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to zero, the latency monitor is turned off.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default latency monitoring is disabled since it is mostly not needed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# if you don&amp;#39;t have latency issues, and collecting data has a performance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# impact, that while very small, can be measured under big load. Latency&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# monitoring can easily be enabled at runtime using the command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;CONFIG SET latency-monitor-threshold &amp;lt;milliseconds&amp;gt;&amp;#34; if needed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;################################ LATENCY TRACKING ##############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The Redis extended latency monitoring tracks the per command latencies and enables&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# exporting the percentile distribution via the INFO latencystats command,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and cumulative latency distributions (histograms) via the LATENCY command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default, the extended latency monitoring is enabled since the overhead&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of keeping track of the command latency is very small.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# latency-tracking yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default the exported latency percentiles via the INFO latencystats command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are the p50, p99, and p999.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# latency-tracking-info-percentiles 50 99 99.9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################# EVENT NOTIFICATION ##############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis can notify Pub/Sub clients about events happening in the key space.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This feature is documented at https://redis.io/topics/notifications&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For instance if keyspace events notification is enabled, and a client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# performs a DEL operation on key &amp;#34;foo&amp;#34; stored in the Database 0, two&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# messages will be published via Pub/Sub:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# PUBLISH __keyspace@0__:foo del&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# PUBLISH __keyevent@0__:del foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is possible to select the events that Redis will notify among a set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of classes. Every class is identified by a single character:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# K Keyspace events, published with __keyspace@&amp;lt;db&amp;gt;__ prefix.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# E Keyevent events, published with __keyevent@&amp;lt;db&amp;gt;__ prefix.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# g Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# $ String commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# l List commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# s Set commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# h Hash commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# z Sorted set commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# x Expired events (events generated every time a key expires)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# e Evicted events (events generated when a key is evicted for maxmemory)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# n New key events (Note: not included in the &amp;#39;A&amp;#39; class)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# t Stream commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# d Module key type events&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# m Key-miss events (Note: It is not included in the &amp;#39;A&amp;#39; class)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A Alias for g$lshzxetd, so that the &amp;#34;AKE&amp;#34; string means all the events&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# (Except key-miss events which are excluded from &amp;#39;A&amp;#39; due to their&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# unique nature).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The &amp;#34;notify-keyspace-events&amp;#34; takes as argument a string that is composed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of zero or multiple characters. The empty string means that notifications&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are disabled.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Example: to enable list and generic events, from the point of view of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# event name, use:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# notify-keyspace-events Elg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Example 2: to get the stream of the expired keys subscribing to channel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# name __keyevent@0__:expired use:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# notify-keyspace-events Ex&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default all notifications are disabled because most users don&amp;#39;t need&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this feature and the feature has some overhead. Note that if you don&amp;#39;t&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# specify at least one of K or E, no events will be delivered.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;notify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keyspace&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;############################### ADVANCED CONFIG ###############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Hashes are encoded using a memory efficient data structure when they have a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# small number of entries, and the biggest entry does not exceed a given&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# threshold. These thresholds can be configured using the following directives.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;listpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;listpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Lists are also encoded in a special way to save a lot of space.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The number of entries allowed per internal list node can be specified&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# as a fixed maximum size or a maximum number of elements.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For a fixed maximum size, use -5 through -1, meaning:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -5: max size: 64 Kb &amp;lt;-- not recommended for normal workloads&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -4: max size: 32 Kb &amp;lt;-- not recommended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -3: max size: 16 Kb &amp;lt;-- probably not recommended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -2: max size: 8 Kb &amp;lt;-- good&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -1: max size: 4 Kb &amp;lt;-- good&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Positive numbers mean store up to _exactly_ that number of elements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# per list node.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# but if your use case is unique, adjust the settings as necessary.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;listpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Lists may also be compressed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Compress depth is the number of quicklist ziplist nodes from *each* side of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the list to *exclude* from compression. The head and tail of the list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# are always uncompressed for fast push/pop operations. Settings are:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 0: disable all list compression&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1: depth 1 means &amp;#34;don&amp;#39;t start compressing until after 1 node into the list,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# going from either the head or tail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# So: [head]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[tail]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# [head], [tail] will always be uncompressed; inner nodes will compress.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2: [head]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2 here means: don&amp;#39;t compress head or head-&amp;gt;next or tail-&amp;gt;prev or tail,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# but compress all nodes between them.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3: [head]-&amp;gt;[next]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# etc.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;compress&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Sets have a special encoding in just one case: when a set is composed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of just strings that happen to be integers in radix 10 in the range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of 64 bit signed integers.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The following configuration setting sets the limit in the size of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# set in order to use this special memory saving encoding.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Similarly to hashes and lists, sorted sets are also specially encoded in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# order to save a lot of space. This encoding is only used when the length and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# elements of a sorted set are below the following limits:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;zset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;listpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;zset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;listpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# HyperLogLog sparse representation bytes limit. The limit includes the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 16 bytes header. When an HyperLogLog using the sparse representation crosses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this limit, it is converted into the dense representation.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A value greater than 16000 is totally useless, since at that point the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# dense representation is more memory efficient.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The suggested value is ~ 3000 in order to have the benefits of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the space efficient encoding without slowing down too much PFADD,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# which is O(N) with the sparse encoding. The value can be raised to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ~ 10000 when CPU is not a concern, but space is, and the data set is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;hll&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sparse&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Streams macro node max size / items. The stream data structure is a radix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tree of big nodes that encode multiple items inside. Using this configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# it is possible to configure how big a single node can be in bytes, and the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maximum number of items it may contain before switching to a new node when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# appending new stream entries. If any of the following settings are set to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# zero, the limit is ignored, so for instance it is possible to set just a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# max entries limit by setting max-bytes to 0 and max-entries to the desired&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# value.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# order to help rehashing the main Redis hash table (the one mapping top-level&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# keys to values). The hash table implementation Redis uses (see dict.c)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# performs a lazy rehashing: the more operation you run into a hash table&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that is rehashing, the more rehashing &amp;#34;steps&amp;#34; are performed, so if the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# server is idle the rehashing is never complete and some more memory is used&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# by the hash table.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default is to use this millisecond 10 times every second in order to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# actively rehash the main dictionaries, freeing memory when possible.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# If unsure:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# use &amp;#34;activerehashing no&amp;#34; if you have hard latency requirements and it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# not a good thing in your environment that Redis can reply from time to time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to queries with 2 milliseconds delay.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# use &amp;#34;activerehashing yes&amp;#34; if you don&amp;#39;t have such hard requirements but&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# want to free memory asap when possible.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;activerehashing&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The client output buffer limits can be used to force disconnection of clients&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that are not reading data from the server fast enough for some reason (a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# common reason is that a Pub/Sub client can&amp;#39;t consume messages as fast as the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# publisher can produce them).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The limit can be set differently for the three different classes of clients:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# normal -&amp;gt; normal clients including MONITOR clients&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# replica -&amp;gt; replica clients&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# pubsub -&amp;gt; clients subscribed to at least one pubsub channel or pattern&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The syntax of every client-output-buffer-limit directive is the following:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# client-output-buffer-limit &amp;lt;class&amp;gt; &amp;lt;hard limit&amp;gt; &amp;lt;soft limit&amp;gt; &amp;lt;soft seconds&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A client is immediately disconnected once the hard limit is reached, or if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the soft limit is reached and remains reached for the specified number of&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# seconds (continuously).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# So for instance if the hard limit is 32 megabytes and the soft limit is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 16 megabytes / 10 seconds, the client will get disconnected immediately&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# if the size of the output buffers reach 32 megabytes, but will also get&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# disconnected if the client reaches 16 megabytes and continuously overcomes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the limit for 10 seconds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default normal clients are not limited because they don&amp;#39;t receive data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# without asking (in a push way), but just after a request, so only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# asynchronous clients may create a scenario where data is requested faster&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# than it can read.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Instead there is a default limit for pubsub and replica clients, since&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# subscribers and replicas receive data in a push fashion.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Note that it doesn&amp;#39;t make sense to set the replica clients output buffer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# limit lower than the repl-backlog-size config (partial sync will succeed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and then replica will get disconnected).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Such a configuration is ignored (the size of repl-backlog-size will be used).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This doesn&amp;#39;t have memory consumption implications since the replica client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will share the backlog buffers memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Both the hard or the soft limit can be disabled by setting them to zero.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt; &lt;span class="n"&gt;replica&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt; &lt;span class="n"&gt;pubsub&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Client query buffers accumulate new commands. They are limited to a fixed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# amount by default in order to avoid that a protocol desynchronization (for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# instance due to a bug in the client) will lead to unbound memory usage in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the query buffer. However you can configure it here if you have very special&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# needs, such us huge multi/exec requests or alike.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# client-query-buffer-limit 1gb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In some scenarios client connections can hog up memory leading to OOM&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# errors or data eviction. To avoid this we can cap the accumulated memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# used by all client connections (all pubsub and normal clients). Once we&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# reach that limit connections will be dropped by the server freeing up&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# memory. The server will attempt to drop the connections using the most &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# memory first. We call this mechanism &amp;#34;client eviction&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Client eviction is configured using the maxmemory-clients setting as follows:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 0 - client eviction is disabled (default)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A memory value can be used for the client eviction threshold,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxmemory-clients 1g&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# A percentage value (between 1% and 100%) means the client eviction threshold&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is based on a percentage of the maxmemory setting. For example to set client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# eviction at 5% of maxmemory:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# maxmemory-clients 5%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In the Redis protocol, bulk requests, that are, elements representing single&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# strings, are normally limited to 512 mb. However you can change this limit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# here, but must be 1mb or greater&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# proto-max-bulk-len 512mb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis calls an internal function to perform many background tasks, like&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# closing connections of clients in timeout, purging expired keys that are&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# never requested, and so forth.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Not all tasks are performed with the same frequency, but Redis checks for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# tasks to perform according to the specified &amp;#34;hz&amp;#34; value.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# By default &amp;#34;hz&amp;#34; is set to 10. Raising the value will use more CPU when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis is idle, but at the same time will make Redis more responsive when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# there are many keys expiring at the same time, and timeouts may be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# handled with more precision.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The range is between 1 and 500, however a value over 100 is usually not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a good idea. Most users should use the default of 10 and raise this up to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 100 only in environments where very low latency is required.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;hz&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Normally it is useful to have an HZ value which is proportional to the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# number of clients connected. This is useful in order, for instance, to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# avoid too many clients are processed for each background task invocation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to avoid latency spikes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Since the default HZ value by default is conservatively set to 10, Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# offers, and enables by default, the ability to use an adaptive HZ value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# which will temporarily raise when there are many connected clients.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When dynamic HZ is enabled, the actual configured HZ will be used&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# as a baseline, but multiples of the configured HZ value will be actually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# used as needed once more clients are connected. In this way an idle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# instance will use very little CPU time while a busy instance will be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# more responsive.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hz&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When a child rewrites the AOF file, if the following option is enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the file will be fsync-ed every 4 MB of data generated. This is useful&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to commit the file to the disk more incrementally and avoid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# big latency spikes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;aof&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rewrite&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;incremental&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fsync&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# When redis saves RDB file, if the following option is enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the file will be fsync-ed every 4 MB of data generated. This is useful&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in order to commit the file to the disk more incrementally and avoid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# big latency spikes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;rdb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;incremental&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fsync&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# idea to start with the default settings and only change them after investigating&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# how to improve the performances and how the keys LFU change over time, which&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# is possible to inspect via the OBJECT FREQ command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# There are two tunable parameters in the Redis LFU implementation: the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# counter logarithm factor and the counter decay time. It is important to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# understand what the two parameters mean before changing them.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The LFU counter is just 8 bits per key, it&amp;#39;s maximum value is 255, so Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# uses a probabilistic increment with logarithmic behavior. Given the value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# of the old counter, when a key is accessed, the counter is incremented in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this way:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1. A random number R between 0 and 1 is extracted.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3. The counter is incremented only if R &amp;lt; P.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default lfu-log-factor is 10. This is a table of how the frequency&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# counter changes with a different number of accesses with different&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# logarithmic factors:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | factor | 100 hits | 1000 hits | 100K hits | 1M hits | 10M hits |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | 0 | 104 | 255 | 255 | 255 | 255 |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | 1 | 18 | 49 | 255 | 255 | 255 |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | 10 | 10 | 18 | 142 | 255 | 255 |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# | 100 | 8 | 11 | 49 | 143 | 255 |&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# +--------+------------+------------+------------+------------+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# NOTE: The above table was obtained by running the following commands:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# redis-benchmark -n 1000000 incr foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# redis-cli object freq foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# NOTE 2: The counter initial value is 5 in order to give new objects a chance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to accumulate hits.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The counter decay time is the time, in minutes, that must elapse in order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# for the key counter to be divided by two (or decremented if it has a value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# less &amp;lt;= 10).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The default value for the lfu-decay-time is 1. A special value of 0 means to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# decay the counter every time it happens to be scanned.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# lfu-log-factor 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# lfu-decay-time 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;########################### ACTIVE DEFRAGMENTATION #######################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# What is active defragmentation?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Active (online) defragmentation allows a Redis server to compact the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# spaces left between small allocations and deallocations of data in memory,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# thus allowing to reclaim back memory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Fragmentation is a natural process that happens with every allocator (but&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# less so with Jemalloc, fortunately) and certain workloads. Normally a server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# restart is needed in order to lower the fragmentation, or at least to flush&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# away all the data and create it again. However thanks to this feature&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# implemented by Oran Agra for Redis 4.0 this process can happen at runtime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in a &amp;#34;hot&amp;#34; way, while the server is running.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Basically when the fragmentation is over a certain level (see the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# configuration options below) Redis will start to create new copies of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# values in contiguous memory regions by exploiting certain specific Jemalloc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# features (in order to understand if an allocation is causing fragmentation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# and to allocate it in a better place), and at the same time, will release the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# old copies of the data. This process, repeated incrementally for all the keys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# will cause the fragmentation to drop back to normal values.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Important things to understand:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1. This feature is disabled by default, and only works if you compiled Redis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to use the copy of Jemalloc we ship with the source code of Redis.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is the default with Linux builds.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2. You never need to enable this feature if you don&amp;#39;t have fragmentation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# issues.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3. Once you experience fragmentation, you can enable this feature when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# needed with the command &amp;#34;CONFIG SET activedefrag yes&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# The configuration parameters are able to fine tune the behavior of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# defragmentation process. If you are not sure about what they mean it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a good idea to leave the defaults untouched.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Active defragmentation is disabled by default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# activedefrag no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Minimum amount of fragmentation waste to start active defrag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-defrag-ignore-bytes 100mb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Minimum percentage of fragmentation to start active defrag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-defrag-threshold-lower 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Maximum percentage of fragmentation at which we use maximum effort&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-defrag-threshold-upper 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Minimal effort for defrag in CPU percentage, to be used when the lower&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# threshold is reached&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-defrag-cycle-min 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Maximal effort for defrag in CPU percentage, to be used when the upper&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# threshold is reached&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-defrag-cycle-max 25&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Maximum number of set/hash/zset/list fields that will be processed from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the main dictionary scan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# active-defrag-max-scan-fields 1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Jemalloc background thread for purging will be enabled by default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;jemalloc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# It is possible to pin different threads and processes of Redis to specific&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# CPUs in your system, in order to maximize the performances of the server.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# This is useful both in order to pin different Redis threads in different&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# CPUs, but also in order to make sure that multiple Redis instances running&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# in the same host will be pinned to different CPUs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Normally you can do this using the &amp;#34;taskset&amp;#34; command, however it is also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# possible to this via Redis configuration directly, both in Linux and FreeBSD.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# You can pin the server/IO threads, bio threads, aof rewrite child process, and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the bgsave child process. The syntax to specify the cpu list is the same as&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# the taskset command:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set redis server/io threads to cpu affinity 0,2,4,6:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# server_cpulist 0-7:2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set bio threads to cpu affinity 1,3:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bio_cpulist 1,3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set aof rewrite child process to cpu affinity 8,9,10,11:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# aof_rewrite_cpulist 8-11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Set bgsave child process to cpu affinity 1,10,11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bgsave_cpulist 1,10-11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# In some cases redis will emit warnings and even refuse to start if it detects&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# that the system is in bad state, it is possible to suppress these warnings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# by setting the following config which takes a space delimited list of warnings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# to suppress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ignore-warnings ARM64-COW-BUG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item></channel></rss>